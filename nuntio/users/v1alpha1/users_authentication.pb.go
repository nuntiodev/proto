// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nuntio/users/v1alpha1/users_authentication.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request of a Authentication.Ping RPC
type AuthenticationServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServicePingRequest) Reset() {
	*x = AuthenticationServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServicePingRequest) ProtoMessage() {}

func (x *AuthenticationServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServicePingRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServicePingRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{0}
}

// The response of a Authentication.Ping RPC
type AuthenticationServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServicePingResponse) Reset() {
	*x = AuthenticationServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServicePingResponse) ProtoMessage() {}

func (x *AuthenticationServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServicePingResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServicePingResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{1}
}

// The request of a Authentication.UpdateOAuth2Provider RPC
type AuthenticationServiceUpdateOAuth2ProviderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The public key of the provider
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The public key of the provider
	PrivateKey string `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	// The type of provider
	Provider OAuthProviderType `protobuf:"varint,4,opt,name=provider,proto3,enum=nuntio.users.v1alpha1.OAuthProviderType" json:"provider,omitempty"`
	// If the provider is enabled or not
	Enabled bool `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) Reset() {
	*x = AuthenticationServiceUpdateOAuth2ProviderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateOAuth2ProviderRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateOAuth2ProviderRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateOAuth2ProviderRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{2}
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) GetProvider() OAuthProviderType {
	if x != nil {
		return x.Provider
	}
	return OAuthProviderType_OAUTH_PROVIDER_TYPE_UNSPECIFIED
}

func (x *AuthenticationServiceUpdateOAuth2ProviderRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// The response of a Authentication.UpdateOAuth2Provider RPC
type AuthenticationServiceUpdateCallbacksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateCallbacksResponse) Reset() {
	*x = AuthenticationServiceUpdateCallbacksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateCallbacksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateCallbacksResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateCallbacksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateCallbacksResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateCallbacksResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{3}
}

// The response of a Authentication.UpdateOAuth2Provider RPC
type AuthenticationServiceUpdateOAuth2ProviderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateOAuth2ProviderResponse) Reset() {
	*x = AuthenticationServiceUpdateOAuth2ProviderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateOAuth2ProviderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateOAuth2ProviderResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateOAuth2ProviderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateOAuth2ProviderResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateOAuth2ProviderResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{4}
}

// The request of a Authentication.UpdateCallbacks RPC
type AuthenticationServiceUpdateCallbacksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The callbacks to be updated
	Callbacks []string `protobuf:"bytes,1,rep,name=callbacks,proto3" json:"callbacks,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceUpdateCallbacksRequest) Reset() {
	*x = AuthenticationServiceUpdateCallbacksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateCallbacksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateCallbacksRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateCallbacksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateCallbacksRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateCallbacksRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{5}
}

func (x *AuthenticationServiceUpdateCallbacksRequest) GetCallbacks() []string {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

func (x *AuthenticationServiceUpdateCallbacksRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The request of a Authentication.UpdateHashingAlgorithm RPC
type AuthenticationServiceUpdateHashingAlgorithmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The hashing algorithm to use as default
	Algorithm HashingAlgorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=nuntio.users.v1alpha1.HashingAlgorithm" json:"algorithm,omitempty"`
	// The Bcrypt values to update
	Bcrypt *Bcrypt `protobuf:"bytes,2,opt,name=bcrypt,proto3" json:"bcrypt,omitempty"`
	// The Scrypt values to update
	Scrypt *Scrypt `protobuf:"bytes,3,opt,name=scrypt,proto3" json:"scrypt,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) Reset() {
	*x = AuthenticationServiceUpdateHashingAlgorithmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateHashingAlgorithmRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateHashingAlgorithmRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateHashingAlgorithmRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{6}
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) GetAlgorithm() HashingAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return HashingAlgorithm_HASHING_ALGORITHM_UNSPECIFIED
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) GetBcrypt() *Bcrypt {
	if x != nil {
		return x.Bcrypt
	}
	return nil
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) GetScrypt() *Scrypt {
	if x != nil {
		return x.Scrypt
	}
	return nil
}

func (x *AuthenticationServiceUpdateHashingAlgorithmRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.UpdateHashingAlgorithm RPC
type AuthenticationServiceUpdateHashingAlgorithmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateHashingAlgorithmResponse) Reset() {
	*x = AuthenticationServiceUpdateHashingAlgorithmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateHashingAlgorithmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateHashingAlgorithmResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateHashingAlgorithmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateHashingAlgorithmResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateHashingAlgorithmResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{7}
}

// The request of a Authentication.UpdateTokenSettings RPC
type AuthenticationServiceUpdateTokenSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Defines for how long the access token lives
	AccessTokenTtl int32 `protobuf:"varint,1,opt,name=access_token_ttl,json=accessTokenTtl,proto3" json:"access_token_ttl,omitempty"`
	// Defines for how long the access refresh lives
	RefreshTokenTtl int32 `protobuf:"varint,2,opt,name=refresh_token_ttl,json=refreshTokenTtl,proto3" json:"refresh_token_ttl,omitempty"`
	// Defines for how long the verification code is valid
	VerificationCodeTtl int32 `protobuf:"varint,3,opt,name=verification_code_ttl,json=verificationCodeTtl,proto3" json:"verification_code_ttl,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) Reset() {
	*x = AuthenticationServiceUpdateTokenSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateTokenSettingsRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateTokenSettingsRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateTokenSettingsRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{8}
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) GetAccessTokenTtl() int32 {
	if x != nil {
		return x.AccessTokenTtl
	}
	return 0
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) GetRefreshTokenTtl() int32 {
	if x != nil {
		return x.RefreshTokenTtl
	}
	return 0
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) GetVerificationCodeTtl() int32 {
	if x != nil {
		return x.VerificationCodeTtl
	}
	return 0
}

func (x *AuthenticationServiceUpdateTokenSettingsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.UpdateTokenSettings RPC
type AuthenticationServiceUpdateTokenSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateTokenSettingsResponse) Reset() {
	*x = AuthenticationServiceUpdateTokenSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateTokenSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateTokenSettingsResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateTokenSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateTokenSettingsResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateTokenSettingsResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{9}
}

// The request of a Authentication.UpdateTemplate RPC
type AuthenticationServiceUpdateTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The template to update
	Template *Template `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceUpdateTemplateRequest) Reset() {
	*x = AuthenticationServiceUpdateTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateTemplateRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateTemplateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateTemplateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{10}
}

func (x *AuthenticationServiceUpdateTemplateRequest) GetTemplate() *Template {
	if x != nil {
		return x.Template
	}
	return nil
}

func (x *AuthenticationServiceUpdateTemplateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.UpdateTemplate RPC
type AuthenticationServiceUpdateTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateTemplateResponse) Reset() {
	*x = AuthenticationServiceUpdateTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateTemplateResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateTemplateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateTemplateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{11}
}

// The request of a Authentication.ValidateCredentials RPC
type AuthenticationServiceValidateCredentialsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The password to validate
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceValidateCredentialsRequest) Reset() {
	*x = AuthenticationServiceValidateCredentialsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceValidateCredentialsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceValidateCredentialsRequest) ProtoMessage() {}

func (x *AuthenticationServiceValidateCredentialsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceValidateCredentialsRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceValidateCredentialsRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{12}
}

func (x *AuthenticationServiceValidateCredentialsRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AuthenticationServiceValidateCredentialsRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticationServiceValidateCredentialsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.ValidateCredentials RPC
type AuthenticationServiceValidateCredentialsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceValidateCredentialsResponse) Reset() {
	*x = AuthenticationServiceValidateCredentialsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceValidateCredentialsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceValidateCredentialsResponse) ProtoMessage() {}

func (x *AuthenticationServiceValidateCredentialsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceValidateCredentialsResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceValidateCredentialsResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{13}
}

// The request of a Authentication.CreateTokenPair RPC
type AuthenticationServiceCreateTokenPairRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceCreateTokenPairRequest) Reset() {
	*x = AuthenticationServiceCreateTokenPairRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceCreateTokenPairRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceCreateTokenPairRequest) ProtoMessage() {}

func (x *AuthenticationServiceCreateTokenPairRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceCreateTokenPairRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceCreateTokenPairRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{14}
}

func (x *AuthenticationServiceCreateTokenPairRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AuthenticationServiceCreateTokenPairRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.CreateTokenPair RPC
type AuthenticationServiceCreateTokenPairResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result of the method
	TokenPair *TokenPair `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
}

func (x *AuthenticationServiceCreateTokenPairResponse) Reset() {
	*x = AuthenticationServiceCreateTokenPairResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceCreateTokenPairResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceCreateTokenPairResponse) ProtoMessage() {}

func (x *AuthenticationServiceCreateTokenPairResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceCreateTokenPairResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceCreateTokenPairResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{15}
}

func (x *AuthenticationServiceCreateTokenPairResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

// The request of a Authentication.ValidateToken RPC
type AuthenticationServiceValidateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The access token to validate
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// The refresh token to validate
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Specifies if to check status in db (blocked)
	ValidateDb bool `protobuf:"varint,4,opt,name=validate_db,json=validateDb,proto3" json:"validate_db,omitempty"`
}

func (x *AuthenticationServiceValidateTokenRequest) Reset() {
	*x = AuthenticationServiceValidateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceValidateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceValidateTokenRequest) ProtoMessage() {}

func (x *AuthenticationServiceValidateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceValidateTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceValidateTokenRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{16}
}

func (x *AuthenticationServiceValidateTokenRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthenticationServiceValidateTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthenticationServiceValidateTokenRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceValidateTokenRequest) GetValidateDb() bool {
	if x != nil {
		return x.ValidateDb
	}
	return false
}

// The response of a Authentication.ValidateToken RPC
type AuthenticationServiceValidateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the user contained by the jwt
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// Return the namespace contained in the jwt
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceValidateTokenResponse) Reset() {
	*x = AuthenticationServiceValidateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceValidateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceValidateTokenResponse) ProtoMessage() {}

func (x *AuthenticationServiceValidateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceValidateTokenResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceValidateTokenResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{17}
}

func (x *AuthenticationServiceValidateTokenResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *AuthenticationServiceValidateTokenResponse) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The request of a Authentication.SendResetPasswordEmail RPC
type AuthenticationServiceSendResetPasswordEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email to send the reset-password-email to
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceSendResetPasswordEmailRequest) Reset() {
	*x = AuthenticationServiceSendResetPasswordEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendResetPasswordEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendResetPasswordEmailRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendResetPasswordEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendResetPasswordEmailRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendResetPasswordEmailRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{18}
}

func (x *AuthenticationServiceSendResetPasswordEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticationServiceSendResetPasswordEmailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.SendResetPasswordEmail RPC
type AuthenticationServiceSendResetPasswordEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result container the hashed code
	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendResetPasswordEmailResponse) Reset() {
	*x = AuthenticationServiceSendResetPasswordEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendResetPasswordEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendResetPasswordEmailResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendResetPasswordEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendResetPasswordEmailResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendResetPasswordEmailResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{19}
}

func (x *AuthenticationServiceSendResetPasswordEmailResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.SendResetPasswordText RPC
type AuthenticationServiceSendResetPasswordTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number to send the reset-password-text to
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceSendResetPasswordTextRequest) Reset() {
	*x = AuthenticationServiceSendResetPasswordTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendResetPasswordTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendResetPasswordTextRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendResetPasswordTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendResetPasswordTextRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendResetPasswordTextRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{20}
}

func (x *AuthenticationServiceSendResetPasswordTextRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AuthenticationServiceSendResetPasswordTextRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.SendResetPasswordText RPC
type AuthenticationServiceSendResetPasswordTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result container the hashed code
	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendResetPasswordTextResponse) Reset() {
	*x = AuthenticationServiceSendResetPasswordTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendResetPasswordTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendResetPasswordTextResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendResetPasswordTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendResetPasswordTextResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendResetPasswordTextResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{21}
}

func (x *AuthenticationServiceSendResetPasswordTextResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.SendResetPasswordEmail RPC
type AuthenticationServiceSendVerificationEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email to send the reset-password-email to
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceSendVerificationEmailRequest) Reset() {
	*x = AuthenticationServiceSendVerificationEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendVerificationEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendVerificationEmailRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendVerificationEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendVerificationEmailRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendVerificationEmailRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{22}
}

func (x *AuthenticationServiceSendVerificationEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticationServiceSendVerificationEmailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.SendResetPasswordEmail RPC
type AuthenticationServiceSendVerificationEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result container the hashed code
	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendVerificationEmailResponse) Reset() {
	*x = AuthenticationServiceSendVerificationEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendVerificationEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendVerificationEmailResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendVerificationEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendVerificationEmailResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendVerificationEmailResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{23}
}

func (x *AuthenticationServiceSendVerificationEmailResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.SendResetPasswordText RPC
type AuthenticationServiceSendVerificationTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone number to send the reset-password-text to
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceSendVerificationTextRequest) Reset() {
	*x = AuthenticationServiceSendVerificationTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendVerificationTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendVerificationTextRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendVerificationTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendVerificationTextRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendVerificationTextRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{24}
}

func (x *AuthenticationServiceSendVerificationTextRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AuthenticationServiceSendVerificationTextRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.SendResetPasswordText RPC
type AuthenticationServiceSendVerificationTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The result container the hashed code
	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendVerificationTextResponse) Reset() {
	*x = AuthenticationServiceSendVerificationTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendVerificationTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendVerificationTextResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendVerificationTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendVerificationTextResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendVerificationTextResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{25}
}

func (x *AuthenticationServiceSendVerificationTextResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.VerifyEmail RPC
type AuthenticationServiceVerifyEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The email that was sent a code to
	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	// The code sent to the email
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceVerifyEmailRequest) Reset() {
	*x = AuthenticationServiceVerifyEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyEmailRequest) ProtoMessage() {}

func (x *AuthenticationServiceVerifyEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyEmailRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyEmailRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{26}
}

func (x *AuthenticationServiceVerifyEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticationServiceVerifyEmailRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticationServiceVerifyEmailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.VerifyEmail RPC
type AuthenticationServiceVerifyEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceVerifyEmailResponse) Reset() {
	*x = AuthenticationServiceVerifyEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyEmailResponse) ProtoMessage() {}

func (x *AuthenticationServiceVerifyEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyEmailResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyEmailResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{27}
}

// The request of a Authentication.VerifyPhone RPC
type AuthenticationServiceVerifyPhoneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The phone numnber that was sent a code to
	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	// The code sent to the phone
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceVerifyPhoneRequest) Reset() {
	*x = AuthenticationServiceVerifyPhoneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyPhoneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyPhoneRequest) ProtoMessage() {}

func (x *AuthenticationServiceVerifyPhoneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyPhoneRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyPhoneRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{28}
}

func (x *AuthenticationServiceVerifyPhoneRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *AuthenticationServiceVerifyPhoneRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticationServiceVerifyPhoneRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.VerifyPhone RPC
type AuthenticationServiceVerifyPhoneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceVerifyPhoneResponse) Reset() {
	*x = AuthenticationServiceVerifyPhoneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyPhoneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyPhoneResponse) ProtoMessage() {}

func (x *AuthenticationServiceVerifyPhoneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyPhoneResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyPhoneResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{29}
}

// The request of a Authentication.ResetPassword RPC
type AuthenticationServiceResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The new password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The code sent to the phone
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceResetPasswordRequest) Reset() {
	*x = AuthenticationServiceResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceResetPasswordRequest) ProtoMessage() {}

func (x *AuthenticationServiceResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{30}
}

func (x *AuthenticationServiceResetPasswordRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AuthenticationServiceResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticationServiceResetPasswordRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticationServiceResetPasswordRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.ResetPassword RPC
type AuthenticationServiceResetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceResetPasswordResponse) Reset() {
	*x = AuthenticationServiceResetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceResetPasswordResponse) ProtoMessage() {}

func (x *AuthenticationServiceResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{31}
}

// The request of a Authentication.ContinueWith RPC
type AuthenticationServiceContinueWithRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The code sent to the phone
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The OAuth provider used for "login with x"
	Provider OAuthProviderType `protobuf:"varint,3,opt,name=provider,proto3,enum=nuntio.users.v1alpha1.OAuthProviderType" json:"provider,omitempty"`
	// The requested redirect addr
	RedirectAddr string `protobuf:"bytes,4,opt,name=redirect_addr,json=redirectAddr,proto3" json:"redirect_addr,omitempty"`
}

func (x *AuthenticationServiceContinueWithRequest) Reset() {
	*x = AuthenticationServiceContinueWithRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceContinueWithRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceContinueWithRequest) ProtoMessage() {}

func (x *AuthenticationServiceContinueWithRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceContinueWithRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceContinueWithRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{32}
}

func (x *AuthenticationServiceContinueWithRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthenticationServiceContinueWithRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceContinueWithRequest) GetProvider() OAuthProviderType {
	if x != nil {
		return x.Provider
	}
	return OAuthProviderType_OAUTH_PROVIDER_TYPE_UNSPECIFIED
}

func (x *AuthenticationServiceContinueWithRequest) GetRedirectAddr() string {
	if x != nil {
		return x.RedirectAddr
	}
	return ""
}

// The response of a Authentication.ContinueWith RPC
type AuthenticationServiceContinueWithResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair  `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	Status    LoginStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nuntio.users.v1alpha1.LoginStatus" json:"status,omitempty"`
}

func (x *AuthenticationServiceContinueWithResponse) Reset() {
	*x = AuthenticationServiceContinueWithResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceContinueWithResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceContinueWithResponse) ProtoMessage() {}

func (x *AuthenticationServiceContinueWithResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceContinueWithResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceContinueWithResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{33}
}

func (x *AuthenticationServiceContinueWithResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

func (x *AuthenticationServiceContinueWithResponse) GetStatus() LoginStatus {
	if x != nil {
		return x.Status
	}
	return LoginStatus_LOGIN_STATUS_UNSPECIFIED
}

// The request of a Authentication.Logout RPC
type AuthenticationServiceLogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the access token to logout
	AccessTokenId string `protobuf:"bytes,1,opt,name=access_token_id,json=accessTokenId,proto3" json:"access_token_id,omitempty"`
	// The jwt of the access token to logout
	Jwt string `protobuf:"bytes,2,opt,name=jwt,proto3" json:"jwt,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceLogoutRequest) Reset() {
	*x = AuthenticationServiceLogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceLogoutRequest) ProtoMessage() {}

func (x *AuthenticationServiceLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceLogoutRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceLogoutRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{34}
}

func (x *AuthenticationServiceLogoutRequest) GetAccessTokenId() string {
	if x != nil {
		return x.AccessTokenId
	}
	return ""
}

func (x *AuthenticationServiceLogoutRequest) GetJwt() string {
	if x != nil {
		return x.Jwt
	}
	return ""
}

func (x *AuthenticationServiceLogoutRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.Logout RPC
type AuthenticationServiceLogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceLogoutResponse) Reset() {
	*x = AuthenticationServiceLogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceLogoutResponse) ProtoMessage() {}

func (x *AuthenticationServiceLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceLogoutResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceLogoutResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{35}
}

// The request of a Authentication.Login RPC
type AuthenticationServiceLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The password of the user
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceLoginRequest) Reset() {
	*x = AuthenticationServiceLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceLoginRequest) ProtoMessage() {}

func (x *AuthenticationServiceLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceLoginRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceLoginRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{36}
}

func (x *AuthenticationServiceLoginRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *AuthenticationServiceLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthenticationServiceLoginRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.Login RPC
type AuthenticationServiceLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair  `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	Status    LoginStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nuntio.users.v1alpha1.LoginStatus" json:"status,omitempty"`
}

func (x *AuthenticationServiceLoginResponse) Reset() {
	*x = AuthenticationServiceLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceLoginResponse) ProtoMessage() {}

func (x *AuthenticationServiceLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceLoginResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceLoginResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{37}
}

func (x *AuthenticationServiceLoginResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

func (x *AuthenticationServiceLoginResponse) GetStatus() LoginStatus {
	if x != nil {
		return x.Status
	}
	return LoginStatus_LOGIN_STATUS_UNSPECIFIED
}

// The request of a Authentication.RefreshToken RPC
type AuthenticationServiceRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The refresh token used to generate new pair
	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *AuthenticationServiceRefreshTokenRequest) Reset() {
	*x = AuthenticationServiceRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceRefreshTokenRequest) ProtoMessage() {}

func (x *AuthenticationServiceRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{38}
}

func (x *AuthenticationServiceRefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// The request of a Authentication.RefreshToken RPC
type AuthenticationServiceRefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair  `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	Status    LoginStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nuntio.users.v1alpha1.LoginStatus" json:"status,omitempty"`
}

func (x *AuthenticationServiceRefreshTokenResponse) Reset() {
	*x = AuthenticationServiceRefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceRefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceRefreshTokenResponse) ProtoMessage() {}

func (x *AuthenticationServiceRefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceRefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{39}
}

func (x *AuthenticationServiceRefreshTokenResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

func (x *AuthenticationServiceRefreshTokenResponse) GetStatus() LoginStatus {
	if x != nil {
		return x.Status
	}
	return LoginStatus_LOGIN_STATUS_UNSPECIFIED
}

// The request of a Authentication.AuthenticationServiceInitializeAuthRequest RPC
type AuthenticationServiceInitializeAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Optional redirect address for OAuth2
	RedirectAddr *string `protobuf:"bytes,2,opt,name=redirect_addr,json=redirectAddr,proto3,oneof" json:"redirect_addr,omitempty"`
}

func (x *AuthenticationServiceInitializeAuthRequest) Reset() {
	*x = AuthenticationServiceInitializeAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceInitializeAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceInitializeAuthRequest) ProtoMessage() {}

func (x *AuthenticationServiceInitializeAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceInitializeAuthRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceInitializeAuthRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{40}
}

func (x *AuthenticationServiceInitializeAuthRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceInitializeAuthRequest) GetRedirectAddr() string {
	if x != nil && x.RedirectAddr != nil {
		return *x.RedirectAddr
	}
	return ""
}

// The response of a Authentication.AuthenticationServiceInitializeAuthRequest RPC
type AuthenticationServiceInitializeAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the namespace
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The logo of the namespace
	Logo string `protobuf:"bytes,2,opt,name=logo,proto3" json:"logo,omitempty"`
	// If signup is enabled
	EnableSignup bool `protobuf:"varint,3,opt,name=enable_signup,json=enableSignup,proto3" json:"enable_signup,omitempty"`
	// If login is enabled
	EnableLogin bool `protobuf:"varint,4,opt,name=enable_login,json=enableLogin,proto3" json:"enable_login,omitempty"`
	// If to validate password
	ValidatePassword bool `protobuf:"varint,5,opt,name=validate_password,json=validatePassword,proto3" json:"validate_password,omitempty"`
	// The public key of Users
	PublicKey string `protobuf:"bytes,6,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Array of supported login types
	SupportedLoginMechanisms []LoginType `protobuf:"varint,7,rep,packed,name=supported_login_mechanisms,json=supportedLoginMechanisms,proto3,enum=nuntio.users.v1alpha1.LoginType" json:"supported_login_mechanisms,omitempty"`
	// Array of callbacks
	Callbacks []string `protobuf:"bytes,8,rep,name=callbacks,proto3" json:"callbacks,omitempty"`
	// Map of oauth2 providers
	OauthProviders []*OAuthProvider `protobuf:"bytes,9,rep,name=oauth_providers,json=oauthProviders,proto3" json:"oauth_providers,omitempty"`
}

func (x *AuthenticationServiceInitializeAuthResponse) Reset() {
	*x = AuthenticationServiceInitializeAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceInitializeAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceInitializeAuthResponse) ProtoMessage() {}

func (x *AuthenticationServiceInitializeAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceInitializeAuthResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceInitializeAuthResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{41}
}

func (x *AuthenticationServiceInitializeAuthResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthenticationServiceInitializeAuthResponse) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *AuthenticationServiceInitializeAuthResponse) GetEnableSignup() bool {
	if x != nil {
		return x.EnableSignup
	}
	return false
}

func (x *AuthenticationServiceInitializeAuthResponse) GetEnableLogin() bool {
	if x != nil {
		return x.EnableLogin
	}
	return false
}

func (x *AuthenticationServiceInitializeAuthResponse) GetValidatePassword() bool {
	if x != nil {
		return x.ValidatePassword
	}
	return false
}

func (x *AuthenticationServiceInitializeAuthResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *AuthenticationServiceInitializeAuthResponse) GetSupportedLoginMechanisms() []LoginType {
	if x != nil {
		return x.SupportedLoginMechanisms
	}
	return nil
}

func (x *AuthenticationServiceInitializeAuthResponse) GetCallbacks() []string {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

func (x *AuthenticationServiceInitializeAuthResponse) GetOauthProviders() []*OAuthProvider {
	if x != nil {
		return x.OauthProviders
	}
	return nil
}

// The request of a Authentication.BlockToken RPC
type AuthenticationServiceBlockTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// token id to block
	TokenId *string `protobuf:"bytes,1,opt,name=token_id,json=tokenId,proto3,oneof" json:"token_id,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceBlockTokenRequest) Reset() {
	*x = AuthenticationServiceBlockTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceBlockTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceBlockTokenRequest) ProtoMessage() {}

func (x *AuthenticationServiceBlockTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceBlockTokenRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceBlockTokenRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{42}
}

func (x *AuthenticationServiceBlockTokenRequest) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

func (x *AuthenticationServiceBlockTokenRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.BlockToken RPC
type AuthenticationServiceBlockTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceBlockTokenResponse) Reset() {
	*x = AuthenticationServiceBlockTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceBlockTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceBlockTokenResponse) ProtoMessage() {}

func (x *AuthenticationServiceBlockTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceBlockTokenResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceBlockTokenResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{43}
}

// The request of a Authentication.UpdateLoginMechanisms RPC
type AuthenticationServiceUpdateLoginSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Array of supported login types
	SupportedLoginMechanisms []LoginType `protobuf:"varint,1,rep,packed,name=supported_login_mechanisms,json=supportedLoginMechanisms,proto3,enum=nuntio.users.v1alpha1.LoginType" json:"supported_login_mechanisms,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// to enable/disable singup
	EnableSignup *bool `protobuf:"varint,3,opt,name=enable_signup,json=enableSignup,proto3,oneof" json:"enable_signup,omitempty"`
	// to enable/disable login
	EnableLogin *bool `protobuf:"varint,4,opt,name=enable_login,json=enableLogin,proto3,oneof" json:"enable_login,omitempty"`
	// to enable/disable password validation
	ValidatePassword *bool `protobuf:"varint,5,opt,name=validate_password,json=validatePassword,proto3,oneof" json:"validate_password,omitempty"`
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) Reset() {
	*x = AuthenticationServiceUpdateLoginSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateLoginSettingsRequest) ProtoMessage() {}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateLoginSettingsRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateLoginSettingsRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{44}
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) GetSupportedLoginMechanisms() []LoginType {
	if x != nil {
		return x.SupportedLoginMechanisms
	}
	return nil
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) GetEnableSignup() bool {
	if x != nil && x.EnableSignup != nil {
		return *x.EnableSignup
	}
	return false
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) GetEnableLogin() bool {
	if x != nil && x.EnableLogin != nil {
		return *x.EnableLogin
	}
	return false
}

func (x *AuthenticationServiceUpdateLoginSettingsRequest) GetValidatePassword() bool {
	if x != nil && x.ValidatePassword != nil {
		return *x.ValidatePassword
	}
	return false
}

// The request of a Authentication.UpdateLoginMechanisms RPC
type AuthenticationServiceUpdateLoginSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceUpdateLoginSettingsResponse) Reset() {
	*x = AuthenticationServiceUpdateLoginSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceUpdateLoginSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceUpdateLoginSettingsResponse) ProtoMessage() {}

func (x *AuthenticationServiceUpdateLoginSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceUpdateLoginSettingsResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceUpdateLoginSettingsResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{45}
}

// The request of a Authentication.SendMagicEmail RPC
type AuthenticationServiceSendMagicEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The email to send the magic code to
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *AuthenticationServiceSendMagicEmailRequest) Reset() {
	*x = AuthenticationServiceSendMagicEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendMagicEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendMagicEmailRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendMagicEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendMagicEmailRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendMagicEmailRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{46}
}

func (x *AuthenticationServiceSendMagicEmailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceSendMagicEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// The response of a Authentication.SendMagicEmail RPC
type AuthenticationServiceSendMagicEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendMagicEmailResponse) Reset() {
	*x = AuthenticationServiceSendMagicEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendMagicEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendMagicEmailResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendMagicEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendMagicEmailResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendMagicEmailResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{47}
}

func (x *AuthenticationServiceSendMagicEmailResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.SendMagicText RPC
type AuthenticationServiceSendMagicTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The phone number to send the magic code to
	PhoneNumber string `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
}

func (x *AuthenticationServiceSendMagicTextRequest) Reset() {
	*x = AuthenticationServiceSendMagicTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendMagicTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendMagicTextRequest) ProtoMessage() {}

func (x *AuthenticationServiceSendMagicTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendMagicTextRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendMagicTextRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{48}
}

func (x *AuthenticationServiceSendMagicTextRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceSendMagicTextRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

// The response of a Authentication.SendMagicText RPC
type AuthenticationServiceSendMagicTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *AuthenticationServiceSendMagicTextResponse) Reset() {
	*x = AuthenticationServiceSendMagicTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceSendMagicTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceSendMagicTextResponse) ProtoMessage() {}

func (x *AuthenticationServiceSendMagicTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceSendMagicTextResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceSendMagicTextResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{49}
}

func (x *AuthenticationServiceSendMagicTextResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Authentication.VerifyMagicCode RPC
type AuthenticationServiceVerifyMagicCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *AuthenticationServiceVerifyMagicCodeRequest) Reset() {
	*x = AuthenticationServiceVerifyMagicCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyMagicCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyMagicCodeRequest) ProtoMessage() {}

func (x *AuthenticationServiceVerifyMagicCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyMagicCodeRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyMagicCodeRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{50}
}

func (x *AuthenticationServiceVerifyMagicCodeRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Authentication.VerifyMagicCode RPC
type AuthenticationServiceVerifyMagicCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
}

func (x *AuthenticationServiceVerifyMagicCodeResponse) Reset() {
	*x = AuthenticationServiceVerifyMagicCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceVerifyMagicCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceVerifyMagicCodeResponse) ProtoMessage() {}

func (x *AuthenticationServiceVerifyMagicCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceVerifyMagicCodeResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceVerifyMagicCodeResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{51}
}

func (x *AuthenticationServiceVerifyMagicCodeResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

// The request of a Authentication.Redirect RPC
type AuthenticationServiceRedirectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AuthenticationServiceRedirectRequest) Reset() {
	*x = AuthenticationServiceRedirectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceRedirectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceRedirectRequest) ProtoMessage() {}

func (x *AuthenticationServiceRedirectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceRedirectRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceRedirectRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{52}
}

func (x *AuthenticationServiceRedirectRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// The response of a Authentication.Redirect RPC
type AuthenticationServiceRedirectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AuthenticationServiceRedirectResponse) Reset() {
	*x = AuthenticationServiceRedirectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceRedirectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceRedirectResponse) ProtoMessage() {}

func (x *AuthenticationServiceRedirectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceRedirectResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceRedirectResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{53}
}

// The request of a Authentication.GetOAuth2Providers RPC
type AuthenticationServiceGetOAuth2ProvidersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace    string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	RedirectAddr string `protobuf:"bytes,2,opt,name=redirect_addr,json=redirectAddr,proto3" json:"redirect_addr,omitempty"`
}

func (x *AuthenticationServiceGetOAuth2ProvidersRequest) Reset() {
	*x = AuthenticationServiceGetOAuth2ProvidersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceGetOAuth2ProvidersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceGetOAuth2ProvidersRequest) ProtoMessage() {}

func (x *AuthenticationServiceGetOAuth2ProvidersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceGetOAuth2ProvidersRequest.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceGetOAuth2ProvidersRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{54}
}

func (x *AuthenticationServiceGetOAuth2ProvidersRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AuthenticationServiceGetOAuth2ProvidersRequest) GetRedirectAddr() string {
	if x != nil {
		return x.RedirectAddr
	}
	return ""
}

// The response of a Authentication.GetOAuth2Providers RPC
type AuthenticationServiceGetOAuth2ProvidersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Map of oauth2 providers
	OauthProviders []*OAuthProvider `protobuf:"bytes,1,rep,name=oauth_providers,json=oauthProviders,proto3" json:"oauth_providers,omitempty"`
}

func (x *AuthenticationServiceGetOAuth2ProvidersResponse) Reset() {
	*x = AuthenticationServiceGetOAuth2ProvidersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationServiceGetOAuth2ProvidersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationServiceGetOAuth2ProvidersResponse) ProtoMessage() {}

func (x *AuthenticationServiceGetOAuth2ProvidersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationServiceGetOAuth2ProvidersResponse.ProtoReflect.Descriptor instead.
func (*AuthenticationServiceGetOAuth2ProvidersResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP(), []int{55}
}

func (x *AuthenticationServiceGetOAuth2ProvidersResponse) GetOauthProviders() []*OAuthProvider {
	if x != nil {
		return x.OauthProviders
	}
	return nil
}

var File_nuntio_users_v1alpha1_users_authentication_proto protoreflect.FileDescriptor

var file_nuntio_users_v1alpha1_users_authentication_proto_rawDesc = []byte{
	0x0a, 0x30, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x15, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x2a, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x22, 0x0a, 0x20, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0,
	0x01, 0x0a, 0x30, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41,
	0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x2e, 0x0a, 0x2c, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x33, 0x0a, 0x31, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x2b, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x87, 0x02, 0x0a, 0x32, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12,
	0x35, 0x0a, 0x06, 0x62, 0x63, 0x72, 0x79, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x42, 0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x06,
	0x62, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x35, 0x0a, 0x33, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xd9, 0x01, 0x0a, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x54, 0x74, 0x6c, 0x12, 0x32, 0x0a, 0x15,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x74, 0x74, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x74, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x32,
	0x0a, 0x30, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x2a, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x2d, 0x0a, 0x2b,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x0a, 0x2f,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x32, 0x0a, 0x30, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x92, 0x01, 0x0a, 0x2b, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x6f, 0x0a, 0x2c, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x22, 0xb2, 0x01, 0x0a, 0x29, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x44, 0x62, 0x22,
	0x7b, 0x0a, 0x2a, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x68, 0x0a, 0x32,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x33, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54,
	0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x31, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x32, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x31, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x8a, 0x01, 0x0a, 0x32, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x73, 0x0a,
	0x30, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x31, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x71,
	0x0a, 0x27, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x22, 0x2a, 0x0a, 0x28, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7e, 0x0a,
	0x27, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x2a, 0x0a,
	0x28, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x29, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x2a,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x28, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x29, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x7c, 0x0a, 0x22, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6a, 0x77, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6a, 0x77, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x25, 0x0a,
	0x23, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa4, 0x01, 0x0a, 0x21, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0xa1, 0x01, 0x0a, 0x22,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x4f, 0x0a, 0x28, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xa8, 0x01, 0x0a, 0x29, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x22, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x2a,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x88,
	0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x22, 0xb6, 0x03, 0x0a, 0x2b, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x67, 0x6e, 0x75,
	0x70, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x5e, 0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x4d,
	0x0a, 0x0f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x73, 0x0a,
	0x26, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x22, 0x29, 0x0a, 0x27, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xec, 0x02,
	0x0a, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5e, 0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x18, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x01, 0x52, 0x0b, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x75, 0x70, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x32, 0x0a, 0x30,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x60, 0x0a, 0x2a, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0x83, 0x01, 0x0a, 0x2b, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x29, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x82, 0x01, 0x0a, 0x2a, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x2b, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x6f, 0x0a, 0x2c, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x22, 0x3a, 0x0a, 0x24, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x27, 0x0a, 0x25, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x73,
	0x0a, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41,
	0x64, 0x64, 0x72, 0x22, 0x80, 0x01, 0x0a, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x32, 0xb3, 0x21, 0x0a, 0x15, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x7b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa5, 0x01,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x45, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x46, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4f, 0x41, 0x75, 0x74,
	0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xab, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x47,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x41, 0x75, 0x74, 0x68,
	0x32, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x42, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x49, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x4a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x69, 0x6e, 0x67, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x46,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x46, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x47, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a,
	0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12,
	0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa8, 0x01, 0x0a, 0x13, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x46, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x47, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x9c, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x42, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8d, 0x01, 0x0a, 0x0a,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xb1, 0x01, 0x0a, 0x16,
	0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x49, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x4a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0xae, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x12, 0x48, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0xae, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x48, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x49, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0xab, 0x01, 0x0a, 0x14, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x47, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x48, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x90, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x3e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x3e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x93,
	0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x12,
	0x3f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x12, 0x3b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x81,
	0x01, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x39, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x93, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x3f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x99, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x6e,
	0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x42,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x96, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67,
	0x69, 0x63, 0x54, 0x65, 0x78, 0x74, 0x12, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9c, 0x01,
	0x0a, 0x0f, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x42, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x43, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x15,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x50, 0x01, 0x5a, 0x17, 0x2e, 0x2f, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0xaa, 0x02, 0x15, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x15, 0x4e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nuntio_users_v1alpha1_users_authentication_proto_rawDescOnce sync.Once
	file_nuntio_users_v1alpha1_users_authentication_proto_rawDescData = file_nuntio_users_v1alpha1_users_authentication_proto_rawDesc
)

func file_nuntio_users_v1alpha1_users_authentication_proto_rawDescGZIP() []byte {
	file_nuntio_users_v1alpha1_users_authentication_proto_rawDescOnce.Do(func() {
		file_nuntio_users_v1alpha1_users_authentication_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuntio_users_v1alpha1_users_authentication_proto_rawDescData)
	})
	return file_nuntio_users_v1alpha1_users_authentication_proto_rawDescData
}

var file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes = make([]protoimpl.MessageInfo, 56)
var file_nuntio_users_v1alpha1_users_authentication_proto_goTypes = []interface{}{
	(*AuthenticationServicePingRequest)(nil),                    // 0: nuntio.users.v1alpha1.AuthenticationServicePingRequest
	(*AuthenticationServicePingResponse)(nil),                   // 1: nuntio.users.v1alpha1.AuthenticationServicePingResponse
	(*AuthenticationServiceUpdateOAuth2ProviderRequest)(nil),    // 2: nuntio.users.v1alpha1.AuthenticationServiceUpdateOAuth2ProviderRequest
	(*AuthenticationServiceUpdateCallbacksResponse)(nil),        // 3: nuntio.users.v1alpha1.AuthenticationServiceUpdateCallbacksResponse
	(*AuthenticationServiceUpdateOAuth2ProviderResponse)(nil),   // 4: nuntio.users.v1alpha1.AuthenticationServiceUpdateOAuth2ProviderResponse
	(*AuthenticationServiceUpdateCallbacksRequest)(nil),         // 5: nuntio.users.v1alpha1.AuthenticationServiceUpdateCallbacksRequest
	(*AuthenticationServiceUpdateHashingAlgorithmRequest)(nil),  // 6: nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmRequest
	(*AuthenticationServiceUpdateHashingAlgorithmResponse)(nil), // 7: nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmResponse
	(*AuthenticationServiceUpdateTokenSettingsRequest)(nil),     // 8: nuntio.users.v1alpha1.AuthenticationServiceUpdateTokenSettingsRequest
	(*AuthenticationServiceUpdateTokenSettingsResponse)(nil),    // 9: nuntio.users.v1alpha1.AuthenticationServiceUpdateTokenSettingsResponse
	(*AuthenticationServiceUpdateTemplateRequest)(nil),          // 10: nuntio.users.v1alpha1.AuthenticationServiceUpdateTemplateRequest
	(*AuthenticationServiceUpdateTemplateResponse)(nil),         // 11: nuntio.users.v1alpha1.AuthenticationServiceUpdateTemplateResponse
	(*AuthenticationServiceValidateCredentialsRequest)(nil),     // 12: nuntio.users.v1alpha1.AuthenticationServiceValidateCredentialsRequest
	(*AuthenticationServiceValidateCredentialsResponse)(nil),    // 13: nuntio.users.v1alpha1.AuthenticationServiceValidateCredentialsResponse
	(*AuthenticationServiceCreateTokenPairRequest)(nil),         // 14: nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairRequest
	(*AuthenticationServiceCreateTokenPairResponse)(nil),        // 15: nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairResponse
	(*AuthenticationServiceValidateTokenRequest)(nil),           // 16: nuntio.users.v1alpha1.AuthenticationServiceValidateTokenRequest
	(*AuthenticationServiceValidateTokenResponse)(nil),          // 17: nuntio.users.v1alpha1.AuthenticationServiceValidateTokenResponse
	(*AuthenticationServiceSendResetPasswordEmailRequest)(nil),  // 18: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordEmailRequest
	(*AuthenticationServiceSendResetPasswordEmailResponse)(nil), // 19: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordEmailResponse
	(*AuthenticationServiceSendResetPasswordTextRequest)(nil),   // 20: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordTextRequest
	(*AuthenticationServiceSendResetPasswordTextResponse)(nil),  // 21: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordTextResponse
	(*AuthenticationServiceSendVerificationEmailRequest)(nil),   // 22: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationEmailRequest
	(*AuthenticationServiceSendVerificationEmailResponse)(nil),  // 23: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationEmailResponse
	(*AuthenticationServiceSendVerificationTextRequest)(nil),    // 24: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationTextRequest
	(*AuthenticationServiceSendVerificationTextResponse)(nil),   // 25: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationTextResponse
	(*AuthenticationServiceVerifyEmailRequest)(nil),             // 26: nuntio.users.v1alpha1.AuthenticationServiceVerifyEmailRequest
	(*AuthenticationServiceVerifyEmailResponse)(nil),            // 27: nuntio.users.v1alpha1.AuthenticationServiceVerifyEmailResponse
	(*AuthenticationServiceVerifyPhoneRequest)(nil),             // 28: nuntio.users.v1alpha1.AuthenticationServiceVerifyPhoneRequest
	(*AuthenticationServiceVerifyPhoneResponse)(nil),            // 29: nuntio.users.v1alpha1.AuthenticationServiceVerifyPhoneResponse
	(*AuthenticationServiceResetPasswordRequest)(nil),           // 30: nuntio.users.v1alpha1.AuthenticationServiceResetPasswordRequest
	(*AuthenticationServiceResetPasswordResponse)(nil),          // 31: nuntio.users.v1alpha1.AuthenticationServiceResetPasswordResponse
	(*AuthenticationServiceContinueWithRequest)(nil),            // 32: nuntio.users.v1alpha1.AuthenticationServiceContinueWithRequest
	(*AuthenticationServiceContinueWithResponse)(nil),           // 33: nuntio.users.v1alpha1.AuthenticationServiceContinueWithResponse
	(*AuthenticationServiceLogoutRequest)(nil),                  // 34: nuntio.users.v1alpha1.AuthenticationServiceLogoutRequest
	(*AuthenticationServiceLogoutResponse)(nil),                 // 35: nuntio.users.v1alpha1.AuthenticationServiceLogoutResponse
	(*AuthenticationServiceLoginRequest)(nil),                   // 36: nuntio.users.v1alpha1.AuthenticationServiceLoginRequest
	(*AuthenticationServiceLoginResponse)(nil),                  // 37: nuntio.users.v1alpha1.AuthenticationServiceLoginResponse
	(*AuthenticationServiceRefreshTokenRequest)(nil),            // 38: nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenRequest
	(*AuthenticationServiceRefreshTokenResponse)(nil),           // 39: nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenResponse
	(*AuthenticationServiceInitializeAuthRequest)(nil),          // 40: nuntio.users.v1alpha1.AuthenticationServiceInitializeAuthRequest
	(*AuthenticationServiceInitializeAuthResponse)(nil),         // 41: nuntio.users.v1alpha1.AuthenticationServiceInitializeAuthResponse
	(*AuthenticationServiceBlockTokenRequest)(nil),              // 42: nuntio.users.v1alpha1.AuthenticationServiceBlockTokenRequest
	(*AuthenticationServiceBlockTokenResponse)(nil),             // 43: nuntio.users.v1alpha1.AuthenticationServiceBlockTokenResponse
	(*AuthenticationServiceUpdateLoginSettingsRequest)(nil),     // 44: nuntio.users.v1alpha1.AuthenticationServiceUpdateLoginSettingsRequest
	(*AuthenticationServiceUpdateLoginSettingsResponse)(nil),    // 45: nuntio.users.v1alpha1.AuthenticationServiceUpdateLoginSettingsResponse
	(*AuthenticationServiceSendMagicEmailRequest)(nil),          // 46: nuntio.users.v1alpha1.AuthenticationServiceSendMagicEmailRequest
	(*AuthenticationServiceSendMagicEmailResponse)(nil),         // 47: nuntio.users.v1alpha1.AuthenticationServiceSendMagicEmailResponse
	(*AuthenticationServiceSendMagicTextRequest)(nil),           // 48: nuntio.users.v1alpha1.AuthenticationServiceSendMagicTextRequest
	(*AuthenticationServiceSendMagicTextResponse)(nil),          // 49: nuntio.users.v1alpha1.AuthenticationServiceSendMagicTextResponse
	(*AuthenticationServiceVerifyMagicCodeRequest)(nil),         // 50: nuntio.users.v1alpha1.AuthenticationServiceVerifyMagicCodeRequest
	(*AuthenticationServiceVerifyMagicCodeResponse)(nil),        // 51: nuntio.users.v1alpha1.AuthenticationServiceVerifyMagicCodeResponse
	(*AuthenticationServiceRedirectRequest)(nil),                // 52: nuntio.users.v1alpha1.AuthenticationServiceRedirectRequest
	(*AuthenticationServiceRedirectResponse)(nil),               // 53: nuntio.users.v1alpha1.AuthenticationServiceRedirectResponse
	(*AuthenticationServiceGetOAuth2ProvidersRequest)(nil),      // 54: nuntio.users.v1alpha1.AuthenticationServiceGetOAuth2ProvidersRequest
	(*AuthenticationServiceGetOAuth2ProvidersResponse)(nil),     // 55: nuntio.users.v1alpha1.AuthenticationServiceGetOAuth2ProvidersResponse
	(OAuthProviderType)(0),                                      // 56: nuntio.users.v1alpha1.OAuthProviderType
	(HashingAlgorithm)(0),                                       // 57: nuntio.users.v1alpha1.HashingAlgorithm
	(*Bcrypt)(nil),                                              // 58: nuntio.users.v1alpha1.Bcrypt
	(*Scrypt)(nil),                                              // 59: nuntio.users.v1alpha1.Scrypt
	(*Template)(nil),                                            // 60: nuntio.users.v1alpha1.Template
	(*UserIdentifier)(nil),                                      // 61: nuntio.users.v1alpha1.UserIdentifier
	(*TokenPair)(nil),                                           // 62: nuntio.users.v1alpha1.TokenPair
	(*User)(nil),                                                // 63: nuntio.users.v1alpha1.User
	(*VerificationCode)(nil),                                    // 64: nuntio.users.v1alpha1.VerificationCode
	(LoginStatus)(0),                                            // 65: nuntio.users.v1alpha1.LoginStatus
	(LoginType)(0),                                              // 66: nuntio.users.v1alpha1.LoginType
	(*OAuthProvider)(nil),                                       // 67: nuntio.users.v1alpha1.OAuthProvider
}
var file_nuntio_users_v1alpha1_users_authentication_proto_depIdxs = []int32{
	56, // 0: nuntio.users.v1alpha1.AuthenticationServiceUpdateOAuth2ProviderRequest.provider:type_name -> nuntio.users.v1alpha1.OAuthProviderType
	57, // 1: nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmRequest.algorithm:type_name -> nuntio.users.v1alpha1.HashingAlgorithm
	58, // 2: nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmRequest.bcrypt:type_name -> nuntio.users.v1alpha1.Bcrypt
	59, // 3: nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmRequest.scrypt:type_name -> nuntio.users.v1alpha1.Scrypt
	60, // 4: nuntio.users.v1alpha1.AuthenticationServiceUpdateTemplateRequest.template:type_name -> nuntio.users.v1alpha1.Template
	61, // 5: nuntio.users.v1alpha1.AuthenticationServiceValidateCredentialsRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	61, // 6: nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	62, // 7: nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	63, // 8: nuntio.users.v1alpha1.AuthenticationServiceValidateTokenResponse.user:type_name -> nuntio.users.v1alpha1.User
	64, // 9: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordEmailResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	64, // 10: nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordTextResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	64, // 11: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationEmailResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	64, // 12: nuntio.users.v1alpha1.AuthenticationServiceSendVerificationTextResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	61, // 13: nuntio.users.v1alpha1.AuthenticationServiceResetPasswordRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	56, // 14: nuntio.users.v1alpha1.AuthenticationServiceContinueWithRequest.provider:type_name -> nuntio.users.v1alpha1.OAuthProviderType
	62, // 15: nuntio.users.v1alpha1.AuthenticationServiceContinueWithResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	65, // 16: nuntio.users.v1alpha1.AuthenticationServiceContinueWithResponse.status:type_name -> nuntio.users.v1alpha1.LoginStatus
	61, // 17: nuntio.users.v1alpha1.AuthenticationServiceLoginRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	62, // 18: nuntio.users.v1alpha1.AuthenticationServiceLoginResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	65, // 19: nuntio.users.v1alpha1.AuthenticationServiceLoginResponse.status:type_name -> nuntio.users.v1alpha1.LoginStatus
	62, // 20: nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	65, // 21: nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenResponse.status:type_name -> nuntio.users.v1alpha1.LoginStatus
	66, // 22: nuntio.users.v1alpha1.AuthenticationServiceInitializeAuthResponse.supported_login_mechanisms:type_name -> nuntio.users.v1alpha1.LoginType
	67, // 23: nuntio.users.v1alpha1.AuthenticationServiceInitializeAuthResponse.oauth_providers:type_name -> nuntio.users.v1alpha1.OAuthProvider
	66, // 24: nuntio.users.v1alpha1.AuthenticationServiceUpdateLoginSettingsRequest.supported_login_mechanisms:type_name -> nuntio.users.v1alpha1.LoginType
	64, // 25: nuntio.users.v1alpha1.AuthenticationServiceSendMagicEmailResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	64, // 26: nuntio.users.v1alpha1.AuthenticationServiceSendMagicTextResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	62, // 27: nuntio.users.v1alpha1.AuthenticationServiceVerifyMagicCodeResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	67, // 28: nuntio.users.v1alpha1.AuthenticationServiceGetOAuth2ProvidersResponse.oauth_providers:type_name -> nuntio.users.v1alpha1.OAuthProvider
	0,  // 29: nuntio.users.v1alpha1.AuthenticationService.Ping:input_type -> nuntio.users.v1alpha1.AuthenticationServicePingRequest
	54, // 30: nuntio.users.v1alpha1.AuthenticationService.GetOAuth2Providers:input_type -> nuntio.users.v1alpha1.AuthenticationServiceGetOAuth2ProvidersRequest
	2,  // 31: nuntio.users.v1alpha1.AuthenticationService.UpdateOAuth2Provider:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateOAuth2ProviderRequest
	5,  // 32: nuntio.users.v1alpha1.AuthenticationService.UpdateCallbacks:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateCallbacksRequest
	6,  // 33: nuntio.users.v1alpha1.AuthenticationService.UpdateHashingAlgorithm:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmRequest
	44, // 34: nuntio.users.v1alpha1.AuthenticationService.UpdateLoginSettings:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateLoginSettingsRequest
	8,  // 35: nuntio.users.v1alpha1.AuthenticationService.UpdateTokenSettings:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateTokenSettingsRequest
	10, // 36: nuntio.users.v1alpha1.AuthenticationService.UpdateTemplate:input_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateTemplateRequest
	12, // 37: nuntio.users.v1alpha1.AuthenticationService.ValidateCredentials:input_type -> nuntio.users.v1alpha1.AuthenticationServiceValidateCredentialsRequest
	14, // 38: nuntio.users.v1alpha1.AuthenticationService.CreateTokenPair:input_type -> nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairRequest
	16, // 39: nuntio.users.v1alpha1.AuthenticationService.ValidateToken:input_type -> nuntio.users.v1alpha1.AuthenticationServiceValidateTokenRequest
	42, // 40: nuntio.users.v1alpha1.AuthenticationService.BlockToken:input_type -> nuntio.users.v1alpha1.AuthenticationServiceBlockTokenRequest
	18, // 41: nuntio.users.v1alpha1.AuthenticationService.SendResetPasswordEmail:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordEmailRequest
	20, // 42: nuntio.users.v1alpha1.AuthenticationService.SendResetPasswordText:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordTextRequest
	22, // 43: nuntio.users.v1alpha1.AuthenticationService.SendVerificationEmail:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendVerificationEmailRequest
	24, // 44: nuntio.users.v1alpha1.AuthenticationService.SendVerificationText:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendVerificationTextRequest
	26, // 45: nuntio.users.v1alpha1.AuthenticationService.VerifyEmail:input_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyEmailRequest
	28, // 46: nuntio.users.v1alpha1.AuthenticationService.VerifyPhone:input_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyPhoneRequest
	30, // 47: nuntio.users.v1alpha1.AuthenticationService.ResetPassword:input_type -> nuntio.users.v1alpha1.AuthenticationServiceResetPasswordRequest
	32, // 48: nuntio.users.v1alpha1.AuthenticationService.ContinueWith:input_type -> nuntio.users.v1alpha1.AuthenticationServiceContinueWithRequest
	52, // 49: nuntio.users.v1alpha1.AuthenticationService.Redirect:input_type -> nuntio.users.v1alpha1.AuthenticationServiceRedirectRequest
	34, // 50: nuntio.users.v1alpha1.AuthenticationService.Logout:input_type -> nuntio.users.v1alpha1.AuthenticationServiceLogoutRequest
	36, // 51: nuntio.users.v1alpha1.AuthenticationService.Login:input_type -> nuntio.users.v1alpha1.AuthenticationServiceLoginRequest
	38, // 52: nuntio.users.v1alpha1.AuthenticationService.RefreshToken:input_type -> nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenRequest
	46, // 53: nuntio.users.v1alpha1.AuthenticationService.SendMagicEmail:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendMagicEmailRequest
	48, // 54: nuntio.users.v1alpha1.AuthenticationService.SendMagicText:input_type -> nuntio.users.v1alpha1.AuthenticationServiceSendMagicTextRequest
	50, // 55: nuntio.users.v1alpha1.AuthenticationService.VerifyMagicCode:input_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyMagicCodeRequest
	1,  // 56: nuntio.users.v1alpha1.AuthenticationService.Ping:output_type -> nuntio.users.v1alpha1.AuthenticationServicePingResponse
	55, // 57: nuntio.users.v1alpha1.AuthenticationService.GetOAuth2Providers:output_type -> nuntio.users.v1alpha1.AuthenticationServiceGetOAuth2ProvidersResponse
	4,  // 58: nuntio.users.v1alpha1.AuthenticationService.UpdateOAuth2Provider:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateOAuth2ProviderResponse
	3,  // 59: nuntio.users.v1alpha1.AuthenticationService.UpdateCallbacks:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateCallbacksResponse
	7,  // 60: nuntio.users.v1alpha1.AuthenticationService.UpdateHashingAlgorithm:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateHashingAlgorithmResponse
	45, // 61: nuntio.users.v1alpha1.AuthenticationService.UpdateLoginSettings:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateLoginSettingsResponse
	9,  // 62: nuntio.users.v1alpha1.AuthenticationService.UpdateTokenSettings:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateTokenSettingsResponse
	11, // 63: nuntio.users.v1alpha1.AuthenticationService.UpdateTemplate:output_type -> nuntio.users.v1alpha1.AuthenticationServiceUpdateTemplateResponse
	13, // 64: nuntio.users.v1alpha1.AuthenticationService.ValidateCredentials:output_type -> nuntio.users.v1alpha1.AuthenticationServiceValidateCredentialsResponse
	15, // 65: nuntio.users.v1alpha1.AuthenticationService.CreateTokenPair:output_type -> nuntio.users.v1alpha1.AuthenticationServiceCreateTokenPairResponse
	17, // 66: nuntio.users.v1alpha1.AuthenticationService.ValidateToken:output_type -> nuntio.users.v1alpha1.AuthenticationServiceValidateTokenResponse
	43, // 67: nuntio.users.v1alpha1.AuthenticationService.BlockToken:output_type -> nuntio.users.v1alpha1.AuthenticationServiceBlockTokenResponse
	19, // 68: nuntio.users.v1alpha1.AuthenticationService.SendResetPasswordEmail:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordEmailResponse
	21, // 69: nuntio.users.v1alpha1.AuthenticationService.SendResetPasswordText:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendResetPasswordTextResponse
	23, // 70: nuntio.users.v1alpha1.AuthenticationService.SendVerificationEmail:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendVerificationEmailResponse
	25, // 71: nuntio.users.v1alpha1.AuthenticationService.SendVerificationText:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendVerificationTextResponse
	27, // 72: nuntio.users.v1alpha1.AuthenticationService.VerifyEmail:output_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyEmailResponse
	29, // 73: nuntio.users.v1alpha1.AuthenticationService.VerifyPhone:output_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyPhoneResponse
	31, // 74: nuntio.users.v1alpha1.AuthenticationService.ResetPassword:output_type -> nuntio.users.v1alpha1.AuthenticationServiceResetPasswordResponse
	33, // 75: nuntio.users.v1alpha1.AuthenticationService.ContinueWith:output_type -> nuntio.users.v1alpha1.AuthenticationServiceContinueWithResponse
	53, // 76: nuntio.users.v1alpha1.AuthenticationService.Redirect:output_type -> nuntio.users.v1alpha1.AuthenticationServiceRedirectResponse
	35, // 77: nuntio.users.v1alpha1.AuthenticationService.Logout:output_type -> nuntio.users.v1alpha1.AuthenticationServiceLogoutResponse
	37, // 78: nuntio.users.v1alpha1.AuthenticationService.Login:output_type -> nuntio.users.v1alpha1.AuthenticationServiceLoginResponse
	39, // 79: nuntio.users.v1alpha1.AuthenticationService.RefreshToken:output_type -> nuntio.users.v1alpha1.AuthenticationServiceRefreshTokenResponse
	47, // 80: nuntio.users.v1alpha1.AuthenticationService.SendMagicEmail:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendMagicEmailResponse
	49, // 81: nuntio.users.v1alpha1.AuthenticationService.SendMagicText:output_type -> nuntio.users.v1alpha1.AuthenticationServiceSendMagicTextResponse
	51, // 82: nuntio.users.v1alpha1.AuthenticationService.VerifyMagicCode:output_type -> nuntio.users.v1alpha1.AuthenticationServiceVerifyMagicCodeResponse
	56, // [56:83] is the sub-list for method output_type
	29, // [29:56] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_nuntio_users_v1alpha1_users_authentication_proto_init() }
func file_nuntio_users_v1alpha1_users_authentication_proto_init() {
	if File_nuntio_users_v1alpha1_users_authentication_proto != nil {
		return
	}
	file_nuntio_users_v1alpha1_users_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateOAuth2ProviderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateCallbacksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateOAuth2ProviderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateCallbacksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateHashingAlgorithmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateHashingAlgorithmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateTokenSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateTokenSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceValidateCredentialsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceValidateCredentialsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceCreateTokenPairRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceCreateTokenPairResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceValidateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceValidateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendResetPasswordEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendResetPasswordEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendResetPasswordTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendResetPasswordTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendVerificationEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendVerificationEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendVerificationTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendVerificationTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyPhoneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyPhoneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceResetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceContinueWithRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceContinueWithResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceLogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceLogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceRefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceInitializeAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceInitializeAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceBlockTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceBlockTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateLoginSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceUpdateLoginSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendMagicEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendMagicEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendMagicTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceSendMagicTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyMagicCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceVerifyMagicCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceRedirectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceRedirectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceGetOAuth2ProvidersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationServiceGetOAuth2ProvidersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[40].OneofWrappers = []interface{}{}
	file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes[44].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuntio_users_v1alpha1_users_authentication_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   56,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuntio_users_v1alpha1_users_authentication_proto_goTypes,
		DependencyIndexes: file_nuntio_users_v1alpha1_users_authentication_proto_depIdxs,
		MessageInfos:      file_nuntio_users_v1alpha1_users_authentication_proto_msgTypes,
	}.Build()
	File_nuntio_users_v1alpha1_users_authentication_proto = out.File
	file_nuntio_users_v1alpha1_users_authentication_proto_rawDesc = nil
	file_nuntio_users_v1alpha1_users_authentication_proto_goTypes = nil
	file_nuntio_users_v1alpha1_users_authentication_proto_depIdxs = nil
}
