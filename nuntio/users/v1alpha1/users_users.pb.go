// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nuntio/users/v1alpha1/users_users.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request of a Users.Ping RPC
type UsersServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServicePingRequest) Reset() {
	*x = UsersServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServicePingRequest) ProtoMessage() {}

func (x *UsersServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServicePingRequest.ProtoReflect.Descriptor instead.
func (*UsersServicePingRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{0}
}

// The response of a Users.Ping RPC
type UsersServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServicePingResponse) Reset() {
	*x = UsersServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServicePingResponse) ProtoMessage() {}

func (x *UsersServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServicePingResponse.ProtoReflect.Descriptor instead.
func (*UsersServicePingResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{1}
}

// The request of a Users.Create RPC
type UsersServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user to be created
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceCreateRequest) Reset() {
	*x = UsersServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceCreateRequest) ProtoMessage() {}

func (x *UsersServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{2}
}

func (x *UsersServiceCreateRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UsersServiceCreateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Users.Create RPC
type UsersServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user to be created
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UsersServiceCreateResponse) Reset() {
	*x = UsersServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceCreateResponse) ProtoMessage() {}

func (x *UsersServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{3}
}

func (x *UsersServiceCreateResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// The request of a Users.UpdatePassword RPC
type UsersServiceUpdatePasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The new password of the user
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UsersServiceUpdatePasswordRequest) Reset() {
	*x = UsersServiceUpdatePasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdatePasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdatePasswordRequest) ProtoMessage() {}

func (x *UsersServiceUpdatePasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdatePasswordRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{4}
}

func (x *UsersServiceUpdatePasswordRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UsersServiceUpdatePasswordRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceUpdatePasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// The response of a Users.UpdatePassword RPC
type UsersServiceUpdatePasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceUpdatePasswordResponse) Reset() {
	*x = UsersServiceUpdatePasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdatePasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdatePasswordResponse) ProtoMessage() {}

func (x *UsersServiceUpdatePasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdatePasswordResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdatePasswordResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{5}
}

// The request of a Users.UpdateProfile RPC
type UsersServiceUpdateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The profile information to update. Leave optinal fields to keep fields the same
	Profile *Profile `protobuf:"bytes,3,opt,name=profile,proto3" json:"profile,omitempty"`
}

func (x *UsersServiceUpdateProfileRequest) Reset() {
	*x = UsersServiceUpdateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdateProfileRequest) ProtoMessage() {}

func (x *UsersServiceUpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{6}
}

func (x *UsersServiceUpdateProfileRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UsersServiceUpdateProfileRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceUpdateProfileRequest) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

// The response of a Users.UpdateProfile RPC
type UsersServiceUpdateProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceUpdateProfileResponse) Reset() {
	*x = UsersServiceUpdateProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdateProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdateProfileResponse) ProtoMessage() {}

func (x *UsersServiceUpdateProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdateProfileResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdateProfileResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{7}
}

// The request of a Users.UpdateContactInfo RPC
type UsersServiceUpdateContactInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The username to update (optional)
	Username *string `protobuf:"bytes,3,opt,name=username,proto3,oneof" json:"username,omitempty"`
	// The phone number to update (optional)
	Phone *string `protobuf:"bytes,4,opt,name=phone,proto3,oneof" json:"phone,omitempty"`
	// The email to update (optional)
	Email *string `protobuf:"bytes,5,opt,name=email,proto3,oneof" json:"email,omitempty"`
}

func (x *UsersServiceUpdateContactInfoRequest) Reset() {
	*x = UsersServiceUpdateContactInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdateContactInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdateContactInfoRequest) ProtoMessage() {}

func (x *UsersServiceUpdateContactInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdateContactInfoRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdateContactInfoRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{8}
}

func (x *UsersServiceUpdateContactInfoRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UsersServiceUpdateContactInfoRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceUpdateContactInfoRequest) GetUsername() string {
	if x != nil && x.Username != nil {
		return *x.Username
	}
	return ""
}

func (x *UsersServiceUpdateContactInfoRequest) GetPhone() string {
	if x != nil && x.Phone != nil {
		return *x.Phone
	}
	return ""
}

func (x *UsersServiceUpdateContactInfoRequest) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

// The response of a Users.UpdateContactInfo RPC
type UsersServiceUpdateContactInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceUpdateContactInfoResponse) Reset() {
	*x = UsersServiceUpdateContactInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUpdateContactInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUpdateContactInfoResponse) ProtoMessage() {}

func (x *UsersServiceUpdateContactInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUpdateContactInfoResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceUpdateContactInfoResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{9}
}

// The request of an Users.UploadProfileImage RPC
type UsersServiceUploadProfileImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The bytes of data to upload
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The user to upload a profile image to.
	Identifier *UserIdentifier `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *UsersServiceUploadProfileImageRequest) Reset() {
	*x = UsersServiceUploadProfileImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUploadProfileImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUploadProfileImageRequest) ProtoMessage() {}

func (x *UsersServiceUploadProfileImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUploadProfileImageRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUploadProfileImageRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{10}
}

func (x *UsersServiceUploadProfileImageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UsersServiceUploadProfileImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceUploadProfileImageRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

// The response of an Users.UploadProfileImage RPC
type UsersServiceUploadProfileImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UsersServiceUploadProfileImageResponse) Reset() {
	*x = UsersServiceUploadProfileImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUploadProfileImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUploadProfileImageResponse) ProtoMessage() {}

func (x *UsersServiceUploadProfileImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUploadProfileImageResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceUploadProfileImageResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{11}
}

func (x *UsersServiceUploadProfileImageResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// The request of an Users.UploadCoverImage RPC
type UsersServiceUploadCoverImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The bytes of data to upload
	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The user to upload a cover image to.
	Identifier *UserIdentifier `protobuf:"bytes,3,opt,name=identifier,proto3" json:"identifier,omitempty"`
}

func (x *UsersServiceUploadCoverImageRequest) Reset() {
	*x = UsersServiceUploadCoverImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUploadCoverImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUploadCoverImageRequest) ProtoMessage() {}

func (x *UsersServiceUploadCoverImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUploadCoverImageRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceUploadCoverImageRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{12}
}

func (x *UsersServiceUploadCoverImageRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UsersServiceUploadCoverImageRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceUploadCoverImageRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

// The response of an Users.UploadCoverImage RPC
type UsersServiceUploadCoverImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UsersServiceUploadCoverImageResponse) Reset() {
	*x = UsersServiceUploadCoverImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceUploadCoverImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceUploadCoverImageResponse) ProtoMessage() {}

func (x *UsersServiceUploadCoverImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceUploadCoverImageResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceUploadCoverImageResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{13}
}

func (x *UsersServiceUploadCoverImageResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// The request of an Users.Get RPC
type UsersServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceGetRequest) Reset() {
	*x = UsersServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetRequest) ProtoMessage() {}

func (x *UsersServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{14}
}

func (x *UsersServiceGetRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UsersServiceGetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of an Users.Get RPC
type UsersServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UsersServiceGetResponse) Reset() {
	*x = UsersServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetResponse) ProtoMessage() {}

func (x *UsersServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{15}
}

func (x *UsersServiceGetResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// The request of an Users.GetTokens RPC
type UsersServiceGetTokensRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceGetTokensRequest) Reset() {
	*x = UsersServiceGetTokensRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetTokensRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetTokensRequest) ProtoMessage() {}

func (x *UsersServiceGetTokensRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetTokensRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceGetTokensRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{16}
}

func (x *UsersServiceGetTokensRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UsersServiceGetTokensRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The request of an Users.GetContacts RPC
type UsersServiceGetContactsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Where to start getting contacts from
	From int32 `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	// Where to stop getting contacts to
	To int32 `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	// Set to true to only include accepted or false to only include not accepted
	Accepted *bool `protobuf:"varint,5,opt,name=accepted,proto3,oneof" json:"accepted,omitempty"`
}

func (x *UsersServiceGetContactsRequest) Reset() {
	*x = UsersServiceGetContactsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetContactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetContactsRequest) ProtoMessage() {}

func (x *UsersServiceGetContactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetContactsRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceGetContactsRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{17}
}

func (x *UsersServiceGetContactsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UsersServiceGetContactsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceGetContactsRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *UsersServiceGetContactsRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *UsersServiceGetContactsRequest) GetAccepted() bool {
	if x != nil && x.Accepted != nil {
		return *x.Accepted
	}
	return false
}

// The request of an Users.Delete RPC
type UsersServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceDeleteRequest) Reset() {
	*x = UsersServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceDeleteRequest) ProtoMessage() {}

func (x *UsersServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{18}
}

func (x *UsersServiceDeleteRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *UsersServiceDeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of an Users.Delete RPC
type UsersServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceDeleteResponse) Reset() {
	*x = UsersServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceDeleteResponse) ProtoMessage() {}

func (x *UsersServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{19}
}

// The response of a Users.GetTokens RPC
type UsersServiceGetTokensResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of token meta data
	Tokens []*TokenMeta `protobuf:"bytes,1,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *UsersServiceGetTokensResponse) Reset() {
	*x = UsersServiceGetTokensResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetTokensResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetTokensResponse) ProtoMessage() {}

func (x *UsersServiceGetTokensResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetTokensResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceGetTokensResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{20}
}

func (x *UsersServiceGetTokensResponse) GetTokens() []*TokenMeta {
	if x != nil {
		return x.Tokens
	}
	return nil
}

// The response of a Users.List RPC
type UsersServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The users returned
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Return number of users in database
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UsersServiceListResponse) Reset() {
	*x = UsersServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceListResponse) ProtoMessage() {}

func (x *UsersServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceListResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceListResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{21}
}

func (x *UsersServiceListResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersServiceListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The response of a Users.GetMany RPC
type UsersServiceGetManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The users returned
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Return number of users in database
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UsersServiceGetManyResponse) Reset() {
	*x = UsersServiceGetManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetManyResponse) ProtoMessage() {}

func (x *UsersServiceGetManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetManyResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceGetManyResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{22}
}

func (x *UsersServiceGetManyResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersServiceGetManyResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The response of a Users.Search RPC
type UsersServiceSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The users returned
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// Return number of users in database
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UsersServiceSearchResponse) Reset() {
	*x = UsersServiceSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceSearchResponse) ProtoMessage() {}

func (x *UsersServiceSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceSearchResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceSearchResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{23}
}

func (x *UsersServiceSearchResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *UsersServiceSearchResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The request of a Users.Search RPC
type UsersServiceSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The query to search for
	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Where to start getting contacts from
	From int32 `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`
	// Where to stop getting contacts to
	To int32 `protobuf:"varint,4,opt,name=to,proto3" json:"to,omitempty"`
	// To list only within a group
	GroupId *string `protobuf:"bytes,5,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
}

func (x *UsersServiceSearchRequest) Reset() {
	*x = UsersServiceSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceSearchRequest) ProtoMessage() {}

func (x *UsersServiceSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceSearchRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceSearchRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{24}
}

func (x *UsersServiceSearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *UsersServiceSearchRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceSearchRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *UsersServiceSearchRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *UsersServiceSearchRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

// The request of a Users.GetMany RPC
type UsersServiceGetManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []*UserIdentifier `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceGetManyRequest) Reset() {
	*x = UsersServiceGetManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetManyRequest) ProtoMessage() {}

func (x *UsersServiceGetManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetManyRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceGetManyRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{25}
}

func (x *UsersServiceGetManyRequest) GetIdentifiers() []*UserIdentifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *UsersServiceGetManyRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The request of a Users.DeleteMany RPC
type UsersServiceDeleteManyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifiers []*UserIdentifier `protobuf:"bytes,1,rep,name=identifiers,proto3" json:"identifiers,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *UsersServiceDeleteManyRequest) Reset() {
	*x = UsersServiceDeleteManyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceDeleteManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceDeleteManyRequest) ProtoMessage() {}

func (x *UsersServiceDeleteManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceDeleteManyRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceDeleteManyRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{26}
}

func (x *UsersServiceDeleteManyRequest) GetIdentifiers() []*UserIdentifier {
	if x != nil {
		return x.Identifiers
	}
	return nil
}

func (x *UsersServiceDeleteManyRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Users.DeleteMany RPC
type UsersServiceDeleteManyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceDeleteManyResponse) Reset() {
	*x = UsersServiceDeleteManyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceDeleteManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceDeleteManyResponse) ProtoMessage() {}

func (x *UsersServiceDeleteManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceDeleteManyResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceDeleteManyResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{27}
}

// The request of a Users.List RPC
type UsersServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the namespace you want to search within
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Where to start getting contacts from
	From int32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	// Where to stop getting contacts to
	To int32 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`
	// To list only within a group
	GroupId *string `protobuf:"bytes,4,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"`
}

func (x *UsersServiceListRequest) Reset() {
	*x = UsersServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceListRequest) ProtoMessage() {}

func (x *UsersServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceListRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceListRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{28}
}

func (x *UsersServiceListRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceListRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *UsersServiceListRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *UsersServiceListRequest) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

// The request of a Users.AddContact RPC
type UsersServiceAddContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string          `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	FromIdentifier *UserIdentifier `protobuf:"bytes,2,opt,name=from_identifier,json=fromIdentifier,proto3" json:"from_identifier,omitempty"`
	ToIdentifier   *UserIdentifier `protobuf:"bytes,3,opt,name=to_identifier,json=toIdentifier,proto3" json:"to_identifier,omitempty"`
}

func (x *UsersServiceAddContactRequest) Reset() {
	*x = UsersServiceAddContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceAddContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceAddContactRequest) ProtoMessage() {}

func (x *UsersServiceAddContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceAddContactRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceAddContactRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{29}
}

func (x *UsersServiceAddContactRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceAddContactRequest) GetFromIdentifier() *UserIdentifier {
	if x != nil {
		return x.FromIdentifier
	}
	return nil
}

func (x *UsersServiceAddContactRequest) GetToIdentifier() *UserIdentifier {
	if x != nil {
		return x.ToIdentifier
	}
	return nil
}

// The response of a Users.AddContact RPC
type UsersServiceAddContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contact *Contact `protobuf:"bytes,1,opt,name=contact,proto3" json:"contact,omitempty"`
}

func (x *UsersServiceAddContactResponse) Reset() {
	*x = UsersServiceAddContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceAddContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceAddContactResponse) ProtoMessage() {}

func (x *UsersServiceAddContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceAddContactResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceAddContactResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{30}
}

func (x *UsersServiceAddContactResponse) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

// The request of a Users.RemoveContact RPC
type UsersServiceRemoveContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UsersServiceRemoveContactRequest) Reset() {
	*x = UsersServiceRemoveContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceRemoveContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceRemoveContactRequest) ProtoMessage() {}

func (x *UsersServiceRemoveContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceRemoveContactRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceRemoveContactRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{31}
}

func (x *UsersServiceRemoveContactRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *UsersServiceRemoveContactRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceRemoveContactRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// The response of a Users.RemoveContact RPC
type UsersServiceRemoveContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceRemoveContactResponse) Reset() {
	*x = UsersServiceRemoveContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceRemoveContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceRemoveContactResponse) ProtoMessage() {}

func (x *UsersServiceRemoveContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceRemoveContactResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceRemoveContactResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{32}
}

// The request of a Users.AcceptContact RPC
type UsersServiceAcceptContactRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContactId string `protobuf:"bytes,1,opt,name=contact_id,json=contactId,proto3" json:"contact_id,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	UserId    string `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *UsersServiceAcceptContactRequest) Reset() {
	*x = UsersServiceAcceptContactRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceAcceptContactRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceAcceptContactRequest) ProtoMessage() {}

func (x *UsersServiceAcceptContactRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceAcceptContactRequest.ProtoReflect.Descriptor instead.
func (*UsersServiceAcceptContactRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{33}
}

func (x *UsersServiceAcceptContactRequest) GetContactId() string {
	if x != nil {
		return x.ContactId
	}
	return ""
}

func (x *UsersServiceAcceptContactRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *UsersServiceAcceptContactRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// The response of a Users.AcceptContact RPC
type UsersServiceAcceptContactResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UsersServiceAcceptContactResponse) Reset() {
	*x = UsersServiceAcceptContactResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceAcceptContactResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceAcceptContactResponse) ProtoMessage() {}

func (x *UsersServiceAcceptContactResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceAcceptContactResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceAcceptContactResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{34}
}

// The request of a Users.GetContacts RPC
type UsersServiceGetContactsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contacts []*Contact `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	// Return number of users in database
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *UsersServiceGetContactsResponse) Reset() {
	*x = UsersServiceGetContactsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsersServiceGetContactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsersServiceGetContactsResponse) ProtoMessage() {}

func (x *UsersServiceGetContactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_users_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsersServiceGetContactsResponse.ProtoReflect.Descriptor instead.
func (*UsersServiceGetContactsResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP(), []int{35}
}

func (x *UsersServiceGetContactsResponse) GetContacts() []*Contact {
	if x != nil {
		return x.Contacts
	}
	return nil
}

func (x *UsersServiceGetContactsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_nuntio_users_v1alpha1_users_users_proto protoreflect.FileDescriptor

var file_nuntio_users_v1alpha1_users_users_proto_rawDesc = []byte{
	0x0a, 0x27, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x1a, 0x2a, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x19, 0x0a, 0x17,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x6a, 0x0a, 0x19, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0x4d, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xa4,
	0x01, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x20,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22,
	0x23, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x27, 0x0a, 0x25, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x25, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x26, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x9e, 0x01, 0x0a, 0x23, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x45, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x24, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x7d, 0x0a,
	0x16, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4a, 0x0a, 0x17,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x1c, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22,
	0xa9, 0x01, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1f, 0x0a,
	0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x08, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b,
	0x0a, 0x09, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x22, 0x80, 0x01, 0x0a, 0x19,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x1c,
	0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x0a, 0x1d,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x66, 0x0a, 0x1b,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x19,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0x83,
	0x01, 0x0a, 0x1a, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a,
	0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x52, 0x0b, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x20, 0x0a,
	0x1e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x88, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x22, 0xd9, 0x01, 0x0a, 0x1d, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0e, 0x66, 0x72, 0x6f, 0x6d,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x0d, 0x74, 0x6f,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0c, 0x74, 0x6f, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x5a, 0x0a, 0x1e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x22, 0x78, 0x0a, 0x20, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x78, 0x0a, 0x20, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x73, 0x0a, 0x1f, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xe3, 0x11, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x2e,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x6f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x87, 0x01, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x39, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a,
	0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x95, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12, 0x8f,
	0x01, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x3a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x3b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01,
	0x12, 0x78, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x12, 0x33, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x30, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x2d, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x31,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x2e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7b, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x12, 0x34, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x84, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x12, 0x37, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x84, 0x01, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x37, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x38, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x35, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x30, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7b,
	0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x12, 0x34, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x35, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x6e,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x15, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x50, 0x01, 0x5a, 0x17, 0x2e, 0x2f, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xaa,
	0x02, 0x15, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x15, 0x4e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x5c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nuntio_users_v1alpha1_users_users_proto_rawDescOnce sync.Once
	file_nuntio_users_v1alpha1_users_users_proto_rawDescData = file_nuntio_users_v1alpha1_users_users_proto_rawDesc
)

func file_nuntio_users_v1alpha1_users_users_proto_rawDescGZIP() []byte {
	file_nuntio_users_v1alpha1_users_users_proto_rawDescOnce.Do(func() {
		file_nuntio_users_v1alpha1_users_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuntio_users_v1alpha1_users_users_proto_rawDescData)
	})
	return file_nuntio_users_v1alpha1_users_users_proto_rawDescData
}

var file_nuntio_users_v1alpha1_users_users_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_nuntio_users_v1alpha1_users_users_proto_goTypes = []interface{}{
	(*UsersServicePingRequest)(nil),                // 0: nuntio.users.v1alpha1.UsersServicePingRequest
	(*UsersServicePingResponse)(nil),               // 1: nuntio.users.v1alpha1.UsersServicePingResponse
	(*UsersServiceCreateRequest)(nil),              // 2: nuntio.users.v1alpha1.UsersServiceCreateRequest
	(*UsersServiceCreateResponse)(nil),             // 3: nuntio.users.v1alpha1.UsersServiceCreateResponse
	(*UsersServiceUpdatePasswordRequest)(nil),      // 4: nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest
	(*UsersServiceUpdatePasswordResponse)(nil),     // 5: nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse
	(*UsersServiceUpdateProfileRequest)(nil),       // 6: nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest
	(*UsersServiceUpdateProfileResponse)(nil),      // 7: nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse
	(*UsersServiceUpdateContactInfoRequest)(nil),   // 8: nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest
	(*UsersServiceUpdateContactInfoResponse)(nil),  // 9: nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse
	(*UsersServiceUploadProfileImageRequest)(nil),  // 10: nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest
	(*UsersServiceUploadProfileImageResponse)(nil), // 11: nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse
	(*UsersServiceUploadCoverImageRequest)(nil),    // 12: nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest
	(*UsersServiceUploadCoverImageResponse)(nil),   // 13: nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse
	(*UsersServiceGetRequest)(nil),                 // 14: nuntio.users.v1alpha1.UsersServiceGetRequest
	(*UsersServiceGetResponse)(nil),                // 15: nuntio.users.v1alpha1.UsersServiceGetResponse
	(*UsersServiceGetTokensRequest)(nil),           // 16: nuntio.users.v1alpha1.UsersServiceGetTokensRequest
	(*UsersServiceGetContactsRequest)(nil),         // 17: nuntio.users.v1alpha1.UsersServiceGetContactsRequest
	(*UsersServiceDeleteRequest)(nil),              // 18: nuntio.users.v1alpha1.UsersServiceDeleteRequest
	(*UsersServiceDeleteResponse)(nil),             // 19: nuntio.users.v1alpha1.UsersServiceDeleteResponse
	(*UsersServiceGetTokensResponse)(nil),          // 20: nuntio.users.v1alpha1.UsersServiceGetTokensResponse
	(*UsersServiceListResponse)(nil),               // 21: nuntio.users.v1alpha1.UsersServiceListResponse
	(*UsersServiceGetManyResponse)(nil),            // 22: nuntio.users.v1alpha1.UsersServiceGetManyResponse
	(*UsersServiceSearchResponse)(nil),             // 23: nuntio.users.v1alpha1.UsersServiceSearchResponse
	(*UsersServiceSearchRequest)(nil),              // 24: nuntio.users.v1alpha1.UsersServiceSearchRequest
	(*UsersServiceGetManyRequest)(nil),             // 25: nuntio.users.v1alpha1.UsersServiceGetManyRequest
	(*UsersServiceDeleteManyRequest)(nil),          // 26: nuntio.users.v1alpha1.UsersServiceDeleteManyRequest
	(*UsersServiceDeleteManyResponse)(nil),         // 27: nuntio.users.v1alpha1.UsersServiceDeleteManyResponse
	(*UsersServiceListRequest)(nil),                // 28: nuntio.users.v1alpha1.UsersServiceListRequest
	(*UsersServiceAddContactRequest)(nil),          // 29: nuntio.users.v1alpha1.UsersServiceAddContactRequest
	(*UsersServiceAddContactResponse)(nil),         // 30: nuntio.users.v1alpha1.UsersServiceAddContactResponse
	(*UsersServiceRemoveContactRequest)(nil),       // 31: nuntio.users.v1alpha1.UsersServiceRemoveContactRequest
	(*UsersServiceRemoveContactResponse)(nil),      // 32: nuntio.users.v1alpha1.UsersServiceRemoveContactResponse
	(*UsersServiceAcceptContactRequest)(nil),       // 33: nuntio.users.v1alpha1.UsersServiceAcceptContactRequest
	(*UsersServiceAcceptContactResponse)(nil),      // 34: nuntio.users.v1alpha1.UsersServiceAcceptContactResponse
	(*UsersServiceGetContactsResponse)(nil),        // 35: nuntio.users.v1alpha1.UsersServiceGetContactsResponse
	(*User)(nil),                                   // 36: nuntio.users.v1alpha1.User
	(*UserIdentifier)(nil),                         // 37: nuntio.users.v1alpha1.UserIdentifier
	(*Profile)(nil),                                // 38: nuntio.users.v1alpha1.Profile
	(*TokenMeta)(nil),                              // 39: nuntio.users.v1alpha1.TokenMeta
	(*Contact)(nil),                                // 40: nuntio.users.v1alpha1.Contact
}
var file_nuntio_users_v1alpha1_users_users_proto_depIdxs = []int32{
	36, // 0: nuntio.users.v1alpha1.UsersServiceCreateRequest.user:type_name -> nuntio.users.v1alpha1.User
	36, // 1: nuntio.users.v1alpha1.UsersServiceCreateResponse.user:type_name -> nuntio.users.v1alpha1.User
	37, // 2: nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 3: nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	38, // 4: nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.profile:type_name -> nuntio.users.v1alpha1.Profile
	37, // 5: nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 6: nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 7: nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 8: nuntio.users.v1alpha1.UsersServiceGetRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	36, // 9: nuntio.users.v1alpha1.UsersServiceGetResponse.user:type_name -> nuntio.users.v1alpha1.User
	37, // 10: nuntio.users.v1alpha1.UsersServiceDeleteRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	39, // 11: nuntio.users.v1alpha1.UsersServiceGetTokensResponse.tokens:type_name -> nuntio.users.v1alpha1.TokenMeta
	36, // 12: nuntio.users.v1alpha1.UsersServiceListResponse.users:type_name -> nuntio.users.v1alpha1.User
	36, // 13: nuntio.users.v1alpha1.UsersServiceGetManyResponse.users:type_name -> nuntio.users.v1alpha1.User
	36, // 14: nuntio.users.v1alpha1.UsersServiceSearchResponse.users:type_name -> nuntio.users.v1alpha1.User
	37, // 15: nuntio.users.v1alpha1.UsersServiceGetManyRequest.identifiers:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 16: nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.identifiers:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 17: nuntio.users.v1alpha1.UsersServiceAddContactRequest.from_identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	37, // 18: nuntio.users.v1alpha1.UsersServiceAddContactRequest.to_identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	40, // 19: nuntio.users.v1alpha1.UsersServiceAddContactResponse.contact:type_name -> nuntio.users.v1alpha1.Contact
	40, // 20: nuntio.users.v1alpha1.UsersServiceGetContactsResponse.contacts:type_name -> nuntio.users.v1alpha1.Contact
	0,  // 21: nuntio.users.v1alpha1.UsersService.Ping:input_type -> nuntio.users.v1alpha1.UsersServicePingRequest
	2,  // 22: nuntio.users.v1alpha1.UsersService.Create:input_type -> nuntio.users.v1alpha1.UsersServiceCreateRequest
	4,  // 23: nuntio.users.v1alpha1.UsersService.UpdatePassword:input_type -> nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest
	6,  // 24: nuntio.users.v1alpha1.UsersService.UpdateProfile:input_type -> nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest
	8,  // 25: nuntio.users.v1alpha1.UsersService.UpdateContactInfo:input_type -> nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest
	10, // 26: nuntio.users.v1alpha1.UsersService.UploadProfileImage:input_type -> nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest
	12, // 27: nuntio.users.v1alpha1.UsersService.UploadCoverImage:input_type -> nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest
	16, // 28: nuntio.users.v1alpha1.UsersService.GetTokens:input_type -> nuntio.users.v1alpha1.UsersServiceGetTokensRequest
	24, // 29: nuntio.users.v1alpha1.UsersService.Search:input_type -> nuntio.users.v1alpha1.UsersServiceSearchRequest
	14, // 30: nuntio.users.v1alpha1.UsersService.Get:input_type -> nuntio.users.v1alpha1.UsersServiceGetRequest
	25, // 31: nuntio.users.v1alpha1.UsersService.GetMany:input_type -> nuntio.users.v1alpha1.UsersServiceGetManyRequest
	28, // 32: nuntio.users.v1alpha1.UsersService.List:input_type -> nuntio.users.v1alpha1.UsersServiceListRequest
	29, // 33: nuntio.users.v1alpha1.UsersService.AddContact:input_type -> nuntio.users.v1alpha1.UsersServiceAddContactRequest
	31, // 34: nuntio.users.v1alpha1.UsersService.RemoveContact:input_type -> nuntio.users.v1alpha1.UsersServiceRemoveContactRequest
	33, // 35: nuntio.users.v1alpha1.UsersService.AcceptContact:input_type -> nuntio.users.v1alpha1.UsersServiceAcceptContactRequest
	17, // 36: nuntio.users.v1alpha1.UsersService.GetContacts:input_type -> nuntio.users.v1alpha1.UsersServiceGetContactsRequest
	18, // 37: nuntio.users.v1alpha1.UsersService.Delete:input_type -> nuntio.users.v1alpha1.UsersServiceDeleteRequest
	26, // 38: nuntio.users.v1alpha1.UsersService.DeleteMany:input_type -> nuntio.users.v1alpha1.UsersServiceDeleteManyRequest
	1,  // 39: nuntio.users.v1alpha1.UsersService.Ping:output_type -> nuntio.users.v1alpha1.UsersServicePingResponse
	3,  // 40: nuntio.users.v1alpha1.UsersService.Create:output_type -> nuntio.users.v1alpha1.UsersServiceCreateResponse
	5,  // 41: nuntio.users.v1alpha1.UsersService.UpdatePassword:output_type -> nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse
	7,  // 42: nuntio.users.v1alpha1.UsersService.UpdateProfile:output_type -> nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse
	9,  // 43: nuntio.users.v1alpha1.UsersService.UpdateContactInfo:output_type -> nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse
	11, // 44: nuntio.users.v1alpha1.UsersService.UploadProfileImage:output_type -> nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse
	13, // 45: nuntio.users.v1alpha1.UsersService.UploadCoverImage:output_type -> nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse
	20, // 46: nuntio.users.v1alpha1.UsersService.GetTokens:output_type -> nuntio.users.v1alpha1.UsersServiceGetTokensResponse
	23, // 47: nuntio.users.v1alpha1.UsersService.Search:output_type -> nuntio.users.v1alpha1.UsersServiceSearchResponse
	15, // 48: nuntio.users.v1alpha1.UsersService.Get:output_type -> nuntio.users.v1alpha1.UsersServiceGetResponse
	22, // 49: nuntio.users.v1alpha1.UsersService.GetMany:output_type -> nuntio.users.v1alpha1.UsersServiceGetManyResponse
	21, // 50: nuntio.users.v1alpha1.UsersService.List:output_type -> nuntio.users.v1alpha1.UsersServiceListResponse
	30, // 51: nuntio.users.v1alpha1.UsersService.AddContact:output_type -> nuntio.users.v1alpha1.UsersServiceAddContactResponse
	32, // 52: nuntio.users.v1alpha1.UsersService.RemoveContact:output_type -> nuntio.users.v1alpha1.UsersServiceRemoveContactResponse
	34, // 53: nuntio.users.v1alpha1.UsersService.AcceptContact:output_type -> nuntio.users.v1alpha1.UsersServiceAcceptContactResponse
	35, // 54: nuntio.users.v1alpha1.UsersService.GetContacts:output_type -> nuntio.users.v1alpha1.UsersServiceGetContactsResponse
	19, // 55: nuntio.users.v1alpha1.UsersService.Delete:output_type -> nuntio.users.v1alpha1.UsersServiceDeleteResponse
	27, // 56: nuntio.users.v1alpha1.UsersService.DeleteMany:output_type -> nuntio.users.v1alpha1.UsersServiceDeleteManyResponse
	39, // [39:57] is the sub-list for method output_type
	21, // [21:39] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nuntio_users_v1alpha1_users_users_proto_init() }
func file_nuntio_users_v1alpha1_users_users_proto_init() {
	if File_nuntio_users_v1alpha1_users_users_proto != nil {
		return
	}
	file_nuntio_users_v1alpha1_users_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdatePasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdatePasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdateProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdateContactInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUpdateContactInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUploadProfileImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUploadProfileImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUploadCoverImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceUploadCoverImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetTokensRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetContactsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetTokensResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceDeleteManyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceDeleteManyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceAddContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceAddContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceRemoveContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceRemoveContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceAcceptContactRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceAcceptContactResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_users_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsersServiceGetContactsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nuntio_users_v1alpha1_users_users_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_nuntio_users_v1alpha1_users_users_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_nuntio_users_v1alpha1_users_users_proto_msgTypes[24].OneofWrappers = []interface{}{}
	file_nuntio_users_v1alpha1_users_users_proto_msgTypes[28].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuntio_users_v1alpha1_users_users_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuntio_users_v1alpha1_users_users_proto_goTypes,
		DependencyIndexes: file_nuntio_users_v1alpha1_users_users_proto_depIdxs,
		MessageInfos:      file_nuntio_users_v1alpha1_users_users_proto_msgTypes,
	}.Build()
	File_nuntio_users_v1alpha1_users_users_proto = out.File
	file_nuntio_users_v1alpha1_users_users_proto_rawDesc = nil
	file_nuntio_users_v1alpha1_users_users_proto_goTypes = nil
	file_nuntio_users_v1alpha1_users_users_proto_depIdxs = nil
}
