// source: nuntio/users/v1alpha1/users_messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
goog.exportSymbol('proto.nuntio.users.v1alpha1.AccessToken', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Bcrypt', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Contact', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.ContactInfo', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.CountryCode', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.DeviceInfo', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.EmailProvider', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.EmailProviderType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.File', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Filter', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Filter.Order', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Filter.SortBy', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Folder', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.GenderType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Group', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.GroupMeta', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Hash', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.HashingAlgorithm', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Image', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.LoginStatus', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.LoginType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Namespace', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.OAuthProvider', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.OauthProviderType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Object', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Profile', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.RefreshToken', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.RelationTuple', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Releation', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Scrypt', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.Template', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TemplateType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TextProvider', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TextProviderType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TokenMeta', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TokenPair', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.TokenType', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.User', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UserIdentifier', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UserMeta', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.VerificationCode', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.VerificationType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Image.displayName = 'proto.nuntio.users.v1alpha1.Image';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.VerificationCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.VerificationCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.VerificationCode.displayName = 'proto.nuntio.users.v1alpha1.VerificationCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Profile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Profile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Profile.displayName = 'proto.nuntio.users.v1alpha1.Profile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Contact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Contact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Contact.displayName = 'proto.nuntio.users.v1alpha1.Contact';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.ContactInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.ContactInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.ContactInfo.displayName = 'proto.nuntio.users.v1alpha1.ContactInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UserIdentifier = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UserIdentifier, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UserIdentifier.displayName = 'proto.nuntio.users.v1alpha1.UserIdentifier';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Bcrypt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Bcrypt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Bcrypt.displayName = 'proto.nuntio.users.v1alpha1.Bcrypt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Scrypt = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Scrypt, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Scrypt.displayName = 'proto.nuntio.users.v1alpha1.Scrypt';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Template = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.Template.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Template, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Template.displayName = 'proto.nuntio.users.v1alpha1.Template';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.OAuthProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.OAuthProvider.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.OAuthProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.OAuthProvider.displayName = 'proto.nuntio.users.v1alpha1.OAuthProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Namespace = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.Namespace.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Namespace, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Namespace.displayName = 'proto.nuntio.users.v1alpha1.Namespace';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.GroupMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.GroupMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.GroupMeta.displayName = 'proto.nuntio.users.v1alpha1.GroupMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Group.displayName = 'proto.nuntio.users.v1alpha1.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UserMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UserMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UserMeta.displayName = 'proto.nuntio.users.v1alpha1.UserMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Hash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Hash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Hash.displayName = 'proto.nuntio.users.v1alpha1.Hash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.User.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.User.displayName = 'proto.nuntio.users.v1alpha1.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.TokenMeta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.TokenMeta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.TokenMeta.displayName = 'proto.nuntio.users.v1alpha1.TokenMeta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.AccessToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.AccessToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.AccessToken.displayName = 'proto.nuntio.users.v1alpha1.AccessToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.RefreshToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.RefreshToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.RefreshToken.displayName = 'proto.nuntio.users.v1alpha1.RefreshToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.TokenPair = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.TokenPair, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.TokenPair.displayName = 'proto.nuntio.users.v1alpha1.TokenPair';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.File = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.File, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.File.displayName = 'proto.nuntio.users.v1alpha1.File';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Filter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Filter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Filter.displayName = 'proto.nuntio.users.v1alpha1.Filter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Folder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.Folder.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Folder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Folder.displayName = 'proto.nuntio.users.v1alpha1.Folder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.EmailProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.EmailProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.EmailProvider.displayName = 'proto.nuntio.users.v1alpha1.EmailProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.TextProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.TextProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.TextProvider.displayName = 'proto.nuntio.users.v1alpha1.TextProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Object = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Object.displayName = 'proto.nuntio.users.v1alpha1.Object';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.Releation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.Releation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.Releation.displayName = 'proto.nuntio.users.v1alpha1.Releation';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.RelationTuple = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.RelationTuple, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.RelationTuple.displayName = 'proto.nuntio.users.v1alpha1.RelationTuple';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Image.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expires: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    key: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Image}
 */
proto.nuntio.users.v1alpha1.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Image;
  return proto.nuntio.users.v1alpha1.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Image}
 */
proto.nuntio.users.v1alpha1.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExpires(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpires();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Image.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Image} returns this
 */
proto.nuntio.users.v1alpha1.Image.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Image.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Image} returns this
*/
proto.nuntio.users.v1alpha1.Image.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Image} returns this
 */
proto.nuntio.users.v1alpha1.Image.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Image.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool expires = 3;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Image.prototype.getExpires = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Image} returns this
 */
proto.nuntio.users.v1alpha1.Image.prototype.setExpires = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional string key = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Image.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Image} returns this
 */
proto.nuntio.users.v1alpha1.Image.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.VerificationCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.VerificationCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.VerificationCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: (f = msg.getCode()) && proto.nuntio.users.v1alpha1.Hash.toObject(includeInstance, f),
    sentAt: (f = msg.getSentAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    attempts: jspb.Message.getFieldWithDefault(msg, 4, 0),
    lastAttempt: (f = msg.getLastAttempt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode}
 */
proto.nuntio.users.v1alpha1.VerificationCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.VerificationCode;
  return proto.nuntio.users.v1alpha1.VerificationCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.VerificationCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode}
 */
proto.nuntio.users.v1alpha1.VerificationCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuntio.users.v1alpha1.Hash;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Hash.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAttempts(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastAttempt(value);
      break;
    case 6:
      var value = /** @type {!proto.nuntio.users.v1alpha1.VerificationType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.VerificationCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.VerificationCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.VerificationCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuntio.users.v1alpha1.Hash.serializeBinaryToWriter
    );
  }
  f = message.getSentAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAttempts();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getLastAttempt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional Hash code = 1;
 * @return {?proto.nuntio.users.v1alpha1.Hash}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getCode = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Hash} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Hash, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Hash|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
*/
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setCode = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.clearCode = function() {
  return this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.hasCode = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp sent_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getSentAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
*/
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setSentAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.clearSentAt = function() {
  return this.setSentAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.hasSentAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp expires_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
*/
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int32 attempts = 4;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getAttempts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setAttempts = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp last_attempt = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getLastAttempt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
*/
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setLastAttempt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.clearLastAttempt = function() {
  return this.setLastAttempt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.hasLastAttempt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional VerificationType type = 6;
 * @return {!proto.nuntio.users.v1alpha1.VerificationType}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.VerificationType} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.VerificationType} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string user_id = 7;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.VerificationCode} returns this
 */
proto.nuntio.users.v1alpha1.VerificationCode.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Profile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Profile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Profile.toObject = function(includeInstance, msg) {
  var f, obj = {
    profileImage: (f = msg.getProfileImage()) && proto.nuntio.users.v1alpha1.Image.toObject(includeInstance, f),
    firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    birthdate: (f = msg.getBirthdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 5, 0),
    country: jspb.Message.getFieldWithDefault(msg, 6, ""),
    address: jspb.Message.getFieldWithDefault(msg, 7, ""),
    city: jspb.Message.getFieldWithDefault(msg, 8, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 9, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 10, 0),
    ssn: jspb.Message.getFieldWithDefault(msg, 11, ""),
    coverImage: (f = msg.getCoverImage()) && proto.nuntio.users.v1alpha1.Image.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Profile}
 */
proto.nuntio.users.v1alpha1.Profile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Profile;
  return proto.nuntio.users.v1alpha1.Profile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Profile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Profile}
 */
proto.nuntio.users.v1alpha1.Profile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuntio.users.v1alpha1.Image;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Image.deserializeBinaryFromReader);
      msg.setProfileImage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBirthdate(value);
      break;
    case 5:
      var value = /** @type {!proto.nuntio.users.v1alpha1.CountryCode} */ (reader.readEnum());
      msg.setPreferredLanguage(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 10:
      var value = /** @type {!proto.nuntio.users.v1alpha1.GenderType} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSsn(value);
      break;
    case 12:
      var value = new proto.nuntio.users.v1alpha1.Image;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Image.deserializeBinaryFromReader);
      msg.setCoverImage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Profile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Profile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Profile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfileImage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuntio.users.v1alpha1.Image.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBirthdate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.nuntio.users.v1alpha1.CountryCode} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {!proto.nuntio.users.v1alpha1.GenderType} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCoverImage();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.nuntio.users.v1alpha1.Image.serializeBinaryToWriter
    );
  }
};


/**
 * optional Image profile_image = 1;
 * @return {?proto.nuntio.users.v1alpha1.Image}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getProfileImage = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Image} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Image, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Image|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
*/
proto.nuntio.users.v1alpha1.Profile.prototype.setProfileImage = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearProfileImage = function() {
  return this.setProfileImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasProfileImage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setFirstName = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearFirstName = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasFirstName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setLastName = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearLastName = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasLastName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp birthdate = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getBirthdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
*/
proto.nuntio.users.v1alpha1.Profile.prototype.setBirthdate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearBirthdate = function() {
  return this.setBirthdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasBirthdate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CountryCode preferred_language = 5;
 * @return {!proto.nuntio.users.v1alpha1.CountryCode}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getPreferredLanguage = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.CountryCode} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.CountryCode} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setPreferredLanguage = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearPreferredLanguage = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasPreferredLanguage = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string country = 6;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setCountry = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearCountry = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasCountry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string address = 7;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string city = 8;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setCity = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearCity = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasCity = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string postal_code = 9;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setPostalCode = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearPostalCode = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasPostalCode = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GenderType gender = 10;
 * @return {!proto.nuntio.users.v1alpha1.GenderType}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getGender = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.GenderType} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.GenderType} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setGender = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearGender = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasGender = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ssn = 11;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getSsn = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.setSsn = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearSsn = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasSsn = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional Image cover_image = 12;
 * @return {?proto.nuntio.users.v1alpha1.Image}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.getCoverImage = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Image} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Image, 12));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Image|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
*/
proto.nuntio.users.v1alpha1.Profile.prototype.setCoverImage = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Profile} returns this
 */
proto.nuntio.users.v1alpha1.Profile.prototype.clearCoverImage = function() {
  return this.setCoverImage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Profile.prototype.hasCoverImage = function() {
  return jspb.Message.getField(this, 12) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Contact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Contact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Contact.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromUserId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    toUserId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    from: (f = msg.getFrom()) && proto.nuntio.users.v1alpha1.User.toObject(includeInstance, f),
    to: (f = msg.getTo()) && proto.nuntio.users.v1alpha1.User.toObject(includeInstance, f),
    accepted: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    acceptedAt: (f = msg.getAcceptedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sentAt: (f = msg.getSentAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Contact}
 */
proto.nuntio.users.v1alpha1.Contact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Contact;
  return proto.nuntio.users.v1alpha1.Contact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Contact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Contact}
 */
proto.nuntio.users.v1alpha1.Contact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setToUserId(value);
      break;
    case 4:
      var value = new proto.nuntio.users.v1alpha1.User;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.User.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 5:
      var value = new proto.nuntio.users.v1alpha1.User;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.User.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setAcceptedAt(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSentAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Contact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Contact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Contact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getToUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.nuntio.users.v1alpha1.User.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuntio.users.v1alpha1.User.serializeBinaryToWriter
    );
  }
  f = message.getAccepted();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAcceptedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSentAt();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from_user_id = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getFromUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.setFromUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string to_user_id = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getToUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.setToUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional User from = 4;
 * @return {?proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getFrom = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.User} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.User, 4));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.User|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
*/
proto.nuntio.users.v1alpha1.Contact.prototype.setFrom = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.clearFrom = function() {
  return this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional User to = 5;
 * @return {?proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getTo = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.User} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.User, 5));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.User|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
*/
proto.nuntio.users.v1alpha1.Contact.prototype.setTo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.clearTo = function() {
  return this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.hasTo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool accepted = 6;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.setAccepted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional google.protobuf.Timestamp accepted_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getAcceptedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
*/
proto.nuntio.users.v1alpha1.Contact.prototype.setAcceptedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.clearAcceptedAt = function() {
  return this.setAcceptedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.hasAcceptedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional google.protobuf.Timestamp sent_at = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.getSentAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
*/
proto.nuntio.users.v1alpha1.Contact.prototype.setSentAt = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Contact} returns this
 */
proto.nuntio.users.v1alpha1.Contact.prototype.clearSentAt = function() {
  return this.setSentAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Contact.prototype.hasSentAt = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.ContactInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.ContactInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.ContactInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo}
 */
proto.nuntio.users.v1alpha1.ContactInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.ContactInfo;
  return proto.nuntio.users.v1alpha1.ContactInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.ContactInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo}
 */
proto.nuntio.users.v1alpha1.ContactInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.ContactInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.ContactInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.ContactInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo} returns this
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo} returns this
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string phone = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo} returns this
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.setPhone = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.ContactInfo} returns this
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.clearPhone = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.ContactInfo.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UserIdentifier.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UserIdentifier} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UserIdentifier.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    id: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UserIdentifier;
  return proto.nuntio.users.v1alpha1.UserIdentifier.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UserIdentifier} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UserIdentifier.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UserIdentifier} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UserIdentifier.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier} returns this
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phone = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier} returns this
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier} returns this
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.setUsername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string id = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier} returns this
 */
proto.nuntio.users.v1alpha1.UserIdentifier.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Bcrypt.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Bcrypt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Bcrypt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Bcrypt.toObject = function(includeInstance, msg) {
  var f, obj = {
    cost: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Bcrypt}
 */
proto.nuntio.users.v1alpha1.Bcrypt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Bcrypt;
  return proto.nuntio.users.v1alpha1.Bcrypt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Bcrypt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Bcrypt}
 */
proto.nuntio.users.v1alpha1.Bcrypt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCost(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Bcrypt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Bcrypt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Bcrypt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Bcrypt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCost();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 cost = 1;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Bcrypt.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Bcrypt} returns this
 */
proto.nuntio.users.v1alpha1.Bcrypt.prototype.setCost = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Scrypt.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Scrypt} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Scrypt.toObject = function(includeInstance, msg) {
  var f, obj = {
    signerKey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    saltSeparator: jspb.Message.getFieldWithDefault(msg, 2, ""),
    rounds: jspb.Message.getFieldWithDefault(msg, 3, 0),
    memCost: jspb.Message.getFieldWithDefault(msg, 4, 0),
    p: jspb.Message.getFieldWithDefault(msg, 5, 0),
    keyLen: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Scrypt}
 */
proto.nuntio.users.v1alpha1.Scrypt.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Scrypt;
  return proto.nuntio.users.v1alpha1.Scrypt.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Scrypt} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Scrypt}
 */
proto.nuntio.users.v1alpha1.Scrypt.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignerKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSaltSeparator(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRounds(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemCost(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setP(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setKeyLen(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Scrypt.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Scrypt} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Scrypt.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSignerKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSaltSeparator();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRounds();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getMemCost();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getP();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getKeyLen();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional string signer_key = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getSignerKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setSignerKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string salt_separator = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getSaltSeparator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setSaltSeparator = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 rounds = 3;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getRounds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setRounds = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 mem_cost = 4;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getMemCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setMemCost = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 p = 5;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getP = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setP = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 key_len = 6;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.getKeyLen = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Scrypt} returns this
 */
proto.nuntio.users.v1alpha1.Scrypt.prototype.setKeyLen = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.Template.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Template.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Template.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Template} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Template.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    subject: jspb.Message.getFieldWithDefault(msg, 3, ""),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    formatList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Template}
 */
proto.nuntio.users.v1alpha1.Template.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Template;
  return proto.nuntio.users.v1alpha1.Template.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Template} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Template}
 */
proto.nuntio.users.v1alpha1.Template.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 2:
      var value = /** @type {!proto.nuntio.users.v1alpha1.TemplateType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addFormat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Template.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Template.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Template} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Template.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getFormatList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string body = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Template.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TemplateType type = 2;
 * @return {!proto.nuntio.users.v1alpha1.TemplateType}
 */
proto.nuntio.users.v1alpha1.Template.prototype.getType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.TemplateType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.TemplateType} value
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string subject = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Template.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.setSubject = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool enabled = 4;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Template.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated string format = 5;
 * @return {!Array<string>}
 */
proto.nuntio.users.v1alpha1.Template.prototype.getFormatList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.setFormatList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.addFormat = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.Template} returns this
 */
proto.nuntio.users.v1alpha1.Template.prototype.clearFormatList = function() {
  return this.setFormatList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.OAuthProvider.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.OAuthProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.OAuthProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.OAuthProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    secret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 4, ""),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    enabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    url: jspb.Message.getFieldWithDefault(msg, 7, ""),
    scopesList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    redirectUrl: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.OAuthProvider;
  return proto.nuntio.users.v1alpha1.OAuthProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.OAuthProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.nuntio.users.v1alpha1.OauthProviderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnabled(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addScopes(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.OAuthProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.OAuthProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.OAuthProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getRedirectUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OauthProviderType type = 2;
 * @return {!proto.nuntio.users.v1alpha1.OauthProviderType}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.OauthProviderType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.OauthProviderType} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setSecret = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string logo = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool enabled = 6;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * repeated string scopes = 8;
 * @return {!Array<string>}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getScopesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setScopesList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.addScopes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.clearScopesList = function() {
  return this.setScopesList([]);
};


/**
 * optional string redirect_url = 9;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.getRedirectUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.OAuthProvider} returns this
 */
proto.nuntio.users.v1alpha1.OAuthProvider.prototype.setRedirectUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.Namespace.repeatedFields_ = [12,17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Namespace.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Namespace} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Namespace.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    logo: (f = msg.getLogo()) && proto.nuntio.users.v1alpha1.Image.toObject(includeInstance, f),
    enableSignup: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    enableLogin: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    validatePassword: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    publicKey: jspb.Message.getFieldWithDefault(msg, 8, ""),
    hashingAlgorithm: jspb.Message.getFieldWithDefault(msg, 9, 0),
    bcrypt: (f = msg.getBcrypt()) && proto.nuntio.users.v1alpha1.Bcrypt.toObject(includeInstance, f),
    scrypt: (f = msg.getScrypt()) && proto.nuntio.users.v1alpha1.Scrypt.toObject(includeInstance, f),
    supportedLoginMechanismsList: (f = jspb.Message.getRepeatedField(msg, 12)) == null ? undefined : f,
    templatesMap: (f = msg.getTemplatesMap()) ? f.toObject(includeInstance, proto.nuntio.users.v1alpha1.Template.toObject) : [],
    accessTokenTtl: jspb.Message.getFieldWithDefault(msg, 14, 0),
    refreshTokenTtl: jspb.Message.getFieldWithDefault(msg, 15, 0),
    verificationCodeTtl: jspb.Message.getFieldWithDefault(msg, 16, 0),
    callbacksList: (f = jspb.Message.getRepeatedField(msg, 17)) == null ? undefined : f,
    id: jspb.Message.getFieldWithDefault(msg, 18, ""),
    oauthProvidersMap: (f = msg.getOauthProvidersMap()) ? f.toObject(includeInstance, proto.nuntio.users.v1alpha1.OAuthProvider.toObject) : [],
    emailProvider: (f = msg.getEmailProvider()) && proto.nuntio.users.v1alpha1.EmailProvider.toObject(includeInstance, f),
    textProvider: (f = msg.getTextProvider()) && proto.nuntio.users.v1alpha1.TextProvider.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Namespace}
 */
proto.nuntio.users.v1alpha1.Namespace.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Namespace;
  return proto.nuntio.users.v1alpha1.Namespace.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Namespace} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Namespace}
 */
proto.nuntio.users.v1alpha1.Namespace.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.nuntio.users.v1alpha1.Image;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Image.deserializeBinaryFromReader);
      msg.setLogo(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableSignup(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnableLogin(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValidatePassword(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 9:
      var value = /** @type {!proto.nuntio.users.v1alpha1.HashingAlgorithm} */ (reader.readEnum());
      msg.setHashingAlgorithm(value);
      break;
    case 10:
      var value = new proto.nuntio.users.v1alpha1.Bcrypt;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Bcrypt.deserializeBinaryFromReader);
      msg.setBcrypt(value);
      break;
    case 11:
      var value = new proto.nuntio.users.v1alpha1.Scrypt;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Scrypt.deserializeBinaryFromReader);
      msg.setScrypt(value);
      break;
    case 12:
      var values = /** @type {!Array<!proto.nuntio.users.v1alpha1.LoginType>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSupportedLoginMechanisms(values[i]);
      }
      break;
    case 13:
      var value = msg.getTemplatesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.nuntio.users.v1alpha1.Template.deserializeBinaryFromReader, "", new proto.nuntio.users.v1alpha1.Template());
         });
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAccessTokenTtl(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefreshTokenTtl(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVerificationCodeTtl(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.addCallbacks(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 19:
      var value = msg.getOauthProvidersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.nuntio.users.v1alpha1.OAuthProvider.deserializeBinaryFromReader, "", new proto.nuntio.users.v1alpha1.OAuthProvider());
         });
      break;
    case 20:
      var value = new proto.nuntio.users.v1alpha1.EmailProvider;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.EmailProvider.deserializeBinaryFromReader);
      msg.setEmailProvider(value);
      break;
    case 21:
      var value = new proto.nuntio.users.v1alpha1.TextProvider;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.TextProvider.deserializeBinaryFromReader);
      msg.setTextProvider(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Namespace.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Namespace} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Namespace.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLogo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuntio.users.v1alpha1.Image.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHashingAlgorithm();
  if (f !== 0.0) {
    writer.writeEnum(
      9,
      f
    );
  }
  f = message.getBcrypt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.nuntio.users.v1alpha1.Bcrypt.serializeBinaryToWriter
    );
  }
  f = message.getScrypt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.nuntio.users.v1alpha1.Scrypt.serializeBinaryToWriter
    );
  }
  f = message.getSupportedLoginMechanismsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      12,
      f
    );
  }
  f = message.getTemplatesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(13, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.nuntio.users.v1alpha1.Template.serializeBinaryToWriter);
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeInt32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeInt32(
      16,
      f
    );
  }
  f = message.getCallbacksList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      17,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getOauthProvidersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(19, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.nuntio.users.v1alpha1.OAuthProvider.serializeBinaryToWriter);
  }
  f = message.getEmailProvider();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.nuntio.users.v1alpha1.EmailProvider.serializeBinaryToWriter
    );
  }
  f = message.getTextProvider();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      proto.nuntio.users.v1alpha1.TextProvider.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setName = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearName = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Image logo = 2;
 * @return {?proto.nuntio.users.v1alpha1.Image}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getLogo = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Image} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Image, 2));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Image|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setLogo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearLogo = function() {
  return this.setLogo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasLogo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool enable_signup = 3;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getEnableSignup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setEnableSignup = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearEnableSignup = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasEnableSignup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool enable_login = 4;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getEnableLogin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setEnableLogin = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearEnableLogin = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasEnableLogin = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool validate_password = 7;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getValidatePassword = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setValidatePassword = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearValidatePassword = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasValidatePassword = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string public_key = 8;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setPublicKey = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearPublicKey = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasPublicKey = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional HashingAlgorithm hashing_algorithm = 9;
 * @return {!proto.nuntio.users.v1alpha1.HashingAlgorithm}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getHashingAlgorithm = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.HashingAlgorithm} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.HashingAlgorithm} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setHashingAlgorithm = function(value) {
  return jspb.Message.setProto3EnumField(this, 9, value);
};


/**
 * optional Bcrypt bcrypt = 10;
 * @return {?proto.nuntio.users.v1alpha1.Bcrypt}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getBcrypt = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Bcrypt} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Bcrypt, 10));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Bcrypt|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setBcrypt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearBcrypt = function() {
  return this.setBcrypt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasBcrypt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional Scrypt scrypt = 11;
 * @return {?proto.nuntio.users.v1alpha1.Scrypt}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getScrypt = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Scrypt} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Scrypt, 11));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Scrypt|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setScrypt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearScrypt = function() {
  return this.setScrypt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasScrypt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * repeated LoginType supported_login_mechanisms = 12;
 * @return {!Array<!proto.nuntio.users.v1alpha1.LoginType>}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getSupportedLoginMechanismsList = function() {
  return /** @type {!Array<!proto.nuntio.users.v1alpha1.LoginType>} */ (jspb.Message.getRepeatedField(this, 12));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.LoginType>} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setSupportedLoginMechanismsList = function(value) {
  return jspb.Message.setField(this, 12, value || []);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.LoginType} value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.addSupportedLoginMechanisms = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 12, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearSupportedLoginMechanismsList = function() {
  return this.setSupportedLoginMechanismsList([]);
};


/**
 * map<string, Template> templates = 13;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.nuntio.users.v1alpha1.Template>}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getTemplatesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.nuntio.users.v1alpha1.Template>} */ (
      jspb.Message.getMapField(this, 13, opt_noLazyCreate,
      proto.nuntio.users.v1alpha1.Template));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearTemplatesMap = function() {
  this.getTemplatesMap().clear();
  return this;};


/**
 * optional int32 access_token_ttl = 14;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getAccessTokenTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setAccessTokenTtl = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearAccessTokenTtl = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasAccessTokenTtl = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional int32 refresh_token_ttl = 15;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getRefreshTokenTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setRefreshTokenTtl = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearRefreshTokenTtl = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasRefreshTokenTtl = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional int32 verification_code_ttl = 16;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getVerificationCodeTtl = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setVerificationCodeTtl = function(value) {
  return jspb.Message.setField(this, 16, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearVerificationCodeTtl = function() {
  return jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasVerificationCodeTtl = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated string callbacks = 17;
 * @return {!Array<string>}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getCallbacksList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 17));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setCallbacksList = function(value) {
  return jspb.Message.setField(this, 17, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.addCallbacks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 17, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearCallbacksList = function() {
  return this.setCallbacksList([]);
};


/**
 * optional string id = 18;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * map<string, OAuthProvider> oauth_providers = 19;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.nuntio.users.v1alpha1.OAuthProvider>}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getOauthProvidersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.nuntio.users.v1alpha1.OAuthProvider>} */ (
      jspb.Message.getMapField(this, 19, opt_noLazyCreate,
      proto.nuntio.users.v1alpha1.OAuthProvider));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearOauthProvidersMap = function() {
  this.getOauthProvidersMap().clear();
  return this;};


/**
 * optional EmailProvider email_provider = 20;
 * @return {?proto.nuntio.users.v1alpha1.EmailProvider}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getEmailProvider = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.EmailProvider} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.EmailProvider, 20));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.EmailProvider|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setEmailProvider = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearEmailProvider = function() {
  return this.setEmailProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasEmailProvider = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional TextProvider text_provider = 21;
 * @return {?proto.nuntio.users.v1alpha1.TextProvider}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.getTextProvider = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.TextProvider} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.TextProvider, 21));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.TextProvider|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
*/
proto.nuntio.users.v1alpha1.Namespace.prototype.setTextProvider = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Namespace} returns this
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.clearTextProvider = function() {
  return this.setTextProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Namespace.prototype.hasTextProvider = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.GroupMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.GroupMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.GroupMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.GroupMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    amount: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.GroupMeta}
 */
proto.nuntio.users.v1alpha1.GroupMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.GroupMeta;
  return proto.nuntio.users.v1alpha1.GroupMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.GroupMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.GroupMeta}
 */
proto.nuntio.users.v1alpha1.GroupMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.GroupMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.GroupMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.GroupMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.GroupMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 amount = 1;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.GroupMeta.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.GroupMeta} returns this
 */
proto.nuntio.users.v1alpha1.GroupMeta.prototype.setAmount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.nuntio.users.v1alpha1.GroupMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Group}
 */
proto.nuntio.users.v1alpha1.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Group;
  return proto.nuntio.users.v1alpha1.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Group}
 */
proto.nuntio.users.v1alpha1.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = new proto.nuntio.users.v1alpha1.GroupMeta;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.GroupMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuntio.users.v1alpha1.GroupMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Group.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
 */
proto.nuntio.users.v1alpha1.Group.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Group.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
 */
proto.nuntio.users.v1alpha1.Group.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Group.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
*/
proto.nuntio.users.v1alpha1.Group.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
 */
proto.nuntio.users.v1alpha1.Group.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Group.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.Group.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
*/
proto.nuntio.users.v1alpha1.Group.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
 */
proto.nuntio.users.v1alpha1.Group.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Group.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional GroupMeta meta = 5;
 * @return {?proto.nuntio.users.v1alpha1.GroupMeta}
 */
proto.nuntio.users.v1alpha1.Group.prototype.getMeta = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.GroupMeta} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.GroupMeta, 5));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.GroupMeta|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
*/
proto.nuntio.users.v1alpha1.Group.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Group} returns this
 */
proto.nuntio.users.v1alpha1.Group.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Group.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UserMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UserMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UserMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    registrationType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    isPhoneVerified: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    isEmailVerified: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UserMeta}
 */
proto.nuntio.users.v1alpha1.UserMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UserMeta;
  return proto.nuntio.users.v1alpha1.UserMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UserMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UserMeta}
 */
proto.nuntio.users.v1alpha1.UserMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuntio.users.v1alpha1.LoginType} */ (reader.readEnum());
      msg.setRegistrationType(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPhoneVerified(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEmailVerified(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UserMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UserMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UserMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegistrationType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIsPhoneVerified();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsEmailVerified();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional LoginType registration_type = 1;
 * @return {!proto.nuntio.users.v1alpha1.LoginType}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.getRegistrationType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.LoginType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.LoginType} value
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.setRegistrationType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
*/
proto.nuntio.users.v1alpha1.UserMeta.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp updated_at = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.getUpdatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
*/
proto.nuntio.users.v1alpha1.UserMeta.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.clearUpdatedAt = function() {
  return this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool is_phone_verified = 4;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.getIsPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.setIsPhoneVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool is_email_verified = 5;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.getIsEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.UserMeta} returns this
 */
proto.nuntio.users.v1alpha1.UserMeta.prototype.setIsEmailVerified = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Hash.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Hash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Hash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Hash.toObject = function(includeInstance, msg) {
  var f, obj = {
    variant: jspb.Message.getFieldWithDefault(msg, 1, 0),
    body: jspb.Message.getFieldWithDefault(msg, 2, ""),
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Hash}
 */
proto.nuntio.users.v1alpha1.Hash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Hash;
  return proto.nuntio.users.v1alpha1.Hash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Hash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Hash}
 */
proto.nuntio.users.v1alpha1.Hash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuntio.users.v1alpha1.HashingAlgorithm} */ (reader.readEnum());
      msg.setVariant(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBody(value);
      break;
    case 3:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Hash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Hash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Hash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Hash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVariant();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getBody();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional HashingAlgorithm variant = 1;
 * @return {!proto.nuntio.users.v1alpha1.HashingAlgorithm}
 */
proto.nuntio.users.v1alpha1.Hash.prototype.getVariant = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.HashingAlgorithm} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.HashingAlgorithm} value
 * @return {!proto.nuntio.users.v1alpha1.Hash} returns this
 */
proto.nuntio.users.v1alpha1.Hash.prototype.setVariant = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string body = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Hash.prototype.getBody = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Hash} returns this
 */
proto.nuntio.users.v1alpha1.Hash.prototype.setBody = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * map<string, string> params = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.nuntio.users.v1alpha1.Hash.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.nuntio.users.v1alpha1.Hash} returns this
 */
proto.nuntio.users.v1alpha1.Hash.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.User.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    username: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: (f = msg.getPassword()) && proto.nuntio.users.v1alpha1.Hash.toObject(includeInstance, f),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.nuntio.users.v1alpha1.Group.toObject, includeInstance),
    contactInfo: (f = msg.getContactInfo()) && proto.nuntio.users.v1alpha1.ContactInfo.toObject(includeInstance, f),
    profile: (f = msg.getProfile()) && proto.nuntio.users.v1alpha1.Profile.toObject(includeInstance, f),
    meta: (f = msg.getMeta()) && proto.nuntio.users.v1alpha1.UserMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.User;
  return proto.nuntio.users.v1alpha1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 3:
      var value = new proto.nuntio.users.v1alpha1.Hash;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Hash.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 4:
      var value = new proto.nuntio.users.v1alpha1.Group;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 5:
      var value = new proto.nuntio.users.v1alpha1.ContactInfo;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.ContactInfo.deserializeBinaryFromReader);
      msg.setContactInfo(value);
      break;
    case 6:
      var value = new proto.nuntio.users.v1alpha1.Profile;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 7:
      var value = new proto.nuntio.users.v1alpha1.UserMeta;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.UserMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuntio.users.v1alpha1.Hash.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.nuntio.users.v1alpha1.Group.serializeBinaryToWriter
    );
  }
  f = message.getContactInfo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.nuntio.users.v1alpha1.ContactInfo.serializeBinaryToWriter
    );
  }
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.nuntio.users.v1alpha1.Profile.serializeBinaryToWriter
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.nuntio.users.v1alpha1.UserMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string username = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.User.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.User.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Hash password = 3;
 * @return {?proto.nuntio.users.v1alpha1.Hash}
 */
proto.nuntio.users.v1alpha1.User.prototype.getPassword = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Hash} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Hash, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Hash|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
*/
proto.nuntio.users.v1alpha1.User.prototype.setPassword = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearPassword = function() {
  return this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.User.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Group groups = 4;
 * @return {!Array<!proto.nuntio.users.v1alpha1.Group>}
 */
proto.nuntio.users.v1alpha1.User.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuntio.users.v1alpha1.Group, 4));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.Group>} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
*/
proto.nuntio.users.v1alpha1.User.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Group}
 */
proto.nuntio.users.v1alpha1.User.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.nuntio.users.v1alpha1.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * optional ContactInfo contact_info = 5;
 * @return {?proto.nuntio.users.v1alpha1.ContactInfo}
 */
proto.nuntio.users.v1alpha1.User.prototype.getContactInfo = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.ContactInfo} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.ContactInfo, 5));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.ContactInfo|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
*/
proto.nuntio.users.v1alpha1.User.prototype.setContactInfo = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearContactInfo = function() {
  return this.setContactInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.User.prototype.hasContactInfo = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Profile profile = 6;
 * @return {?proto.nuntio.users.v1alpha1.Profile}
 */
proto.nuntio.users.v1alpha1.User.prototype.getProfile = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Profile} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.Profile, 6));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Profile|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
*/
proto.nuntio.users.v1alpha1.User.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.User.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional UserMeta meta = 7;
 * @return {?proto.nuntio.users.v1alpha1.UserMeta}
 */
proto.nuntio.users.v1alpha1.User.prototype.getMeta = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserMeta} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.UserMeta, 7));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserMeta|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
*/
proto.nuntio.users.v1alpha1.User.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.User} returns this
 */
proto.nuntio.users.v1alpha1.User.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.User.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.TokenMeta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.TokenMeta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TokenMeta.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    country: jspb.Message.getFieldWithDefault(msg, 2, 0),
    postalCode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    loginType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    blockedAt: (f = msg.getBlockedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    oauthProvider: jspb.Message.getFieldWithDefault(msg, 8, 0),
    blocked: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    expiresAt: (f = msg.getExpiresAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    usedAt: (f = msg.getUsedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    device: jspb.Message.getFieldWithDefault(msg, 12, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta}
 */
proto.nuntio.users.v1alpha1.TokenMeta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.TokenMeta;
  return proto.nuntio.users.v1alpha1.TokenMeta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.TokenMeta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta}
 */
proto.nuntio.users.v1alpha1.TokenMeta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.nuntio.users.v1alpha1.CountryCode} */ (reader.readEnum());
      msg.setCountry(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPostalCode(value);
      break;
    case 4:
      var value = /** @type {!proto.nuntio.users.v1alpha1.LoginType} */ (reader.readEnum());
      msg.setLoginType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBlockedAt(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 8:
      var value = /** @type {!proto.nuntio.users.v1alpha1.OauthProviderType} */ (reader.readEnum());
      msg.setOauthProvider(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiresAt(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUsedAt(value);
      break;
    case 12:
      var value = /** @type {!proto.nuntio.users.v1alpha1.DeviceInfo} */ (reader.readEnum());
      msg.setDevice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.TokenMeta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.TokenMeta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TokenMeta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountry();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPostalCode();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getLoginType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBlockedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOauthProvider();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getExpiresAt();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUsedAt();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f !== 0.0) {
    writer.writeEnum(
      12,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional CountryCode country = 2;
 * @return {!proto.nuntio.users.v1alpha1.CountryCode}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getCountry = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.CountryCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.CountryCode} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setCountry = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 postal_code = 3;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getPostalCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setPostalCode = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional LoginType login_type = 4;
 * @return {!proto.nuntio.users.v1alpha1.LoginType}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getLoginType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.LoginType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.LoginType} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setLoginType = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string user_id = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp blocked_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getBlockedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
*/
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setBlockedAt = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.clearBlockedAt = function() {
  return this.setBlockedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.hasBlockedAt = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp created_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
*/
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional OauthProviderType oauth_provider = 8;
 * @return {!proto.nuntio.users.v1alpha1.OauthProviderType}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getOauthProvider = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.OauthProviderType} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.OauthProviderType} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setOauthProvider = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional bool blocked = 9;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setBlocked = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp expires_at = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getExpiresAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
*/
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setExpiresAt = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.clearExpiresAt = function() {
  return this.setExpiresAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.hasExpiresAt = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp used_at = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getUsedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
*/
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setUsedAt = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.clearUsedAt = function() {
  return this.setUsedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.hasUsedAt = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional DeviceInfo device = 12;
 * @return {!proto.nuntio.users.v1alpha1.DeviceInfo}
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.getDevice = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.DeviceInfo} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.DeviceInfo} value
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta} returns this
 */
proto.nuntio.users.v1alpha1.TokenMeta.prototype.setDevice = function(value) {
  return jspb.Message.setProto3EnumField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.AccessToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.AccessToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.AccessToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    refreshTokenId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    jwt: jspb.Message.getFieldWithDefault(msg, 2, ""),
    meta: (f = msg.getMeta()) && proto.nuntio.users.v1alpha1.TokenMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.AccessToken}
 */
proto.nuntio.users.v1alpha1.AccessToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.AccessToken;
  return proto.nuntio.users.v1alpha1.AccessToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.AccessToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.AccessToken}
 */
proto.nuntio.users.v1alpha1.AccessToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefreshTokenId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwt(value);
      break;
    case 3:
      var value = new proto.nuntio.users.v1alpha1.TokenMeta;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.TokenMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.AccessToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.AccessToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.AccessToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefreshTokenId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getJwt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.nuntio.users.v1alpha1.TokenMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string refresh_token_id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.getRefreshTokenId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.AccessToken} returns this
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.setRefreshTokenId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string jwt = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.getJwt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.AccessToken} returns this
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.setJwt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TokenMeta meta = 3;
 * @return {?proto.nuntio.users.v1alpha1.TokenMeta}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.getMeta = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.TokenMeta} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.TokenMeta, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.TokenMeta|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.AccessToken} returns this
*/
proto.nuntio.users.v1alpha1.AccessToken.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.AccessToken} returns this
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.AccessToken.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.RefreshToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.RefreshToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.RefreshToken.toObject = function(includeInstance, msg) {
  var f, obj = {
    jwt: jspb.Message.getFieldWithDefault(msg, 1, ""),
    meta: (f = msg.getMeta()) && proto.nuntio.users.v1alpha1.TokenMeta.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.RefreshToken}
 */
proto.nuntio.users.v1alpha1.RefreshToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.RefreshToken;
  return proto.nuntio.users.v1alpha1.RefreshToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.RefreshToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.RefreshToken}
 */
proto.nuntio.users.v1alpha1.RefreshToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setJwt(value);
      break;
    case 2:
      var value = new proto.nuntio.users.v1alpha1.TokenMeta;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.TokenMeta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.RefreshToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.RefreshToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.RefreshToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getJwt();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuntio.users.v1alpha1.TokenMeta.serializeBinaryToWriter
    );
  }
};


/**
 * optional string jwt = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.getJwt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.RefreshToken} returns this
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.setJwt = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional TokenMeta meta = 2;
 * @return {?proto.nuntio.users.v1alpha1.TokenMeta}
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.getMeta = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.TokenMeta} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.TokenMeta, 2));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.TokenMeta|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.RefreshToken} returns this
*/
proto.nuntio.users.v1alpha1.RefreshToken.prototype.setMeta = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.RefreshToken} returns this
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.clearMeta = function() {
  return this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.RefreshToken.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.TokenPair.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.TokenPair} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TokenPair.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessToken: (f = msg.getAccessToken()) && proto.nuntio.users.v1alpha1.AccessToken.toObject(includeInstance, f),
    refreshToken: (f = msg.getRefreshToken()) && proto.nuntio.users.v1alpha1.RefreshToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.TokenPair}
 */
proto.nuntio.users.v1alpha1.TokenPair.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.TokenPair;
  return proto.nuntio.users.v1alpha1.TokenPair.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.TokenPair} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.TokenPair}
 */
proto.nuntio.users.v1alpha1.TokenPair.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.nuntio.users.v1alpha1.AccessToken;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.AccessToken.deserializeBinaryFromReader);
      msg.setAccessToken(value);
      break;
    case 2:
      var value = new proto.nuntio.users.v1alpha1.RefreshToken;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.RefreshToken.deserializeBinaryFromReader);
      msg.setRefreshToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.TokenPair.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.TokenPair} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TokenPair.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.nuntio.users.v1alpha1.AccessToken.serializeBinaryToWriter
    );
  }
  f = message.getRefreshToken();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.nuntio.users.v1alpha1.RefreshToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional AccessToken access_token = 1;
 * @return {?proto.nuntio.users.v1alpha1.AccessToken}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.getAccessToken = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.AccessToken} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.AccessToken, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.AccessToken|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenPair} returns this
*/
proto.nuntio.users.v1alpha1.TokenPair.prototype.setAccessToken = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenPair} returns this
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.clearAccessToken = function() {
  return this.setAccessToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.hasAccessToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RefreshToken refresh_token = 2;
 * @return {?proto.nuntio.users.v1alpha1.RefreshToken}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.getRefreshToken = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.RefreshToken} */ (
    jspb.Message.getWrapperField(this, proto.nuntio.users.v1alpha1.RefreshToken, 2));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.RefreshToken|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.TokenPair} returns this
*/
proto.nuntio.users.v1alpha1.TokenPair.prototype.setRefreshToken = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.TokenPair} returns this
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.clearRefreshToken = function() {
  return this.setRefreshToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.TokenPair.prototype.hasRefreshToken = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.File.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.File.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.File} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.File.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createdAt: (f = msg.getCreatedAt()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 3, ""),
    contentType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    path: jspb.Message.getFieldWithDefault(msg, 6, ""),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    size: jspb.Message.getFieldWithDefault(msg, 8, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.File}
 */
proto.nuntio.users.v1alpha1.File.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.File;
  return proto.nuntio.users.v1alpha1.File.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.File} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.File}
 */
proto.nuntio.users.v1alpha1.File.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContentType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 7:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.File.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.File.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.File} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.File.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContentType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.File.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp created_at = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.nuntio.users.v1alpha1.File.prototype.getCreatedAt = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
*/
proto.nuntio.users.v1alpha1.File.prototype.setCreatedAt = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.clearCreatedAt = function() {
  return this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.File.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.File.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string content_type = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.File.prototype.getContentType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setContentType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string path = 6;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.File.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.Duration duration = 7;
 * @return {?proto.google.protobuf.Duration}
 */
proto.nuntio.users.v1alpha1.File.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 7));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
*/
proto.nuntio.users.v1alpha1.File.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.File.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 size = 8;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.File.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bytes data = 9;
 * @return {!(string|Uint8Array)}
 */
proto.nuntio.users.v1alpha1.File.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes data = 9;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.nuntio.users.v1alpha1.File.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.File.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.nuntio.users.v1alpha1.File} returns this
 */
proto.nuntio.users.v1alpha1.File.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Filter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Filter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Filter.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: jspb.Message.getFieldWithDefault(msg, 1, 0),
    to: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sort: jspb.Message.getFieldWithDefault(msg, 3, 0),
    order: jspb.Message.getFieldWithDefault(msg, 4, 0),
    search: jspb.Message.getFieldWithDefault(msg, 5, ""),
    groupId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    accepted: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Filter}
 */
proto.nuntio.users.v1alpha1.Filter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Filter;
  return proto.nuntio.users.v1alpha1.Filter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Filter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Filter}
 */
proto.nuntio.users.v1alpha1.Filter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 3:
      var value = /** @type {!proto.nuntio.users.v1alpha1.Filter.SortBy} */ (reader.readEnum());
      msg.setSort(value);
      break;
    case 4:
      var value = /** @type {!proto.nuntio.users.v1alpha1.Filter.Order} */ (reader.readEnum());
      msg.setOrder(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearch(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Filter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Filter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Filter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSort();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getOrder();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getSearch();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.Filter.SortBy = {
  SORT_BY_UNSPECIFIED: 0,
  SORT_BY_CREATED_AT: 1,
  SORT_BY_UPDATE_AT: 2
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.Filter.Order = {
  ORDER_UNSPECIFIED: 0,
  ORDER_INC: 1,
  ORDER_DEC: 2
};

/**
 * optional int32 from = 1;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 to = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional SortBy sort = 3;
 * @return {!proto.nuntio.users.v1alpha1.Filter.SortBy}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getSort = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.Filter.SortBy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.Filter.SortBy} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setSort = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Order order = 4;
 * @return {!proto.nuntio.users.v1alpha1.Filter.Order}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getOrder = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.Filter.Order} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.Filter.Order} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setOrder = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string search = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getSearch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setSearch = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string group_id = 6;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setGroupId = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.clearGroupId = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bool accepted = 7;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.setAccepted = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.Filter} returns this
 */
proto.nuntio.users.v1alpha1.Filter.prototype.clearAccepted = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.Filter.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.Folder.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Folder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Folder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Folder.toObject = function(includeInstance, msg) {
  var f, obj = {
    path: jspb.Message.getFieldWithDefault(msg, 1, ""),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    proto.nuntio.users.v1alpha1.File.toObject, includeInstance),
    foldersList: jspb.Message.toObjectList(msg.getFoldersList(),
    proto.nuntio.users.v1alpha1.Folder.toObject, includeInstance),
    name: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Folder}
 */
proto.nuntio.users.v1alpha1.Folder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Folder;
  return proto.nuntio.users.v1alpha1.Folder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Folder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Folder}
 */
proto.nuntio.users.v1alpha1.Folder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPath(value);
      break;
    case 2:
      var value = new proto.nuntio.users.v1alpha1.File;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    case 3:
      var value = new proto.nuntio.users.v1alpha1.Folder;
      reader.readMessage(value,proto.nuntio.users.v1alpha1.Folder.deserializeBinaryFromReader);
      msg.addFolders(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Folder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Folder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Folder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPath();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.nuntio.users.v1alpha1.File.serializeBinaryToWriter
    );
  }
  f = message.getFoldersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.nuntio.users.v1alpha1.Folder.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string path = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.getPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
 */
proto.nuntio.users.v1alpha1.Folder.prototype.setPath = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated File files = 2;
 * @return {!Array<!proto.nuntio.users.v1alpha1.File>}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuntio.users.v1alpha1.File, 2));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.File>} value
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
*/
proto.nuntio.users.v1alpha1.Folder.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.File}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.nuntio.users.v1alpha1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
 */
proto.nuntio.users.v1alpha1.Folder.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};


/**
 * repeated Folder folders = 3;
 * @return {!Array<!proto.nuntio.users.v1alpha1.Folder>}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.getFoldersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.Folder>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.nuntio.users.v1alpha1.Folder, 3));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.Folder>} value
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
*/
proto.nuntio.users.v1alpha1.Folder.prototype.setFoldersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.Folder=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Folder}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.addFolders = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.nuntio.users.v1alpha1.Folder, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
 */
proto.nuntio.users.v1alpha1.Folder.prototype.clearFoldersList = function() {
  return this.setFoldersList([]);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Folder.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Folder} returns this
 */
proto.nuntio.users.v1alpha1.Folder.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.EmailProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.EmailProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.EmailProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    publicKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    privateKey: jspb.Message.getFieldWithDefault(msg, 3, ""),
    from: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider}
 */
proto.nuntio.users.v1alpha1.EmailProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.EmailProvider;
  return proto.nuntio.users.v1alpha1.EmailProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.EmailProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider}
 */
proto.nuntio.users.v1alpha1.EmailProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuntio.users.v1alpha1.EmailProviderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPublicKey(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrivateKey(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.EmailProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.EmailProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.EmailProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPublicKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrivateKey();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional EmailProviderType type = 1;
 * @return {!proto.nuntio.users.v1alpha1.EmailProviderType}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.getType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.EmailProviderType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.EmailProviderType} value
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider} returns this
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string public_key = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.getPublicKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider} returns this
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.setPublicKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string private_key = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.getPrivateKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider} returns this
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.setPrivateKey = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.EmailProvider} returns this
 */
proto.nuntio.users.v1alpha1.EmailProvider.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.TextProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.TextProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TextProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    authToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    from: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.TextProvider}
 */
proto.nuntio.users.v1alpha1.TextProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.TextProvider;
  return proto.nuntio.users.v1alpha1.TextProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.TextProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.TextProvider}
 */
proto.nuntio.users.v1alpha1.TextProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.nuntio.users.v1alpha1.TextProviderType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.TextProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.TextProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.TextProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional TextProviderType type = 1;
 * @return {!proto.nuntio.users.v1alpha1.TextProviderType}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.getType = function() {
  return /** @type {!proto.nuntio.users.v1alpha1.TextProviderType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.nuntio.users.v1alpha1.TextProviderType} value
 * @return {!proto.nuntio.users.v1alpha1.TextProvider} returns this
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string account_id = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.getAccountId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.TextProvider} returns this
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string auth_token = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.getAuthToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.TextProvider} returns this
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.setAuthToken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string from = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.TextProvider} returns this
 */
proto.nuntio.users.v1alpha1.TextProvider.prototype.setFrom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Object.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Object.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Object} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Object.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Object}
 */
proto.nuntio.users.v1alpha1.Object.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Object;
  return proto.nuntio.users.v1alpha1.Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Object}
 */
proto.nuntio.users.v1alpha1.Object.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Object.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Object.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Object.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Object.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Object} returns this
 */
proto.nuntio.users.v1alpha1.Object.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.Object.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.Object} returns this
 */
proto.nuntio.users.v1alpha1.Object.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.Releation.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.Releation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.Releation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Releation.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.Releation}
 */
proto.nuntio.users.v1alpha1.Releation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.Releation;
  return proto.nuntio.users.v1alpha1.Releation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.Releation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.Releation}
 */
proto.nuntio.users.v1alpha1.Releation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.Releation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.Releation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.Releation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.Releation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.RelationTuple.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.RelationTuple.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.RelationTuple} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.RelationTuple.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.RelationTuple}
 */
proto.nuntio.users.v1alpha1.RelationTuple.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.RelationTuple;
  return proto.nuntio.users.v1alpha1.RelationTuple.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.RelationTuple} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.RelationTuple}
 */
proto.nuntio.users.v1alpha1.RelationTuple.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.RelationTuple.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.RelationTuple.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.RelationTuple} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.RelationTuple.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.GenderType = {
  GENDER_TYPE_UNSPECIFIED: 0,
  GENDER_TYPE_MALE: 1,
  GENDER_TYPE_FEMALE: 2,
  GENDER_TYPE_OTHER: 3
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.CountryCode = {
  COUNTRY_CODE_UNSPECIFIED: 0,
  COUNTRY_CODE_DK: 1,
  COUNTRY_CODE_FR: 2
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.LoginType = {
  LOGIN_TYPE_UNSPECIFIED: 0,
  LOGIN_TYPE_EMAIL_PASSWORD: 1,
  LOGIN_TYPE_PHONE_PASSWORD: 2,
  LOGIN_TYPE_USERNAME_PASSWORD: 3,
  LOGIN_TYPE_OAUTH2: 4,
  LOGIN_TYPE_ID_PASSWORD: 5,
  LOGIN_TYPE_EMAIL_MAGIC_LINK: 6,
  LOGIN_TYPE_PHONE_MAGIC_LINK: 7
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.HashingAlgorithm = {
  HASHING_ALGORITHM_UNSPECIFIED: 0,
  HASHING_ALGORITHM_BCRYPT: 1,
  HASHING_ALGORITHM_SCRYPT: 2
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.VerificationType = {
  VERIFICATION_TYPE_UNSPECIFIED: 0,
  VERIFICATION_TYPE_EMAIL: 1,
  VERIFICATION_TYPE_TEXT: 2,
  VERIFICATION_TYPE_RESET_PASSWORD: 3,
  VERIFICATION_TYPE_EMAIL_MAGIC_LINK: 4,
  VERIFICATION_TYPE_PHONE_MAGIC_LINK: 5
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.TokenType = {
  TOKEN_TYPE_UNSPECIFIED: 0,
  TOKEN_TYPE_ACCESS_TOKEN: 1,
  TOKEN_TYPE_REFRESH_TOKEN: 2
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.EmailProviderType = {
  EMAIL_PROVIDER_TYPE_UNSPECIFIED: 0,
  EMAIL_PROVIDER_TYPE_SMTP: 1,
  EMAIL_PROVIDER_TYPE_MAILJET: 2,
  EMAIL_PROVIDER_TYPE_MOCKEMAIL: 3
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.TextProviderType = {
  TEXT_PROVIDER_TYPE_UNSPECIFIED: 0,
  TEXT_PROVIDER_TYPE_TWILIO: 1,
  TEXT_PROVIDER_TYPE_MOCKTEXT: 2
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.LoginStatus = {
  LOGIN_STATUS_UNSPECIFIED: 0,
  LOGIN_STATUS_AUTHENTICATED: 1,
  LOGIN_STATUS_NOT_AUTHENTICATED: 2,
  LOGIN_STATUS_EMAIL_IS_NOT_VERIFIED: 3,
  LOGIN_STATUS_PHONE_IS_NOT_VERIFIED: 4
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.DeviceInfo = {
  DEVICE_INFO_UNSPECIFIED: 0,
  DEVICE_INFO_IOS: 1,
  DEVICE_INFO_MACOS: 2,
  DEVICE_INFO_WINDOWS: 3,
  DEVICE_INFO_WEB: 4,
  DEVICE_INFO_LINUX: 5,
  DEVICE_INFO_ANDROID: 6
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.TemplateType = {
  TEMPLATE_TYPE_UNSPECIFIED: 0,
  TEMPLATE_TYPE_EMAIL_VERIFICATION: 1,
  TEMPLATE_TYPE_EMAIL_RESET_PASSWORD: 2,
  TEMPLATE_TYPE_EMAIL_MAGIC_LINK: 3,
  TEMPLATE_TYPE_TEXT_VERIFICATION: 4,
  TEMPLATE_TYPE_TEXT_RESET_PASSWORD: 5,
  TEMPLATE_TYPE_TEXT_MAGIC_LINK: 6
};

/**
 * @enum {number}
 */
proto.nuntio.users.v1alpha1.OauthProviderType = {
  OAUTH_PROVIDER_TYPE_UNSPECIFIED: 0,
  OAUTH_PROVIDER_TYPE_NUNTIO_PROVIDER: 1,
  OAUTH_PROVIDER_TYPE_GOOGLE_PROVIDER: 2,
  OAUTH_PROVIDER_TYPE_GITHUB_PROVIDER: 3
};

goog.object.extend(exports, proto.nuntio.users.v1alpha1);
