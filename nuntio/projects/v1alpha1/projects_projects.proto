syntax = "proto3";

package nuntio.projects.v1alpha1;

import "nuntio/projects/v1alpha1/projects_messages.proto";

option go_package = "./nuntio/projects/v1alpha1";
option csharp_namespace = "nuntio.projects.v1alpha1";
option java_multiple_files = true;
option java_package = "nuntio.projects.v1alpha1";
option php_namespace = "Nuntio\\projects\\v1alpha1";


service ProjectsService {
  // Ping returns an empty response used to check if the server is live
  rpc Ping(ProjectsServicePingRequest) returns (ProjectsServicePingResponse) {}
  // Create initializes a new project and all relating ressources
  rpc Create(ProjectsServiceCreateRequest) returns (ProjectsServiceCreateResponse) {}
  // Deletes deletes a project and all its ressources
  rpc Delete(ProjectsServiceDeleteRequest) returns (ProjectsServiceDeleteResponse) {}
  // Update updates a project with a new name, logo etc.
  rpc Update(ProjectsServiceUpdateRequest) returns (ProjectsServiceUpdateResponse) {}
  // Get fetches a speicfic project
  rpc Get(ProjectsServiceGetRequest) returns (ProjectsServiceGetResponse) {}
  // List returns a list of projects
  rpc List(ProjectsServiceListRequest) returns (ProjectsServiceListResponse) {}
  // Enables storage for the project
  rpc EnableStorage(ProjectsServiceEnableStorageRequest) returns (ProjectsServiceEnableStorageResponse) {}
  // Disables storage for the project
  rpc DisableStorage(ProjectsServiceDisableStorageRequest) returns (ProjectsServiceDisableStorageResponse) {}
  // Enables USers for the project
  rpc EnableUsers(ProjectsServiceEnableUsersRequest) returns (ProjectsServiceEnableUsersResponse) {}
  // Disables Users for the project
  rpc DisableUsers(ProjectsServiceDisableUsersRequest) returns (ProjectsServiceDisableUsersResponse) {}
  // Enables Mongo for the project
  rpc EnableMongo(ProjectsServiceEnableMongoRequest) returns (ProjectsServiceEnableMongoResponse) {}
  // Disables Mongo for the project
  rpc DisableMongo(ProjectsServiceDisableMongoRequest) returns (ProjectsServiceDisableMongoResponse) {}
  // Enables Postgres for the project
  rpc EnablePostgres(ProjectsServiceEnablePostgresRequest) returns (ProjectsServiceEnablePostgresResponse) {}
  // Disable Postgres for the project
  rpc DisablePostgres(ProjectsServiceDisablePostgresRequest) returns (ProjectsServiceDisablePostgresResponse) {}
}

// The request of a Project.Ping RPC
message ProjectsServicePingRequest {}

// The response of a Project.Ping RPC
message ProjectsServicePingResponse {}

// The request of a Project.Create RPC
message ProjectsServiceCreateRequest {
    // the id of the project
    string id = 1;
    // the name related to the project
    string name = 2;
    // the logo related to the project
    string logo = 3;
    // the id of the owner
    string owner_id = 4;
    // configure storage in pipeline as well
    optional bool configure_storage = 5;
    // configure mongo in pipeline as well
    optional bool configure_mongo = 6;
    // configure postgres in pipeline as well
    optional bool configure_postgres = 7;
    // configure users in pipeline as well
    optional bool configure_users = 8;
}

// The response of a Project.Create RPC
message ProjectsServiceCreateResponse {
    Project project = 1;
}


// The request of a Project.Delete RPC
message ProjectsServiceDeleteRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.Delete RPC
message ProjectsServiceDeleteResponse {}


// The request of a Project.Update RPC
message ProjectsServiceUpdateRequest {
    // the id of the project
    string id = 1;
    // the name related to the project
    optional string name = 2;
    // the logo related to the project
    optional string logo = 3;
}

// The response of a Project.Update RPC
message ProjectsServiceUpdateResponse {}

// The request of a Project.Get RPC
message ProjectsServiceGetRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.Get RPC
message ProjectsServiceGetResponse {
    Project project = 1;
}

// The request of a Project.List RPC
message ProjectsServiceListRequest {
    // where to start fetching from
    int32 from = 1;
    // where to stop fetching to
    int32 to = 2;
    // if you only want to list projects owned by a user
    optional string owner_id = 3;
}

// The response of a Project.List RPC
message ProjectsServiceListResponse {
    // the result of list
    repeated Project projects = 1;
    // total amount of namespaces
    int64 count = 2;
    // filter by owner id
    optional string owner_id = 3;
}

// The request of a Project.EnableMongo RPC
message ProjectsServiceEnableMongoRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.EnableMongo RPC
message ProjectsServiceEnableMongoResponse {}


// The request of a Project.DisableMongo RPC
message ProjectsServiceDisableMongoRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.DisableMongo RPC
message ProjectsServiceDisableMongoResponse {}


// The request of a Project.EnablePostgres RPC
message ProjectsServiceEnablePostgresRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.EnablePostgres RPC
message ProjectsServiceEnablePostgresResponse {}


// The request of a Project.DisablePostgres RPC
message ProjectsServiceDisablePostgresRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.DisablePostgres RPC
message ProjectsServiceDisablePostgresResponse {
    // the id of the project
    string id = 1;
}


// The request of a Project.EnableStorage RPC
message ProjectsServiceEnableStorageRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.EnableStorage RPC
message ProjectsServiceEnableStorageResponse {}


// The request of a Project.DisableStorage RPC
message ProjectsServiceDisableStorageRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.DisableStorage RPC
message ProjectsServiceDisableStorageResponse {}


// The request of a Project.EnableUsers RPC
message ProjectsServiceEnableUsersRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.EnableUsers RPC
message ProjectsServiceEnableUsersResponse {}


// The request of a Project.DisableUsers RPC
message ProjectsServiceDisableUsersRequest {
    // the id of the project
    string id = 1;
}

// The response of a Project.DisableUsers RPC
message ProjectsServiceDisableUsersResponse {}