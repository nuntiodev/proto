// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nuntio/projects/v1alpha1/projects_project.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request of a Project.Ping RPC
type ProjectServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServicePingRequest) Reset() {
	*x = ProjectServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServicePingRequest) ProtoMessage() {}

func (x *ProjectServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServicePingRequest.ProtoReflect.Descriptor instead.
func (*ProjectServicePingRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{0}
}

// The response of a Project.Ping RPC
type ProjectServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServicePingResponse) Reset() {
	*x = ProjectServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServicePingResponse) ProtoMessage() {}

func (x *ProjectServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServicePingResponse.ProtoReflect.Descriptor instead.
func (*ProjectServicePingResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{1}
}

// The request of a Project.Create RPC
type ProjectServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the name related to the project
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// the logo related to the project
	Logo string `protobuf:"bytes,3,opt,name=logo,proto3" json:"logo,omitempty"`
	// the id of the owner
	OwnerId string `protobuf:"bytes,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// configure storage in pipeline as well
	ConfigureStorage *bool `protobuf:"varint,5,opt,name=configure_storage,json=configureStorage,proto3,oneof" json:"configure_storage,omitempty"`
	// configure mongo in pipeline as well
	ConfigureMongo *bool `protobuf:"varint,6,opt,name=configure_mongo,json=configureMongo,proto3,oneof" json:"configure_mongo,omitempty"`
	// configure postgres in pipeline as well
	ConfigurePostgres *bool `protobuf:"varint,7,opt,name=configure_postgres,json=configurePostgres,proto3,oneof" json:"configure_postgres,omitempty"`
	// configure users in pipeline as well
	ConfigureUsers *bool `protobuf:"varint,8,opt,name=configure_users,json=configureUsers,proto3,oneof" json:"configure_users,omitempty"`
}

func (x *ProjectServiceCreateRequest) Reset() {
	*x = ProjectServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceCreateRequest) ProtoMessage() {}

func (x *ProjectServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{2}
}

func (x *ProjectServiceCreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ProjectServiceCreateRequest) GetConfigureStorage() bool {
	if x != nil && x.ConfigureStorage != nil {
		return *x.ConfigureStorage
	}
	return false
}

func (x *ProjectServiceCreateRequest) GetConfigureMongo() bool {
	if x != nil && x.ConfigureMongo != nil {
		return *x.ConfigureMongo
	}
	return false
}

func (x *ProjectServiceCreateRequest) GetConfigurePostgres() bool {
	if x != nil && x.ConfigurePostgres != nil {
		return *x.ConfigurePostgres
	}
	return false
}

func (x *ProjectServiceCreateRequest) GetConfigureUsers() bool {
	if x != nil && x.ConfigureUsers != nil {
		return *x.ConfigureUsers
	}
	return false
}

// The response of a Project.Create RPC
type ProjectServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ProjectServiceCreateResponse) Reset() {
	*x = ProjectServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceCreateResponse) ProtoMessage() {}

func (x *ProjectServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{3}
}

func (x *ProjectServiceCreateResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// The request of a Project.Delete RPC
type ProjectServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDeleteRequest) Reset() {
	*x = ProjectServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDeleteRequest) ProtoMessage() {}

func (x *ProjectServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{4}
}

func (x *ProjectServiceDeleteRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.Delete RPC
type ProjectServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceDeleteResponse) Reset() {
	*x = ProjectServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDeleteResponse) ProtoMessage() {}

func (x *ProjectServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{5}
}

// The request of a Project.Update RPC
type ProjectServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the name related to the project
	Name *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	// the logo related to the project
	Logo *string `protobuf:"bytes,3,opt,name=logo,proto3,oneof" json:"logo,omitempty"`
}

func (x *ProjectServiceUpdateRequest) Reset() {
	*x = ProjectServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateRequest) ProtoMessage() {}

func (x *ProjectServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{6}
}

func (x *ProjectServiceUpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectServiceUpdateRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ProjectServiceUpdateRequest) GetLogo() string {
	if x != nil && x.Logo != nil {
		return *x.Logo
	}
	return ""
}

// The response of a Project.Update RPC
type ProjectServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceUpdateResponse) Reset() {
	*x = ProjectServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceUpdateResponse) ProtoMessage() {}

func (x *ProjectServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{7}
}

// The request of a Project.Get RPC
type ProjectServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceGetRequest) Reset() {
	*x = ProjectServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceGetRequest) ProtoMessage() {}

func (x *ProjectServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceGetRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectServiceGetRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.Get RPC
type ProjectServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *ProjectServiceGetResponse) Reset() {
	*x = ProjectServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceGetResponse) ProtoMessage() {}

func (x *ProjectServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceGetResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectServiceGetResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

// The request of a Project.List RPC
type ProjectServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// where to start fetching from
	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	// where to stop fetching to
	To int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	// if you only want to list projects owned by a user
	OwnerId *string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
}

func (x *ProjectServiceListRequest) Reset() {
	*x = ProjectServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceListRequest) ProtoMessage() {}

func (x *ProjectServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceListRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceListRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectServiceListRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *ProjectServiceListRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *ProjectServiceListRequest) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

// The response of a Project.List RPC
type ProjectServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the result of list
	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	// total amount of namespaces
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	// filter by owner id
	OwnerId *string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3,oneof" json:"owner_id,omitempty"`
}

func (x *ProjectServiceListResponse) Reset() {
	*x = ProjectServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceListResponse) ProtoMessage() {}

func (x *ProjectServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceListResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceListResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectServiceListResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ProjectServiceListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProjectServiceListResponse) GetOwnerId() string {
	if x != nil && x.OwnerId != nil {
		return *x.OwnerId
	}
	return ""
}

// The request of a Project.EnableMongo RPC
type ProjectServiceEnableMongoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceEnableMongoRequest) Reset() {
	*x = ProjectServiceEnableMongoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableMongoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableMongoRequest) ProtoMessage() {}

func (x *ProjectServiceEnableMongoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableMongoRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableMongoRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectServiceEnableMongoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.EnableMongo RPC
type ProjectServiceEnableMongoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceEnableMongoResponse) Reset() {
	*x = ProjectServiceEnableMongoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableMongoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableMongoResponse) ProtoMessage() {}

func (x *ProjectServiceEnableMongoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableMongoResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableMongoResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{13}
}

// The request of a Project.DisableMongo RPC
type ProjectServiceDisableMongoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDisableMongoRequest) Reset() {
	*x = ProjectServiceDisableMongoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableMongoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableMongoRequest) ProtoMessage() {}

func (x *ProjectServiceDisableMongoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableMongoRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableMongoRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{14}
}

func (x *ProjectServiceDisableMongoRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.DisableMongo RPC
type ProjectServiceDisableMongoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceDisableMongoResponse) Reset() {
	*x = ProjectServiceDisableMongoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableMongoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableMongoResponse) ProtoMessage() {}

func (x *ProjectServiceDisableMongoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableMongoResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableMongoResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{15}
}

// The request of a Project.EnablePostgres RPC
type ProjectServiceEnablePostgresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceEnablePostgresRequest) Reset() {
	*x = ProjectServiceEnablePostgresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnablePostgresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnablePostgresRequest) ProtoMessage() {}

func (x *ProjectServiceEnablePostgresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnablePostgresRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnablePostgresRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{16}
}

func (x *ProjectServiceEnablePostgresRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.EnablePostgres RPC
type ProjectServiceEnablePostgresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceEnablePostgresResponse) Reset() {
	*x = ProjectServiceEnablePostgresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnablePostgresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnablePostgresResponse) ProtoMessage() {}

func (x *ProjectServiceEnablePostgresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnablePostgresResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnablePostgresResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{17}
}

// The request of a Project.DisablePostgres RPC
type ProjectServiceDisablePostgresRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDisablePostgresRequest) Reset() {
	*x = ProjectServiceDisablePostgresRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisablePostgresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisablePostgresRequest) ProtoMessage() {}

func (x *ProjectServiceDisablePostgresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisablePostgresRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisablePostgresRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{18}
}

func (x *ProjectServiceDisablePostgresRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.DisablePostgres RPC
type ProjectServiceDisablePostgresResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDisablePostgresResponse) Reset() {
	*x = ProjectServiceDisablePostgresResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisablePostgresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisablePostgresResponse) ProtoMessage() {}

func (x *ProjectServiceDisablePostgresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisablePostgresResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisablePostgresResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{19}
}

func (x *ProjectServiceDisablePostgresResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The request of a Project.EnableStorage RPC
type ProjectServiceEnableStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceEnableStorageRequest) Reset() {
	*x = ProjectServiceEnableStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableStorageRequest) ProtoMessage() {}

func (x *ProjectServiceEnableStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableStorageRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableStorageRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{20}
}

func (x *ProjectServiceEnableStorageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.EnableStorage RPC
type ProjectServiceEnableStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceEnableStorageResponse) Reset() {
	*x = ProjectServiceEnableStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableStorageResponse) ProtoMessage() {}

func (x *ProjectServiceEnableStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableStorageResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableStorageResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{21}
}

// The request of a Project.DisableStorage RPC
type ProjectServiceDisableStorageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDisableStorageRequest) Reset() {
	*x = ProjectServiceDisableStorageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableStorageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableStorageRequest) ProtoMessage() {}

func (x *ProjectServiceDisableStorageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableStorageRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableStorageRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{22}
}

func (x *ProjectServiceDisableStorageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.DisableStorage RPC
type ProjectServiceDisableStorageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceDisableStorageResponse) Reset() {
	*x = ProjectServiceDisableStorageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableStorageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableStorageResponse) ProtoMessage() {}

func (x *ProjectServiceDisableStorageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableStorageResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableStorageResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{23}
}

// The request of a Project.EnableUsers RPC
type ProjectServiceEnableUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceEnableUsersRequest) Reset() {
	*x = ProjectServiceEnableUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableUsersRequest) ProtoMessage() {}

func (x *ProjectServiceEnableUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableUsersRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableUsersRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{24}
}

func (x *ProjectServiceEnableUsersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.EnableUsers RPC
type ProjectServiceEnableUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceEnableUsersResponse) Reset() {
	*x = ProjectServiceEnableUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceEnableUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceEnableUsersResponse) ProtoMessage() {}

func (x *ProjectServiceEnableUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceEnableUsersResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceEnableUsersResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{25}
}

// The request of a Project.DisableUsers RPC
type ProjectServiceDisableUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// the id of the project
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ProjectServiceDisableUsersRequest) Reset() {
	*x = ProjectServiceDisableUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableUsersRequest) ProtoMessage() {}

func (x *ProjectServiceDisableUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableUsersRequest.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableUsersRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{26}
}

func (x *ProjectServiceDisableUsersRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// The response of a Project.DisableUsers RPC
type ProjectServiceDisableUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ProjectServiceDisableUsersResponse) Reset() {
	*x = ProjectServiceDisableUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectServiceDisableUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectServiceDisableUsersResponse) ProtoMessage() {}

func (x *ProjectServiceDisableUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectServiceDisableUsersResponse.ProtoReflect.Descriptor instead.
func (*ProjectServiceDisableUsersResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP(), []int{27}
}

var File_nuntio_projects_v1alpha1_projects_project_proto protoreflect.FileDescriptor

var file_nuntio_projects_v1alpha1_projects_project_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x18, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x30, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x87, 0x03, 0x0a, 0x1b, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x11, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2c, 0x0a,
	0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x12, 0x32, 0x0a, 0x12, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x02, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2c, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x88, 0x01, 0x01, 0x42, 0x14, 0x0a,
	0x12, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x67, 0x6f, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x42, 0x12,
	0x0a, 0x10, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x5b, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22,
	0x2d, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1e,
	0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x71,
	0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x88, 0x01, 0x01, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x67,
	0x6f, 0x22, 0x1e, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2a, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x58, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x6c, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f,
	0x6e, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e,
	0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x23, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x26, 0x0a, 0x24, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x36, 0x0a, 0x24, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x37, 0x0a, 0x25, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x22, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x25, 0x0a, 0x23, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x23, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x26,
	0x0a, 0x24, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x20, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x23, 0x0a, 0x21, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x33, 0x0a, 0x21, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x22, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xdf, 0x0e, 0x0a, 0x0e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a,
	0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x33, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x79, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x35, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x32, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x34, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x0d, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3c, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3d,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x88, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12,
	0x3a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x0c, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x0b, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x3a, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x3b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x8b, 0x01, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d,
	0x6f, 0x6e, 0x67, 0x6f, 0x12, 0x3b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x3c, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x67, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x91, 0x01, 0x0a, 0x0e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x67, 0x72, 0x65, 0x73, 0x12, 0x3d, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x3e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x94, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x12, 0x3e, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3f, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x6e, 0x0a, 0x18,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x50, 0x01, 0x5a, 0x1a, 0x2e, 0x2f, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xaa, 0x02, 0x18, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0xca, 0x02, 0x18, 0x4e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x5c, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nuntio_projects_v1alpha1_projects_project_proto_rawDescOnce sync.Once
	file_nuntio_projects_v1alpha1_projects_project_proto_rawDescData = file_nuntio_projects_v1alpha1_projects_project_proto_rawDesc
)

func file_nuntio_projects_v1alpha1_projects_project_proto_rawDescGZIP() []byte {
	file_nuntio_projects_v1alpha1_projects_project_proto_rawDescOnce.Do(func() {
		file_nuntio_projects_v1alpha1_projects_project_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuntio_projects_v1alpha1_projects_project_proto_rawDescData)
	})
	return file_nuntio_projects_v1alpha1_projects_project_proto_rawDescData
}

var file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_nuntio_projects_v1alpha1_projects_project_proto_goTypes = []interface{}{
	(*ProjectServicePingRequest)(nil),             // 0: nuntio.projects.v1alpha1.ProjectServicePingRequest
	(*ProjectServicePingResponse)(nil),            // 1: nuntio.projects.v1alpha1.ProjectServicePingResponse
	(*ProjectServiceCreateRequest)(nil),           // 2: nuntio.projects.v1alpha1.ProjectServiceCreateRequest
	(*ProjectServiceCreateResponse)(nil),          // 3: nuntio.projects.v1alpha1.ProjectServiceCreateResponse
	(*ProjectServiceDeleteRequest)(nil),           // 4: nuntio.projects.v1alpha1.ProjectServiceDeleteRequest
	(*ProjectServiceDeleteResponse)(nil),          // 5: nuntio.projects.v1alpha1.ProjectServiceDeleteResponse
	(*ProjectServiceUpdateRequest)(nil),           // 6: nuntio.projects.v1alpha1.ProjectServiceUpdateRequest
	(*ProjectServiceUpdateResponse)(nil),          // 7: nuntio.projects.v1alpha1.ProjectServiceUpdateResponse
	(*ProjectServiceGetRequest)(nil),              // 8: nuntio.projects.v1alpha1.ProjectServiceGetRequest
	(*ProjectServiceGetResponse)(nil),             // 9: nuntio.projects.v1alpha1.ProjectServiceGetResponse
	(*ProjectServiceListRequest)(nil),             // 10: nuntio.projects.v1alpha1.ProjectServiceListRequest
	(*ProjectServiceListResponse)(nil),            // 11: nuntio.projects.v1alpha1.ProjectServiceListResponse
	(*ProjectServiceEnableMongoRequest)(nil),      // 12: nuntio.projects.v1alpha1.ProjectServiceEnableMongoRequest
	(*ProjectServiceEnableMongoResponse)(nil),     // 13: nuntio.projects.v1alpha1.ProjectServiceEnableMongoResponse
	(*ProjectServiceDisableMongoRequest)(nil),     // 14: nuntio.projects.v1alpha1.ProjectServiceDisableMongoRequest
	(*ProjectServiceDisableMongoResponse)(nil),    // 15: nuntio.projects.v1alpha1.ProjectServiceDisableMongoResponse
	(*ProjectServiceEnablePostgresRequest)(nil),   // 16: nuntio.projects.v1alpha1.ProjectServiceEnablePostgresRequest
	(*ProjectServiceEnablePostgresResponse)(nil),  // 17: nuntio.projects.v1alpha1.ProjectServiceEnablePostgresResponse
	(*ProjectServiceDisablePostgresRequest)(nil),  // 18: nuntio.projects.v1alpha1.ProjectServiceDisablePostgresRequest
	(*ProjectServiceDisablePostgresResponse)(nil), // 19: nuntio.projects.v1alpha1.ProjectServiceDisablePostgresResponse
	(*ProjectServiceEnableStorageRequest)(nil),    // 20: nuntio.projects.v1alpha1.ProjectServiceEnableStorageRequest
	(*ProjectServiceEnableStorageResponse)(nil),   // 21: nuntio.projects.v1alpha1.ProjectServiceEnableStorageResponse
	(*ProjectServiceDisableStorageRequest)(nil),   // 22: nuntio.projects.v1alpha1.ProjectServiceDisableStorageRequest
	(*ProjectServiceDisableStorageResponse)(nil),  // 23: nuntio.projects.v1alpha1.ProjectServiceDisableStorageResponse
	(*ProjectServiceEnableUsersRequest)(nil),      // 24: nuntio.projects.v1alpha1.ProjectServiceEnableUsersRequest
	(*ProjectServiceEnableUsersResponse)(nil),     // 25: nuntio.projects.v1alpha1.ProjectServiceEnableUsersResponse
	(*ProjectServiceDisableUsersRequest)(nil),     // 26: nuntio.projects.v1alpha1.ProjectServiceDisableUsersRequest
	(*ProjectServiceDisableUsersResponse)(nil),    // 27: nuntio.projects.v1alpha1.ProjectServiceDisableUsersResponse
	(*Project)(nil), // 28: nuntio.projects.v1alpha1.Project
}
var file_nuntio_projects_v1alpha1_projects_project_proto_depIdxs = []int32{
	28, // 0: nuntio.projects.v1alpha1.ProjectServiceCreateResponse.project:type_name -> nuntio.projects.v1alpha1.Project
	28, // 1: nuntio.projects.v1alpha1.ProjectServiceGetResponse.project:type_name -> nuntio.projects.v1alpha1.Project
	28, // 2: nuntio.projects.v1alpha1.ProjectServiceListResponse.projects:type_name -> nuntio.projects.v1alpha1.Project
	0,  // 3: nuntio.projects.v1alpha1.ProjectService.Ping:input_type -> nuntio.projects.v1alpha1.ProjectServicePingRequest
	2,  // 4: nuntio.projects.v1alpha1.ProjectService.Create:input_type -> nuntio.projects.v1alpha1.ProjectServiceCreateRequest
	4,  // 5: nuntio.projects.v1alpha1.ProjectService.Delete:input_type -> nuntio.projects.v1alpha1.ProjectServiceDeleteRequest
	6,  // 6: nuntio.projects.v1alpha1.ProjectService.Update:input_type -> nuntio.projects.v1alpha1.ProjectServiceUpdateRequest
	8,  // 7: nuntio.projects.v1alpha1.ProjectService.Get:input_type -> nuntio.projects.v1alpha1.ProjectServiceGetRequest
	10, // 8: nuntio.projects.v1alpha1.ProjectService.List:input_type -> nuntio.projects.v1alpha1.ProjectServiceListRequest
	20, // 9: nuntio.projects.v1alpha1.ProjectService.EnableStorage:input_type -> nuntio.projects.v1alpha1.ProjectServiceEnableStorageRequest
	22, // 10: nuntio.projects.v1alpha1.ProjectService.DisableStorage:input_type -> nuntio.projects.v1alpha1.ProjectServiceDisableStorageRequest
	24, // 11: nuntio.projects.v1alpha1.ProjectService.EnableUsers:input_type -> nuntio.projects.v1alpha1.ProjectServiceEnableUsersRequest
	26, // 12: nuntio.projects.v1alpha1.ProjectService.DisableUsers:input_type -> nuntio.projects.v1alpha1.ProjectServiceDisableUsersRequest
	12, // 13: nuntio.projects.v1alpha1.ProjectService.EnableMongo:input_type -> nuntio.projects.v1alpha1.ProjectServiceEnableMongoRequest
	14, // 14: nuntio.projects.v1alpha1.ProjectService.DisableMongo:input_type -> nuntio.projects.v1alpha1.ProjectServiceDisableMongoRequest
	16, // 15: nuntio.projects.v1alpha1.ProjectService.EnablePostgres:input_type -> nuntio.projects.v1alpha1.ProjectServiceEnablePostgresRequest
	18, // 16: nuntio.projects.v1alpha1.ProjectService.DisablePostgres:input_type -> nuntio.projects.v1alpha1.ProjectServiceDisablePostgresRequest
	1,  // 17: nuntio.projects.v1alpha1.ProjectService.Ping:output_type -> nuntio.projects.v1alpha1.ProjectServicePingResponse
	3,  // 18: nuntio.projects.v1alpha1.ProjectService.Create:output_type -> nuntio.projects.v1alpha1.ProjectServiceCreateResponse
	5,  // 19: nuntio.projects.v1alpha1.ProjectService.Delete:output_type -> nuntio.projects.v1alpha1.ProjectServiceDeleteResponse
	7,  // 20: nuntio.projects.v1alpha1.ProjectService.Update:output_type -> nuntio.projects.v1alpha1.ProjectServiceUpdateResponse
	9,  // 21: nuntio.projects.v1alpha1.ProjectService.Get:output_type -> nuntio.projects.v1alpha1.ProjectServiceGetResponse
	11, // 22: nuntio.projects.v1alpha1.ProjectService.List:output_type -> nuntio.projects.v1alpha1.ProjectServiceListResponse
	21, // 23: nuntio.projects.v1alpha1.ProjectService.EnableStorage:output_type -> nuntio.projects.v1alpha1.ProjectServiceEnableStorageResponse
	23, // 24: nuntio.projects.v1alpha1.ProjectService.DisableStorage:output_type -> nuntio.projects.v1alpha1.ProjectServiceDisableStorageResponse
	25, // 25: nuntio.projects.v1alpha1.ProjectService.EnableUsers:output_type -> nuntio.projects.v1alpha1.ProjectServiceEnableUsersResponse
	27, // 26: nuntio.projects.v1alpha1.ProjectService.DisableUsers:output_type -> nuntio.projects.v1alpha1.ProjectServiceDisableUsersResponse
	13, // 27: nuntio.projects.v1alpha1.ProjectService.EnableMongo:output_type -> nuntio.projects.v1alpha1.ProjectServiceEnableMongoResponse
	15, // 28: nuntio.projects.v1alpha1.ProjectService.DisableMongo:output_type -> nuntio.projects.v1alpha1.ProjectServiceDisableMongoResponse
	17, // 29: nuntio.projects.v1alpha1.ProjectService.EnablePostgres:output_type -> nuntio.projects.v1alpha1.ProjectServiceEnablePostgresResponse
	19, // 30: nuntio.projects.v1alpha1.ProjectService.DisablePostgres:output_type -> nuntio.projects.v1alpha1.ProjectServiceDisablePostgresResponse
	17, // [17:31] is the sub-list for method output_type
	3,  // [3:17] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_nuntio_projects_v1alpha1_projects_project_proto_init() }
func file_nuntio_projects_v1alpha1_projects_project_proto_init() {
	if File_nuntio_projects_v1alpha1_projects_project_proto != nil {
		return
	}
	file_nuntio_projects_v1alpha1_projects_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableMongoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableMongoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableMongoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableMongoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnablePostgresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnablePostgresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisablePostgresRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisablePostgresResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableStorageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableStorageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceEnableUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectServiceDisableUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes[11].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuntio_projects_v1alpha1_projects_project_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuntio_projects_v1alpha1_projects_project_proto_goTypes,
		DependencyIndexes: file_nuntio_projects_v1alpha1_projects_project_proto_depIdxs,
		MessageInfos:      file_nuntio_projects_v1alpha1_projects_project_proto_msgTypes,
	}.Build()
	File_nuntio_projects_v1alpha1_projects_project_proto = out.File
	file_nuntio_projects_v1alpha1_projects_project_proto_rawDesc = nil
	file_nuntio_projects_v1alpha1_projects_project_proto_goTypes = nil
	file_nuntio_projects_v1alpha1_projects_project_proto_depIdxs = nil
}
