// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nuntio/users/v1alpha1/users_groups.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request of a Groups.Ping RPC
type GroupsServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServicePingRequest) Reset() {
	*x = GroupsServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServicePingRequest) ProtoMessage() {}

func (x *GroupsServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServicePingRequest.ProtoReflect.Descriptor instead.
func (*GroupsServicePingRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{0}
}

// The response of a Groups.Ping RPC
type GroupsServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServicePingResponse) Reset() {
	*x = GroupsServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServicePingResponse) ProtoMessage() {}

func (x *GroupsServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServicePingResponse.ProtoReflect.Descriptor instead.
func (*GroupsServicePingResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{1}
}

// The request of a Groups.Create RPC
type GroupsServiceCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The id of the group to be created
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// The name of the group to be created
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GroupsServiceCreateRequest) Reset() {
	*x = GroupsServiceCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceCreateRequest) ProtoMessage() {}

func (x *GroupsServiceCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceCreateRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceCreateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{2}
}

func (x *GroupsServiceCreateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GroupsServiceCreateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GroupsServiceCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// The response of a Groups.Create RPC
type GroupsServiceCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupsServiceCreateResponse) Reset() {
	*x = GroupsServiceCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceCreateResponse) ProtoMessage() {}

func (x *GroupsServiceCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceCreateResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceCreateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{3}
}

func (x *GroupsServiceCreateResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

// The request of a Groups.Remove RPC
type GroupsServiceRemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The group to delete
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GroupsServiceRemoveRequest) Reset() {
	*x = GroupsServiceRemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceRemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceRemoveRequest) ProtoMessage() {}

func (x *GroupsServiceRemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceRemoveRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceRemoveRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{4}
}

func (x *GroupsServiceRemoveRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupsServiceRemoveRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GroupsServiceRemoveRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Groups.Remove RPC
type GroupsServiceRemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServiceRemoveResponse) Reset() {
	*x = GroupsServiceRemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceRemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceRemoveResponse) ProtoMessage() {}

func (x *GroupsServiceRemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceRemoveResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceRemoveResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{5}
}

// The request of a Groups.Add RPC
type GroupsServiceAddRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The group to delete
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// The user identifier to fetch the user
	Identifier *UserIdentifier `protobuf:"bytes,2,opt,name=identifier,proto3" json:"identifier,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GroupsServiceAddRequest) Reset() {
	*x = GroupsServiceAddRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceAddRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceAddRequest) ProtoMessage() {}

func (x *GroupsServiceAddRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceAddRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceAddRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{6}
}

func (x *GroupsServiceAddRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupsServiceAddRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *GroupsServiceAddRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Groups.Add RPC
type GroupsServiceAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServiceAddResponse) Reset() {
	*x = GroupsServiceAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceAddResponse) ProtoMessage() {}

func (x *GroupsServiceAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceAddResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceAddResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{7}
}

// The request of a Groups.List RPC
type GroupsServiceListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// where to begin fetching from
	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	// where to stop fetching to
	To int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	// the namespace to search within
	Namespace string `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GroupsServiceListRequest) Reset() {
	*x = GroupsServiceListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceListRequest) ProtoMessage() {}

func (x *GroupsServiceListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceListRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceListRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{8}
}

func (x *GroupsServiceListRequest) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GroupsServiceListRequest) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *GroupsServiceListRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Groups.List RPC
type GroupsServiceListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// list of groups
	Groups []*Group `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	// count of total amount of users
	Count int64 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GroupsServiceListResponse) Reset() {
	*x = GroupsServiceListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceListResponse) ProtoMessage() {}

func (x *GroupsServiceListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceListResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceListResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{9}
}

func (x *GroupsServiceListResponse) GetGroups() []*Group {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *GroupsServiceListResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// The request of a Group.Delete RPC
type GroupsServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The group to delete
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GroupsServiceDeleteRequest) Reset() {
	*x = GroupsServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceDeleteRequest) ProtoMessage() {}

func (x *GroupsServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{10}
}

func (x *GroupsServiceDeleteRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupsServiceDeleteRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Group.Delete RPC
type GroupsServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServiceDeleteResponse) Reset() {
	*x = GroupsServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceDeleteResponse) ProtoMessage() {}

func (x *GroupsServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{11}
}

// The request of a Groups.Update RPC
type GroupsServiceUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The new name of the group
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// The group id
	GroupId string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *GroupsServiceUpdateRequest) Reset() {
	*x = GroupsServiceUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceUpdateRequest) ProtoMessage() {}

func (x *GroupsServiceUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceUpdateRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceUpdateRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{12}
}

func (x *GroupsServiceUpdateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GroupsServiceUpdateRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GroupsServiceUpdateRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

// The response of a Groups.Update RPC
type GroupsServiceUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GroupsServiceUpdateResponse) Reset() {
	*x = GroupsServiceUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceUpdateResponse) ProtoMessage() {}

func (x *GroupsServiceUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceUpdateResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceUpdateResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{13}
}

// The request of a Groups.Get RPC
type GroupsServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The group id
	GroupId string `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	// The namespace to perform action in
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GroupsServiceGetRequest) Reset() {
	*x = GroupsServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceGetRequest) ProtoMessage() {}

func (x *GroupsServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceGetRequest.ProtoReflect.Descriptor instead.
func (*GroupsServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{14}
}

func (x *GroupsServiceGetRequest) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *GroupsServiceGetRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Groups.Get RPC
type GroupsServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group *Group `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *GroupsServiceGetResponse) Reset() {
	*x = GroupsServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupsServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupsServiceGetResponse) ProtoMessage() {}

func (x *GroupsServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupsServiceGetResponse.ProtoReflect.Descriptor instead.
func (*GroupsServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP(), []int{15}
}

func (x *GroupsServiceGetResponse) GetGroup() *Group {
	if x != nil {
		return x.Group
	}
	return nil
}

var File_nuntio_users_v1alpha1_users_groups_proto protoreflect.FileDescriptor

var file_nuntio_users_v1alpha1_users_groups_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x2a, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1a, 0x0a,
	0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x9c, 0x01, 0x0a, 0x1a, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x45,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x5c, 0x0a, 0x18, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x67, 0x0a,
	0x19, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x1a, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x1d, 0x0a,
	0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x69, 0x0a, 0x1a,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x17, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x4e, 0x0a, 0x18, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x32, 0x89, 0x07, 0x0a, 0x0d, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6b, 0x0a, 0x04,
	0x50, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x68, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x2e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x15, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x50,
	0x01, 0x5a, 0x17, 0x2e, 0x2f, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xaa, 0x02, 0x15, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0xca, 0x02, 0x15, 0x4e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x5c, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_nuntio_users_v1alpha1_users_groups_proto_rawDescOnce sync.Once
	file_nuntio_users_v1alpha1_users_groups_proto_rawDescData = file_nuntio_users_v1alpha1_users_groups_proto_rawDesc
)

func file_nuntio_users_v1alpha1_users_groups_proto_rawDescGZIP() []byte {
	file_nuntio_users_v1alpha1_users_groups_proto_rawDescOnce.Do(func() {
		file_nuntio_users_v1alpha1_users_groups_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuntio_users_v1alpha1_users_groups_proto_rawDescData)
	})
	return file_nuntio_users_v1alpha1_users_groups_proto_rawDescData
}

var file_nuntio_users_v1alpha1_users_groups_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_nuntio_users_v1alpha1_users_groups_proto_goTypes = []interface{}{
	(*GroupsServicePingRequest)(nil),    // 0: nuntio.users.v1alpha1.GroupsServicePingRequest
	(*GroupsServicePingResponse)(nil),   // 1: nuntio.users.v1alpha1.GroupsServicePingResponse
	(*GroupsServiceCreateRequest)(nil),  // 2: nuntio.users.v1alpha1.GroupsServiceCreateRequest
	(*GroupsServiceCreateResponse)(nil), // 3: nuntio.users.v1alpha1.GroupsServiceCreateResponse
	(*GroupsServiceRemoveRequest)(nil),  // 4: nuntio.users.v1alpha1.GroupsServiceRemoveRequest
	(*GroupsServiceRemoveResponse)(nil), // 5: nuntio.users.v1alpha1.GroupsServiceRemoveResponse
	(*GroupsServiceAddRequest)(nil),     // 6: nuntio.users.v1alpha1.GroupsServiceAddRequest
	(*GroupsServiceAddResponse)(nil),    // 7: nuntio.users.v1alpha1.GroupsServiceAddResponse
	(*GroupsServiceListRequest)(nil),    // 8: nuntio.users.v1alpha1.GroupsServiceListRequest
	(*GroupsServiceListResponse)(nil),   // 9: nuntio.users.v1alpha1.GroupsServiceListResponse
	(*GroupsServiceDeleteRequest)(nil),  // 10: nuntio.users.v1alpha1.GroupsServiceDeleteRequest
	(*GroupsServiceDeleteResponse)(nil), // 11: nuntio.users.v1alpha1.GroupsServiceDeleteResponse
	(*GroupsServiceUpdateRequest)(nil),  // 12: nuntio.users.v1alpha1.GroupsServiceUpdateRequest
	(*GroupsServiceUpdateResponse)(nil), // 13: nuntio.users.v1alpha1.GroupsServiceUpdateResponse
	(*GroupsServiceGetRequest)(nil),     // 14: nuntio.users.v1alpha1.GroupsServiceGetRequest
	(*GroupsServiceGetResponse)(nil),    // 15: nuntio.users.v1alpha1.GroupsServiceGetResponse
	(*Group)(nil),                       // 16: nuntio.users.v1alpha1.Group
	(*UserIdentifier)(nil),              // 17: nuntio.users.v1alpha1.UserIdentifier
}
var file_nuntio_users_v1alpha1_users_groups_proto_depIdxs = []int32{
	16, // 0: nuntio.users.v1alpha1.GroupsServiceCreateResponse.group:type_name -> nuntio.users.v1alpha1.Group
	17, // 1: nuntio.users.v1alpha1.GroupsServiceRemoveRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	17, // 2: nuntio.users.v1alpha1.GroupsServiceAddRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	16, // 3: nuntio.users.v1alpha1.GroupsServiceListResponse.groups:type_name -> nuntio.users.v1alpha1.Group
	16, // 4: nuntio.users.v1alpha1.GroupsServiceGetResponse.group:type_name -> nuntio.users.v1alpha1.Group
	0,  // 5: nuntio.users.v1alpha1.GroupsService.Ping:input_type -> nuntio.users.v1alpha1.GroupsServicePingRequest
	2,  // 6: nuntio.users.v1alpha1.GroupsService.Create:input_type -> nuntio.users.v1alpha1.GroupsServiceCreateRequest
	4,  // 7: nuntio.users.v1alpha1.GroupsService.Remove:input_type -> nuntio.users.v1alpha1.GroupsServiceRemoveRequest
	6,  // 8: nuntio.users.v1alpha1.GroupsService.Add:input_type -> nuntio.users.v1alpha1.GroupsServiceAddRequest
	10, // 9: nuntio.users.v1alpha1.GroupsService.Delete:input_type -> nuntio.users.v1alpha1.GroupsServiceDeleteRequest
	8,  // 10: nuntio.users.v1alpha1.GroupsService.List:input_type -> nuntio.users.v1alpha1.GroupsServiceListRequest
	12, // 11: nuntio.users.v1alpha1.GroupsService.Update:input_type -> nuntio.users.v1alpha1.GroupsServiceUpdateRequest
	14, // 12: nuntio.users.v1alpha1.GroupsService.Get:input_type -> nuntio.users.v1alpha1.GroupsServiceGetRequest
	1,  // 13: nuntio.users.v1alpha1.GroupsService.Ping:output_type -> nuntio.users.v1alpha1.GroupsServicePingResponse
	3,  // 14: nuntio.users.v1alpha1.GroupsService.Create:output_type -> nuntio.users.v1alpha1.GroupsServiceCreateResponse
	5,  // 15: nuntio.users.v1alpha1.GroupsService.Remove:output_type -> nuntio.users.v1alpha1.GroupsServiceRemoveResponse
	7,  // 16: nuntio.users.v1alpha1.GroupsService.Add:output_type -> nuntio.users.v1alpha1.GroupsServiceAddResponse
	11, // 17: nuntio.users.v1alpha1.GroupsService.Delete:output_type -> nuntio.users.v1alpha1.GroupsServiceDeleteResponse
	9,  // 18: nuntio.users.v1alpha1.GroupsService.List:output_type -> nuntio.users.v1alpha1.GroupsServiceListResponse
	13, // 19: nuntio.users.v1alpha1.GroupsService.Update:output_type -> nuntio.users.v1alpha1.GroupsServiceUpdateResponse
	15, // 20: nuntio.users.v1alpha1.GroupsService.Get:output_type -> nuntio.users.v1alpha1.GroupsServiceGetResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_nuntio_users_v1alpha1_users_groups_proto_init() }
func file_nuntio_users_v1alpha1_users_groups_proto_init() {
	if File_nuntio_users_v1alpha1_users_groups_proto != nil {
		return
	}
	file_nuntio_users_v1alpha1_users_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceRemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceRemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceAddRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_groups_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupsServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuntio_users_v1alpha1_users_groups_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuntio_users_v1alpha1_users_groups_proto_goTypes,
		DependencyIndexes: file_nuntio_users_v1alpha1_users_groups_proto_depIdxs,
		MessageInfos:      file_nuntio_users_v1alpha1_users_groups_proto_msgTypes,
	}.Build()
	File_nuntio_users_v1alpha1_users_groups_proto = out.File
	file_nuntio_users_v1alpha1_users_groups_proto_rawDesc = nil
	file_nuntio_users_v1alpha1_users_groups_proto_goTypes = nil
	file_nuntio_users_v1alpha1_users_groups_proto_depIdxs = nil
}
