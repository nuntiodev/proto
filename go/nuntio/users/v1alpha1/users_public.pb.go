// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: nuntio/users/v1alpha1/users_public.proto

package v1alpha1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request of a Public.Login RPC
type PublicServiceLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Password   string          `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Namespace  string          `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *PublicServiceLoginRequest) Reset() {
	*x = PublicServiceLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceLoginRequest) ProtoMessage() {}

func (x *PublicServiceLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceLoginRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceLoginRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{0}
}

func (x *PublicServiceLoginRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *PublicServiceLoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PublicServiceLoginRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Public.Login RPC
type PublicServiceLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair  `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
	Status    LoginStatus `protobuf:"varint,2,opt,name=status,proto3,enum=nuntio.users.v1alpha1.LoginStatus" json:"status,omitempty"`
}

func (x *PublicServiceLoginResponse) Reset() {
	*x = PublicServiceLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceLoginResponse) ProtoMessage() {}

func (x *PublicServiceLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceLoginResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceLoginResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{1}
}

func (x *PublicServiceLoginResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

func (x *PublicServiceLoginResponse) GetStatus() LoginStatus {
	if x != nil {
		return x.Status
	}
	return LoginStatus_LOGIN_STATUS_UNSPECIFIED
}

// The request of a Public.Logout RPC
type PublicServiceLogoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken string `protobuf:"bytes,1,opt,name=accessToken,proto3" json:"accessToken,omitempty"`
}

func (x *PublicServiceLogoutRequest) Reset() {
	*x = PublicServiceLogoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceLogoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceLogoutRequest) ProtoMessage() {}

func (x *PublicServiceLogoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceLogoutRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceLogoutRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{2}
}

func (x *PublicServiceLogoutRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// The response of a Public.Logout RPC
type PublicServiceLogoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServiceLogoutResponse) Reset() {
	*x = PublicServiceLogoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceLogoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceLogoutResponse) ProtoMessage() {}

func (x *PublicServiceLogoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceLogoutResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceLogoutResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{3}
}

// The request of a Public.Get RPC
type PublicServiceGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The access token of the user
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *PublicServiceGetRequest) Reset() {
	*x = PublicServiceGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceGetRequest) ProtoMessage() {}

func (x *PublicServiceGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceGetRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceGetRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{4}
}

func (x *PublicServiceGetRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// The response of a Public.Get RPC
type PublicServiceGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *PublicServiceGetResponse) Reset() {
	*x = PublicServiceGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceGetResponse) ProtoMessage() {}

func (x *PublicServiceGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceGetResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceGetResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{5}
}

func (x *PublicServiceGetResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// The request of a Public.Create RPC
type PublicServiceRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIdentifier *UserIdentifier `protobuf:"bytes,1,opt,name=user_identifier,json=userIdentifier,proto3" json:"user_identifier,omitempty"`
	Password       string          `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Namespace      string          `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *PublicServiceRegisterRequest) Reset() {
	*x = PublicServiceRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceRegisterRequest) ProtoMessage() {}

func (x *PublicServiceRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceRegisterRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceRegisterRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{6}
}

func (x *PublicServiceRegisterRequest) GetUserIdentifier() *UserIdentifier {
	if x != nil {
		return x.UserIdentifier
	}
	return nil
}

func (x *PublicServiceRegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *PublicServiceRegisterRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Public.Create RPC
type PublicServiceRegisterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServiceRegisterResponse) Reset() {
	*x = PublicServiceRegisterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceRegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceRegisterResponse) ProtoMessage() {}

func (x *PublicServiceRegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceRegisterResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceRegisterResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{7}
}

// The request of a Public.SendResetPasswordEmail RPC
type PublicServiceSendResetPasswordEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email     string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *PublicServiceSendResetPasswordEmailRequest) Reset() {
	*x = PublicServiceSendResetPasswordEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceSendResetPasswordEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceSendResetPasswordEmailRequest) ProtoMessage() {}

func (x *PublicServiceSendResetPasswordEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceSendResetPasswordEmailRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceSendResetPasswordEmailRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{8}
}

func (x *PublicServiceSendResetPasswordEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *PublicServiceSendResetPasswordEmailRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Public.SendResetPasswordEmail RPC
type PublicServiceSendResetPasswordEmailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *PublicServiceSendResetPasswordEmailResponse) Reset() {
	*x = PublicServiceSendResetPasswordEmailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceSendResetPasswordEmailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceSendResetPasswordEmailResponse) ProtoMessage() {}

func (x *PublicServiceSendResetPasswordEmailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceSendResetPasswordEmailResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceSendResetPasswordEmailResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{9}
}

func (x *PublicServiceSendResetPasswordEmailResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Public.SendResetPasswordText RPC
type PublicServiceSendResetPasswordTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhoneNumber string `protobuf:"bytes,1,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *PublicServiceSendResetPasswordTextRequest) Reset() {
	*x = PublicServiceSendResetPasswordTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceSendResetPasswordTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceSendResetPasswordTextRequest) ProtoMessage() {}

func (x *PublicServiceSendResetPasswordTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceSendResetPasswordTextRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceSendResetPasswordTextRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{10}
}

func (x *PublicServiceSendResetPasswordTextRequest) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *PublicServiceSendResetPasswordTextRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Public.SendResetPasswordText RPC
type PublicServiceSendResetPasswordTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VerificationCode *VerificationCode `protobuf:"bytes,1,opt,name=verification_code,json=verificationCode,proto3" json:"verification_code,omitempty"`
}

func (x *PublicServiceSendResetPasswordTextResponse) Reset() {
	*x = PublicServiceSendResetPasswordTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceSendResetPasswordTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceSendResetPasswordTextResponse) ProtoMessage() {}

func (x *PublicServiceSendResetPasswordTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceSendResetPasswordTextResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceSendResetPasswordTextResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{11}
}

func (x *PublicServiceSendResetPasswordTextResponse) GetVerificationCode() *VerificationCode {
	if x != nil {
		return x.VerificationCode
	}
	return nil
}

// The request of a Public.ResetPassword RPC
type PublicServiceResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier  *UserIdentifier `protobuf:"bytes,1,opt,name=identifier,proto3" json:"identifier,omitempty"`
	Code        string          `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	NewPassword string          `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"new_password,omitempty"`
	Namespace   string          `protobuf:"bytes,4,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *PublicServiceResetPasswordRequest) Reset() {
	*x = PublicServiceResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceResetPasswordRequest) ProtoMessage() {}

func (x *PublicServiceResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{12}
}

func (x *PublicServiceResetPasswordRequest) GetIdentifier() *UserIdentifier {
	if x != nil {
		return x.Identifier
	}
	return nil
}

func (x *PublicServiceResetPasswordRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PublicServiceResetPasswordRequest) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *PublicServiceResetPasswordRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

// The response of a Public.ResetPassword RPC
type PublicServiceResetPasswordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServiceResetPasswordResponse) Reset() {
	*x = PublicServiceResetPasswordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceResetPasswordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceResetPasswordResponse) ProtoMessage() {}

func (x *PublicServiceResetPasswordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceResetPasswordResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceResetPasswordResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{13}
}

// The request of a Public.Delete RPC
type PublicServiceDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The access token of the user
	AccessToken string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
}

func (x *PublicServiceDeleteRequest) Reset() {
	*x = PublicServiceDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceDeleteRequest) ProtoMessage() {}

func (x *PublicServiceDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceDeleteRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceDeleteRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{14}
}

func (x *PublicServiceDeleteRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

// The response of a Public.Delete RPC
type PublicServiceDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServiceDeleteResponse) Reset() {
	*x = PublicServiceDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceDeleteResponse) ProtoMessage() {}

func (x *PublicServiceDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceDeleteResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceDeleteResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{15}
}

// The request of a Public.Delete RPC
type PublicServiceRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The access token of the user
	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *PublicServiceRefreshTokenRequest) Reset() {
	*x = PublicServiceRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceRefreshTokenRequest) ProtoMessage() {}

func (x *PublicServiceRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{16}
}

func (x *PublicServiceRefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

// The response of a Public.Delete RPC
type PublicServiceRefreshTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPair *TokenPair `protobuf:"bytes,1,opt,name=token_pair,json=tokenPair,proto3" json:"token_pair,omitempty"`
}

func (x *PublicServiceRefreshTokenResponse) Reset() {
	*x = PublicServiceRefreshTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceRefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceRefreshTokenResponse) ProtoMessage() {}

func (x *PublicServiceRefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceRefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceRefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{17}
}

func (x *PublicServiceRefreshTokenResponse) GetTokenPair() *TokenPair {
	if x != nil {
		return x.TokenPair
	}
	return nil
}

// The request of a Public.AuthenticationServiceInitializeAuthRequest RPC
type PublicServiceInitializeAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The namespace to perform action in
	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Optional redirect address for OAuth2
	RedirectAddr *string `protobuf:"bytes,2,opt,name=redirect_addr,json=redirectAddr,proto3,oneof" json:"redirect_addr,omitempty"`
}

func (x *PublicServiceInitializeAuthRequest) Reset() {
	*x = PublicServiceInitializeAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceInitializeAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceInitializeAuthRequest) ProtoMessage() {}

func (x *PublicServiceInitializeAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceInitializeAuthRequest.ProtoReflect.Descriptor instead.
func (*PublicServiceInitializeAuthRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{18}
}

func (x *PublicServiceInitializeAuthRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *PublicServiceInitializeAuthRequest) GetRedirectAddr() string {
	if x != nil && x.RedirectAddr != nil {
		return *x.RedirectAddr
	}
	return ""
}

// The response of a Public.AuthenticationServiceInitializeAuthRequest RPC
type PublicServiceInitializeAuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the namespace
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The logo of the namespace
	Logo string `protobuf:"bytes,2,opt,name=logo,proto3" json:"logo,omitempty"`
	// If to validate password
	ValidatePassword bool `protobuf:"varint,3,opt,name=validate_password,json=validatePassword,proto3" json:"validate_password,omitempty"`
	// The public key of Users
	PublicKey string `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// Array of supported login types
	LoginMechanisms []LoginType `protobuf:"varint,5,rep,packed,name=login_mechanisms,json=loginMechanisms,proto3,enum=nuntio.users.v1alpha1.LoginType" json:"login_mechanisms,omitempty"`
	// Array of callbacks
	Callbacks      []string        `protobuf:"bytes,6,rep,name=callbacks,proto3" json:"callbacks,omitempty"`
	OauthProviders *OAuthProviders `protobuf:"bytes,7,opt,name=oauth_providers,json=oauthProviders,proto3" json:"oauth_providers,omitempty"`
}

func (x *PublicServiceInitializeAuthResponse) Reset() {
	*x = PublicServiceInitializeAuthResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServiceInitializeAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServiceInitializeAuthResponse) ProtoMessage() {}

func (x *PublicServiceInitializeAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServiceInitializeAuthResponse.ProtoReflect.Descriptor instead.
func (*PublicServiceInitializeAuthResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{19}
}

func (x *PublicServiceInitializeAuthResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicServiceInitializeAuthResponse) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *PublicServiceInitializeAuthResponse) GetValidatePassword() bool {
	if x != nil {
		return x.ValidatePassword
	}
	return false
}

func (x *PublicServiceInitializeAuthResponse) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *PublicServiceInitializeAuthResponse) GetLoginMechanisms() []LoginType {
	if x != nil {
		return x.LoginMechanisms
	}
	return nil
}

func (x *PublicServiceInitializeAuthResponse) GetCallbacks() []string {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

func (x *PublicServiceInitializeAuthResponse) GetOauthProviders() *OAuthProviders {
	if x != nil {
		return x.OauthProviders
	}
	return nil
}

// The request of a Public.Ping RPC
type PublicServicePingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServicePingRequest) Reset() {
	*x = PublicServicePingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServicePingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServicePingRequest) ProtoMessage() {}

func (x *PublicServicePingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServicePingRequest.ProtoReflect.Descriptor instead.
func (*PublicServicePingRequest) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{20}
}

// The response of a Public.Ping RPC
type PublicServicePingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PublicServicePingResponse) Reset() {
	*x = PublicServicePingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicServicePingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicServicePingResponse) ProtoMessage() {}

func (x *PublicServicePingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nuntio_users_v1alpha1_users_public_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicServicePingResponse.ProtoReflect.Descriptor instead.
func (*PublicServicePingResponse) Descriptor() ([]byte, []int) {
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP(), []int{21}
}

var File_nuntio_users_v1alpha1_users_public_proto protoreflect.FileDescriptor

var file_nuntio_users_v1alpha1_users_public_proto_rawDesc = []byte{
	0x0a, 0x28, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x1a, 0x2a, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9c, 0x01,
	0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3e, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x17, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4b, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0xa8, 0x01, 0x0a, 0x1c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x1f, 0x0a,
	0x1d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60,
	0x0a, 0x2a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x22, 0x83, 0x01, 0x0a, 0x2b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x29, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x2a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x21, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x45, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65,
	0x77, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x24, 0x0a, 0x22, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3f, 0x0a, 0x1a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x1d, 0x0a, 0x1b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x47, 0x0a, 0x20, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x64, 0x0a, 0x21, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3f, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x50, 0x61, 0x69, 0x72, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x61, 0x69, 0x72,
	0x22, 0x7e, 0x0a, 0x22, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x88, 0x01, 0x01, 0x42, 0x10,
	0x0a, 0x0e, 0x5f, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x22, 0xd4, 0x02, 0x0a, 0x23, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x12, 0x2b, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x4b, 0x0a, 0x10,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4d,
	0x65, 0x63, 0x68, 0x61, 0x6e, 0x69, 0x73, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x4e, 0x0a, 0x0f, 0x6f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x52, 0x0e, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x32, 0x95, 0x0b, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6b, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x2f, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x6e, 0x75,
	0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x6e, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x30, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x31, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x68, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2e, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x77, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69,
	0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa1, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x42, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9e, 0x01, 0x0a, 0x15, 0x53, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x40, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x41, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x86, 0x01, 0x0a, 0x0d, 0x52,
	0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x38, 0x2e, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x31, 0x2e,
	0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x32, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x37, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x38, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x89, 0x01, 0x0a,
	0x0e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12,
	0x39, 0x2e, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3a, 0x2e, 0x6e, 0x75, 0x6e,
	0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x15, 0x6e, 0x75, 0x6e, 0x74,
	0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x50, 0x01, 0x5a, 0x17, 0x2e, 0x2f, 0x6e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0xaa, 0x02, 0x15, 0x6e,
	0x75, 0x6e, 0x74, 0x69, 0x6f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0xca, 0x02, 0x15, 0x4e, 0x75, 0x6e, 0x74, 0x69, 0x6f, 0x5c, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x5c, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nuntio_users_v1alpha1_users_public_proto_rawDescOnce sync.Once
	file_nuntio_users_v1alpha1_users_public_proto_rawDescData = file_nuntio_users_v1alpha1_users_public_proto_rawDesc
)

func file_nuntio_users_v1alpha1_users_public_proto_rawDescGZIP() []byte {
	file_nuntio_users_v1alpha1_users_public_proto_rawDescOnce.Do(func() {
		file_nuntio_users_v1alpha1_users_public_proto_rawDescData = protoimpl.X.CompressGZIP(file_nuntio_users_v1alpha1_users_public_proto_rawDescData)
	})
	return file_nuntio_users_v1alpha1_users_public_proto_rawDescData
}

var file_nuntio_users_v1alpha1_users_public_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_nuntio_users_v1alpha1_users_public_proto_goTypes = []interface{}{
	(*PublicServiceLoginRequest)(nil),                   // 0: nuntio.users.v1alpha1.PublicServiceLoginRequest
	(*PublicServiceLoginResponse)(nil),                  // 1: nuntio.users.v1alpha1.PublicServiceLoginResponse
	(*PublicServiceLogoutRequest)(nil),                  // 2: nuntio.users.v1alpha1.PublicServiceLogoutRequest
	(*PublicServiceLogoutResponse)(nil),                 // 3: nuntio.users.v1alpha1.PublicServiceLogoutResponse
	(*PublicServiceGetRequest)(nil),                     // 4: nuntio.users.v1alpha1.PublicServiceGetRequest
	(*PublicServiceGetResponse)(nil),                    // 5: nuntio.users.v1alpha1.PublicServiceGetResponse
	(*PublicServiceRegisterRequest)(nil),                // 6: nuntio.users.v1alpha1.PublicServiceRegisterRequest
	(*PublicServiceRegisterResponse)(nil),               // 7: nuntio.users.v1alpha1.PublicServiceRegisterResponse
	(*PublicServiceSendResetPasswordEmailRequest)(nil),  // 8: nuntio.users.v1alpha1.PublicServiceSendResetPasswordEmailRequest
	(*PublicServiceSendResetPasswordEmailResponse)(nil), // 9: nuntio.users.v1alpha1.PublicServiceSendResetPasswordEmailResponse
	(*PublicServiceSendResetPasswordTextRequest)(nil),   // 10: nuntio.users.v1alpha1.PublicServiceSendResetPasswordTextRequest
	(*PublicServiceSendResetPasswordTextResponse)(nil),  // 11: nuntio.users.v1alpha1.PublicServiceSendResetPasswordTextResponse
	(*PublicServiceResetPasswordRequest)(nil),           // 12: nuntio.users.v1alpha1.PublicServiceResetPasswordRequest
	(*PublicServiceResetPasswordResponse)(nil),          // 13: nuntio.users.v1alpha1.PublicServiceResetPasswordResponse
	(*PublicServiceDeleteRequest)(nil),                  // 14: nuntio.users.v1alpha1.PublicServiceDeleteRequest
	(*PublicServiceDeleteResponse)(nil),                 // 15: nuntio.users.v1alpha1.PublicServiceDeleteResponse
	(*PublicServiceRefreshTokenRequest)(nil),            // 16: nuntio.users.v1alpha1.PublicServiceRefreshTokenRequest
	(*PublicServiceRefreshTokenResponse)(nil),           // 17: nuntio.users.v1alpha1.PublicServiceRefreshTokenResponse
	(*PublicServiceInitializeAuthRequest)(nil),          // 18: nuntio.users.v1alpha1.PublicServiceInitializeAuthRequest
	(*PublicServiceInitializeAuthResponse)(nil),         // 19: nuntio.users.v1alpha1.PublicServiceInitializeAuthResponse
	(*PublicServicePingRequest)(nil),                    // 20: nuntio.users.v1alpha1.PublicServicePingRequest
	(*PublicServicePingResponse)(nil),                   // 21: nuntio.users.v1alpha1.PublicServicePingResponse
	(*UserIdentifier)(nil),                              // 22: nuntio.users.v1alpha1.UserIdentifier
	(*TokenPair)(nil),                                   // 23: nuntio.users.v1alpha1.TokenPair
	(LoginStatus)(0),                                    // 24: nuntio.users.v1alpha1.LoginStatus
	(*User)(nil),                                        // 25: nuntio.users.v1alpha1.User
	(*VerificationCode)(nil),                            // 26: nuntio.users.v1alpha1.VerificationCode
	(LoginType)(0),                                      // 27: nuntio.users.v1alpha1.LoginType
	(*OAuthProviders)(nil),                              // 28: nuntio.users.v1alpha1.OAuthProviders
}
var file_nuntio_users_v1alpha1_users_public_proto_depIdxs = []int32{
	22, // 0: nuntio.users.v1alpha1.PublicServiceLoginRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	23, // 1: nuntio.users.v1alpha1.PublicServiceLoginResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	24, // 2: nuntio.users.v1alpha1.PublicServiceLoginResponse.status:type_name -> nuntio.users.v1alpha1.LoginStatus
	25, // 3: nuntio.users.v1alpha1.PublicServiceGetResponse.user:type_name -> nuntio.users.v1alpha1.User
	22, // 4: nuntio.users.v1alpha1.PublicServiceRegisterRequest.user_identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	26, // 5: nuntio.users.v1alpha1.PublicServiceSendResetPasswordEmailResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	26, // 6: nuntio.users.v1alpha1.PublicServiceSendResetPasswordTextResponse.verification_code:type_name -> nuntio.users.v1alpha1.VerificationCode
	22, // 7: nuntio.users.v1alpha1.PublicServiceResetPasswordRequest.identifier:type_name -> nuntio.users.v1alpha1.UserIdentifier
	23, // 8: nuntio.users.v1alpha1.PublicServiceRefreshTokenResponse.token_pair:type_name -> nuntio.users.v1alpha1.TokenPair
	27, // 9: nuntio.users.v1alpha1.PublicServiceInitializeAuthResponse.login_mechanisms:type_name -> nuntio.users.v1alpha1.LoginType
	28, // 10: nuntio.users.v1alpha1.PublicServiceInitializeAuthResponse.oauth_providers:type_name -> nuntio.users.v1alpha1.OAuthProviders
	20, // 11: nuntio.users.v1alpha1.PublicService.Ping:input_type -> nuntio.users.v1alpha1.PublicServicePingRequest
	0,  // 12: nuntio.users.v1alpha1.PublicService.Login:input_type -> nuntio.users.v1alpha1.PublicServiceLoginRequest
	2,  // 13: nuntio.users.v1alpha1.PublicService.Logout:input_type -> nuntio.users.v1alpha1.PublicServiceLogoutRequest
	4,  // 14: nuntio.users.v1alpha1.PublicService.Get:input_type -> nuntio.users.v1alpha1.PublicServiceGetRequest
	6,  // 15: nuntio.users.v1alpha1.PublicService.Register:input_type -> nuntio.users.v1alpha1.PublicServiceRegisterRequest
	8,  // 16: nuntio.users.v1alpha1.PublicService.SendResetPasswordEmail:input_type -> nuntio.users.v1alpha1.PublicServiceSendResetPasswordEmailRequest
	10, // 17: nuntio.users.v1alpha1.PublicService.SendResetPasswordText:input_type -> nuntio.users.v1alpha1.PublicServiceSendResetPasswordTextRequest
	12, // 18: nuntio.users.v1alpha1.PublicService.ResetPassword:input_type -> nuntio.users.v1alpha1.PublicServiceResetPasswordRequest
	14, // 19: nuntio.users.v1alpha1.PublicService.Delete:input_type -> nuntio.users.v1alpha1.PublicServiceDeleteRequest
	16, // 20: nuntio.users.v1alpha1.PublicService.RefreshToken:input_type -> nuntio.users.v1alpha1.PublicServiceRefreshTokenRequest
	18, // 21: nuntio.users.v1alpha1.PublicService.InitializeAuth:input_type -> nuntio.users.v1alpha1.PublicServiceInitializeAuthRequest
	21, // 22: nuntio.users.v1alpha1.PublicService.Ping:output_type -> nuntio.users.v1alpha1.PublicServicePingResponse
	1,  // 23: nuntio.users.v1alpha1.PublicService.Login:output_type -> nuntio.users.v1alpha1.PublicServiceLoginResponse
	3,  // 24: nuntio.users.v1alpha1.PublicService.Logout:output_type -> nuntio.users.v1alpha1.PublicServiceLogoutResponse
	5,  // 25: nuntio.users.v1alpha1.PublicService.Get:output_type -> nuntio.users.v1alpha1.PublicServiceGetResponse
	7,  // 26: nuntio.users.v1alpha1.PublicService.Register:output_type -> nuntio.users.v1alpha1.PublicServiceRegisterResponse
	9,  // 27: nuntio.users.v1alpha1.PublicService.SendResetPasswordEmail:output_type -> nuntio.users.v1alpha1.PublicServiceSendResetPasswordEmailResponse
	11, // 28: nuntio.users.v1alpha1.PublicService.SendResetPasswordText:output_type -> nuntio.users.v1alpha1.PublicServiceSendResetPasswordTextResponse
	13, // 29: nuntio.users.v1alpha1.PublicService.ResetPassword:output_type -> nuntio.users.v1alpha1.PublicServiceResetPasswordResponse
	15, // 30: nuntio.users.v1alpha1.PublicService.Delete:output_type -> nuntio.users.v1alpha1.PublicServiceDeleteResponse
	17, // 31: nuntio.users.v1alpha1.PublicService.RefreshToken:output_type -> nuntio.users.v1alpha1.PublicServiceRefreshTokenResponse
	19, // 32: nuntio.users.v1alpha1.PublicService.InitializeAuth:output_type -> nuntio.users.v1alpha1.PublicServiceInitializeAuthResponse
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_nuntio_users_v1alpha1_users_public_proto_init() }
func file_nuntio_users_v1alpha1_users_public_proto_init() {
	if File_nuntio_users_v1alpha1_users_public_proto != nil {
		return
	}
	file_nuntio_users_v1alpha1_users_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceLogoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceLogoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceRegisterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceSendResetPasswordEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceSendResetPasswordEmailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceSendResetPasswordTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceSendResetPasswordTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceResetPasswordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceRefreshTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceInitializeAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServiceInitializeAuthResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServicePingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nuntio_users_v1alpha1_users_public_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicServicePingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_nuntio_users_v1alpha1_users_public_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nuntio_users_v1alpha1_users_public_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nuntio_users_v1alpha1_users_public_proto_goTypes,
		DependencyIndexes: file_nuntio_users_v1alpha1_users_public_proto_depIdxs,
		MessageInfos:      file_nuntio_users_v1alpha1_users_public_proto_msgTypes,
	}.Build()
	File_nuntio_users_v1alpha1_users_public_proto = out.File
	file_nuntio_users_v1alpha1_users_public_proto_rawDesc = nil
	file_nuntio_users_v1alpha1_users_public_proto_goTypes = nil
	file_nuntio_users_v1alpha1_users_public_proto_depIdxs = nil
}
