// source: nuntio/users/v1alpha1/users_users.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var nuntio_users_v1alpha1_users_messages_pb = require('../../../nuntio/users/v1alpha1/users_messages_pb.js');
goog.object.extend(proto, nuntio_users_v1alpha1_users_messages_pb);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceCreateRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceCreateResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceListRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceListResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServicePingRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServicePingResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceSearchRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceSearchResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest', null, global);
goog.exportSymbol('proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServicePingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServicePingRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServicePingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServicePingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServicePingResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServicePingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceListResponse.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceListResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceListResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceListRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.repeatedFields_, null);
};
goog.inherits(proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.displayName = 'proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServicePingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServicePingRequest}
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServicePingRequest;
  return proto.nuntio.users.v1alpha1.UsersServicePingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServicePingRequest}
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServicePingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServicePingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServicePingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServicePingResponse}
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServicePingResponse;
  return proto.nuntio.users.v1alpha1.UsersServicePingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServicePingResponse}
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServicePingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServicePingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServicePingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && nuntio_users_v1alpha1_users_messages_pb.User.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceCreateRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.getUser = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.User} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.User|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && nuntio_users_v1alpha1_users_messages_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceCreateResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.getUser = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.User} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.User|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceCreateResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceCreateResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional UserIdentifier identifier = 1;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string password = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordRequest.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdatePasswordResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    profile: (f = msg.getProfile()) && nuntio_users_v1alpha1_users_messages_pb.Profile.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = new nuntio_users_v1alpha1_users_messages_pb.Profile;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      nuntio_users_v1alpha1_users_messages_pb.Profile.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserIdentifier identifier = 1;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Profile profile = 3;
 * @return {?proto.nuntio.users.v1alpha1.Profile}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.getProfile = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Profile} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.Profile, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Profile|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileRequest.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateProfileResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    username: jspb.Message.getFieldWithDefault(msg, 3, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 4, ""),
    email: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional UserIdentifier identifier = 1;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string username = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.setUsername = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.clearUsername = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string phone = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.setPhone = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.clearPhone = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string email = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.setEmail = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.clearEmail = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUpdateContactInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional UserIdentifier identifier = 3;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadProfileImageResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    data: msg.getData_asB64(),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes data = 1;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional UserIdentifier identifier = 3;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceUploadCoverImageResponse.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional UserIdentifier identifier = 1;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && nuntio_users_v1alpha1_users_messages_pb.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceGetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.getUser = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.User} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.User|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    from: jspb.Message.getFieldWithDefault(msg, 3, 0),
    to: jspb.Message.getFieldWithDefault(msg, 4, 0),
    accepted: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAccepted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 from = 3;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 to = 4;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool accepted = 5;
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.getAccepted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.setAccepted = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.clearAccepted = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsRequest.prototype.hasAccepted = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifier: (f = msg.getIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setIdentifier(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifier();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional UserIdentifier identifier = 1;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.getIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.setIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.clearIdentifier = function() {
  return this.setIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.hasIdentifier = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokensList: jspb.Message.toObjectList(msg.getTokensList(),
    nuntio_users_v1alpha1_users_messages_pb.TokenMeta.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.TokenMeta;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.TokenMeta.deserializeBinaryFromReader);
      msg.addTokens(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.TokenMeta.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TokenMeta tokens = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.TokenMeta>}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.getTokensList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.TokenMeta>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.TokenMeta, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.TokenMeta>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.setTokensList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.TokenMeta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.TokenMeta}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.addTokens = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.TokenMeta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetTokensResponse.prototype.clearTokensList = function() {
  return this.setTokensList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    nuntio_users_v1alpha1_users_messages_pb.User.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceListResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.User>}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.User>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    nuntio_users_v1alpha1_users_messages_pb.User.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.User>}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.User>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    nuntio_users_v1alpha1_users_messages_pb.User.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceSearchResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.User;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.User.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated User users = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.User>}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.User>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.User, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.User>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.setUsersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.User=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.User}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.User, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.clearUsersList = function() {
  return this.setUsersList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    from: jspb.Message.getFieldWithDefault(msg, 3, 0),
    to: jspb.Message.getFieldWithDefault(msg, 4, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceSearchRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.setQuery = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 from = 3;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 to = 4;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string group_id = 5;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceSearchRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.clearGroupId = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceSearchRequest.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiersList: jspb.Message.toObjectList(msg.getIdentifiersList(),
    nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject, includeInstance),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.addIdentifiers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated UserIdentifier identifiers = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.getIdentifiersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.setIdentifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.UserIdentifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.addIdentifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.UserIdentifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.clearIdentifiersList = function() {
  return this.setIdentifiersList([]);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetManyRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    identifiersList: jspb.Message.toObjectList(msg.getIdentifiersList(),
    nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject, includeInstance),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.addIdentifiers(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdentifiersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated UserIdentifier identifiers = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.getIdentifiersList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.UserIdentifier>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.setIdentifiersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.UserIdentifier=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.addIdentifiers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.UserIdentifier, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.clearIdentifiersList = function() {
  return this.setIdentifiersList([]);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceDeleteManyResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: jspb.Message.getFieldWithDefault(msg, 2, 0),
    to: jspb.Message.getFieldWithDefault(msg, 3, 0),
    groupId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceListRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 from = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 to = 3;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string group_id = 4;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.setGroupId = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceListRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.clearGroupId = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceListRequest.prototype.hasGroupId = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    namespace: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fromIdentifier: (f = msg.getFromIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f),
    toIdentifier: (f = msg.getToIdentifier()) && nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 2:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setFromIdentifier(value);
      break;
    case 3:
      var value = new nuntio_users_v1alpha1_users_messages_pb.UserIdentifier;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.deserializeBinaryFromReader);
      msg.setToIdentifier(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFromIdentifier();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
  f = message.getToIdentifier();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      nuntio_users_v1alpha1_users_messages_pb.UserIdentifier.serializeBinaryToWriter
    );
  }
};


/**
 * optional string namespace = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UserIdentifier from_identifier = 2;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.getFromIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 2));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.setFromIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.clearFromIdentifier = function() {
  return this.setFromIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.hasFromIdentifier = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional UserIdentifier to_identifier = 3;
 * @return {?proto.nuntio.users.v1alpha1.UserIdentifier}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.getToIdentifier = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.UserIdentifier} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.UserIdentifier, 3));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.UserIdentifier|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.setToIdentifier = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.clearToIdentifier = function() {
  return this.setToIdentifier(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactRequest.prototype.hasToIdentifier = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contact: (f = msg.getContact()) && nuntio_users_v1alpha1_users_messages_pb.Contact.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.Contact;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.Contact.deserializeBinaryFromReader);
      msg.setContact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContact();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.Contact.serializeBinaryToWriter
    );
  }
};


/**
 * optional Contact contact = 1;
 * @return {?proto.nuntio.users.v1alpha1.Contact}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.getContact = function() {
  return /** @type{?proto.nuntio.users.v1alpha1.Contact} */ (
    jspb.Message.getWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.Contact, 1));
};


/**
 * @param {?proto.nuntio.users.v1alpha1.Contact|undefined} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.setContact = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.clearContact = function() {
  return this.setContact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.nuntio.users.v1alpha1.UsersServiceAddContactResponse.prototype.hasContact = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string contact_id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceRemoveContactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    namespace: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest;
  return proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContactId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNamespace(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNamespace();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string contact_id = 1;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.getContactId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.setContactId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string namespace = 2;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.getNamespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.setNamespace = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string user_id = 3;
 * @return {string}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactRequest.prototype.setUserId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceAcceptContactResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contactsList: jspb.Message.toObjectList(msg.getContactsList(),
    nuntio_users_v1alpha1_users_messages_pb.Contact.toObject, includeInstance),
    count: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse;
  return proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new nuntio_users_v1alpha1_users_messages_pb.Contact;
      reader.readMessage(value,nuntio_users_v1alpha1_users_messages_pb.Contact.deserializeBinaryFromReader);
      msg.addContacts(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContactsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      nuntio_users_v1alpha1_users_messages_pb.Contact.serializeBinaryToWriter
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * repeated Contact contacts = 1;
 * @return {!Array<!proto.nuntio.users.v1alpha1.Contact>}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.getContactsList = function() {
  return /** @type{!Array<!proto.nuntio.users.v1alpha1.Contact>} */ (
    jspb.Message.getRepeatedWrapperField(this, nuntio_users_v1alpha1_users_messages_pb.Contact, 1));
};


/**
 * @param {!Array<!proto.nuntio.users.v1alpha1.Contact>} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} returns this
*/
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.setContactsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.nuntio.users.v1alpha1.Contact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.nuntio.users.v1alpha1.Contact}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.addContacts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.nuntio.users.v1alpha1.Contact, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.clearContactsList = function() {
  return this.setContactsList([]);
};


/**
 * optional int64 count = 2;
 * @return {number}
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse} returns this
 */
proto.nuntio.users.v1alpha1.UsersServiceGetContactsResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


goog.object.extend(exports, proto.nuntio.users.v1alpha1);
